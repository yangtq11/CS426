Script started on 2021-10-26 23:57:45-0700
Building CgenClassTable
declare i32 @strcmp(i8*, i8*)
declare i32 @printf(i8*, ...)
declare void @abort()
declare i8* @malloc(i32)
declare %Object* @Object_new()
declare %Object* @Object_abort(%Object*)
declare %String* @Object_type_name(%Object*)
declare %Object* @Object_copy(%Object*)
declare %IO* @IO_new()
declare %IO* @IO_out_string(%IO*, %String*)
declare %IO* @IO_out_int(%IO*, i32)
declare %String* @IO_in_string(%IO*)
declare i32 @IO_in_int(%IO*)
declare %String* @String_new()
declare i32 @String_length(%String*)
declare %String* @String_concat(%String*, %String*)
declare %String* @String_substr(%String*, i32, i32)
declare %Int* @Int_new()
declare void @Int_init(%Int*, i32)
declare %Bool* @Bool_new()
declare void @Bool_init(%Bool*, i1)
method layout
method layout
method layout
@str.Object = internal constant [7 x i8] c"Object\00"
%Object = type {
	%Object_vtable*
}

%Object_vtable = type {
	i32,
	i32,
	i8*,
	%Object* () *,
	%Object* (%Object*) *,
	%String* (%Object*) *,
	%Object* (%Object*) *
}

@Object_vtable_prototype = constant %Object_vtable {
	i32 0,
	i32 ptrtoint (%Object* getelementptr (%Object, %Object* null, i32 1) to i32),
	i8* getelementptr ([7 x i8], [7 x i8]* @str.Object, i32 0, i32 0),
	%Object* () * @Object_new,
	%Object* (%Object*) * @Object_abort,
	%String* (%Object*) * @Object_type_name,
	%Object* (%Object*) * @Object_copy
}

@str.Int = internal constant [4 x i8] c"Int\00"
%Int = type {
	%Int_vtable*,
	i32
}

%Int_vtable = type {
	i32,
	i32,
	i8*,
	%Int* () *,
	%Object* (%Int*) *,
	%String* (%Int*) *,
	%Int* (%Int*) *
}

@Int_vtable_prototype = constant %Int_vtable {
	i32 1,
	i32 ptrtoint (%Int* getelementptr (%Int, %Int* null, i32 1) to i32),
	i8* getelementptr ([4 x i8], [4 x i8]* @str.Int, i32 0, i32 0),
	%Int* () * @Int_new,
	%Object* (%Int*) * bitcast (%Object* (%Object*) * @Object_abort to %Object* (%Int*) *),
	%String* (%Int*) * bitcast (%String* (%Object*) * @Object_type_name to %String* (%Int*) *),
	%Int* (%Int*) * bitcast (%Object* (%Object*) * @Object_copy to %Int* (%Int*) *)
}

@str.Bool = internal constant [5 x i8] c"Bool\00"
%Bool = type {
	%Bool_vtable*,
	i1
}

%Bool_vtable = type {
	i32,
	i32,
	i8*,
	%Bool* () *,
	%Object* (%Bool*) *,
	%String* (%Bool*) *,
	%Bool* (%Bool*) *
}

@Bool_vtable_prototype = constant %Bool_vtable {
	i32 2,
	i32 ptrtoint (%Bool* getelementptr (%Bool, %Bool* null, i32 1) to i32),
	i8* getelementptr ([5 x i8], [5 x i8]* @str.Bool, i32 0, i32 0),
	%Bool* () * @Bool_new,
	%Object* (%Bool*) * bitcast (%Object* (%Object*) * @Object_abort to %Object* (%Bool*) *),
	%String* (%Bool*) * bitcast (%String* (%Object*) * @Object_type_name to %String* (%Bool*) *),
	%Bool* (%Bool*) * bitcast (%Object* (%Object*) * @Object_copy to %Bool* (%Bool*) *)
}

method layout
method layout
method layout
@str.String = internal constant [7 x i8] c"String\00"
%String = type {
	%String_vtable*,
	i8*
}

%String_vtable = type {
	i32,
	i32,
	i8*,
	%String* () *,
	%Object* (%String*) *,
	%String* (%String*) *,
	%String* (%String*) *,
	i32 (%String*) *,
	%String* (%String*,%String*) *,
	%String* (%String*,i32,i32) *
}

@String_vtable_prototype = constant %String_vtable {
	i32 3,
	i32 ptrtoint (%String* getelementptr (%String, %String* null, i32 1) to i32),
	i8* getelementptr ([7 x i8], [7 x i8]* @str.String, i32 0, i32 0),
	%String* () * @String_new,
	%Object* (%String*) * bitcast (%Object* (%Object*) * @Object_abort to %Object* (%String*) *),
	%String* (%String*) * bitcast (%String* (%Object*) * @Object_type_name to %String* (%String*) *),
	%String* (%String*) * bitcast (%Object* (%Object*) * @Object_copy to %String* (%String*) *),
	i32 (%String*) * @String_length,
	%String* (%String*,%String*) * @String_concat,
	%String* (%String*,i32,i32) * @String_substr
}

method layout
method layout
method layout
method layout
@str.IO = internal constant [3 x i8] c"IO\00"
%IO = type {
	%IO_vtable*
}

%IO_vtable = type {
	i32,
	i32,
	i8*,
	%IO* () *,
	%Object* (%IO*) *,
	%String* (%IO*) *,
	%IO* (%IO*) *,
	%IO* (%IO*,%String*) *,
	%IO* (%IO*,i32) *,
	%String* (%IO*) *,
	i32 (%IO*) *
}

@IO_vtable_prototype = constant %IO_vtable {
	i32 4,
	i32 ptrtoint (%IO* getelementptr (%IO, %IO* null, i32 1) to i32),
	i8* getelementptr ([3 x i8], [3 x i8]* @str.IO, i32 0, i32 0),
	%IO* () * @IO_new,
	%Object* (%IO*) * bitcast (%Object* (%Object*) * @Object_abort to %Object* (%IO*) *),
	%String* (%IO*) * bitcast (%String* (%Object*) * @Object_type_name to %String* (%IO*) *),
	%IO* (%IO*) * bitcast (%Object* (%Object*) * @Object_copy to %IO* (%IO*) *),
	%IO* (%IO*,%String*) * @IO_out_string,
	%IO* (%IO*,i32) * @IO_out_int,
	%String* (%IO*) * @IO_in_string,
	i32 (%IO*) * @IO_in_int
}

method layout
method layout
method layout
method layout
method layout
method layout
method layout
@str.Main = internal constant [5 x i8] c"Main\00"
setup_inherited_class Main
%Main = type {
	%Main_vtable*,
	%String*,
	%A*,
	%A*,
	i1
}

%Main_vtable = type {
	i32,
	i32,
	i8*,
	%Main* () *,
	%Object* (%Main*) *,
	%String* (%Main*) *,
	%Main* (%Main*) *,
	%Main* (%Main*,%String*) *,
	%Main* (%Main*,i32) *,
	%String* (%Main*) *,
	i32 (%Main*) *,
	%String* (%Main*) *,
	%String* (%Main*) *,
	i32 (%Main*) *,
	i1 (%Main*,i32) *,
	%Main* (%Main*,%A*) *,
	%Main* (%Main*,%A*) *,
	%Object* (%Main*) *
}

@Main_vtable_prototype = constant %Main_vtable {
	i32 5,
	i32 ptrtoint (%Main* getelementptr (%Main, %Main* null, i32 1) to i32),
	i8* getelementptr ([5 x i8], [5 x i8]* @str.Main, i32 0, i32 0),
	%Main* () * @Main_new,
	%Object* (%Main*) * bitcast (%Object* (%Object*) * @Object_abort to %Object* (%Main*) *),
	%String* (%Main*) * bitcast (%String* (%Object*) * @Object_type_name to %String* (%Main*) *),
	%Main* (%Main*) * bitcast (%Object* (%Object*) * @Object_copy to %Main* (%Main*) *),
	%Main* (%Main*,%String*) * bitcast (%IO* (%IO*,%String*) * @IO_out_string to %Main* (%Main*,%String*) *),
	%Main* (%Main*,i32) * bitcast (%IO* (%IO*,i32) * @IO_out_int to %Main* (%Main*,i32) *),
	%String* (%Main*) * bitcast (%String* (%IO*) * @IO_in_string to %String* (%Main*) *),
	i32 (%Main*) * bitcast (i32 (%IO*) * @IO_in_int to i32 (%Main*) *),
	%String* (%Main*) * @Main_menu,
	%String* (%Main*) * @Main_prompt,
	i32 (%Main*) * @Main_get_int,
	i1 (%Main*,i32) * @Main_is_even,
	%Main* (%Main*,%A*) * @Main_class_type,
	%Main* (%Main*,%A*) * @Main_print,
	%Object* (%Main*) * @Main_main
}

method layout
method layout
method layout
method layout
method layout
method layout
method layout
@str.A = internal constant [2 x i8] c"A\00"
setup_inherited_class A
%A = type {
	%A_vtable*,
	i32
}

%A_vtable = type {
	i32,
	i32,
	i8*,
	%A* () *,
	%Object* (%A*) *,
	%String* (%A*) *,
	%A* (%A*) *,
	i32 (%A*) *,
	%A* (%A*,i32) *,
	%A* (%A*,i32) *,
	%B* (%A*,i32,i32) *,
	%C* (%A*,i32) *,
	%D* (%A*,i32,i32) *,
	%E* (%A*,i32) *
}

@A_vtable_prototype = constant %A_vtable {
	i32 6,
	i32 ptrtoint (%A* getelementptr (%A, %A* null, i32 1) to i32),
	i8* getelementptr ([2 x i8], [2 x i8]* @str.A, i32 0, i32 0),
	%A* () * @A_new,
	%Object* (%A*) * bitcast (%Object* (%Object*) * @Object_abort to %Object* (%A*) *),
	%String* (%A*) * bitcast (%String* (%Object*) * @Object_type_name to %String* (%A*) *),
	%A* (%A*) * bitcast (%Object* (%Object*) * @Object_copy to %A* (%A*) *),
	i32 (%A*) * @A_value,
	%A* (%A*,i32) * @A_set_var,
	%A* (%A*,i32) * @A_method1,
	%B* (%A*,i32,i32) * @A_method2,
	%C* (%A*,i32) * @A_method3,
	%D* (%A*,i32,i32) * @A_method4,
	%E* (%A*,i32) * @A_method5
}

method layout
@str.B = internal constant [2 x i8] c"B\00"
setup_inherited_class B
0
1
1
0
0
0
0
%B = type {
	%B_vtable*,
	i32
}

%B_vtable = type {
	i32,
	i32,
	i8*,
	%B* () *,
	%Object* (%B*) *,
	%String* (%B*) *,
	%B* (%B*) *,
	i32 (%B*) *,
	%B* (%B*,i32) *,
	%B* (%B*,i32) *,
	%B* (%B*,i32,i32) *,
	%C* (%B*,i32) *,
	%D* (%B*,i32,i32) *,
	%E* (%B*,i32) *
}

@B_vtable_prototype = constant %B_vtable {
	i32 7,
	i32 ptrtoint (%B* getelementptr (%B, %B* null, i32 1) to i32),
	i8* getelementptr ([2 x i8], [2 x i8]* @str.B, i32 0, i32 0),
	%B* () * @B_new,
	%Object* (%B*) * bitcast (%Object* (%Object*) * @Object_abort to %Object* (%B*) *),
	%String* (%B*) * bitcast (%String* (%Object*) * @Object_type_name to %String* (%B*) *),
	%B* (%B*) * bitcast (%Object* (%Object*) * @Object_copy to %B* (%B*) *),
	i32 (%B*) * bitcast (i32 (%A*) * @A_value to i32 (%B*) *),
	%B* (%B*,i32) * bitcast (%A* (%A*,i32) * @A_set_var to %B* (%B*,i32) *),
	%B* (%B*,i32) * bitcast (%A* (%A*,i32) * @A_method1 to %B* (%B*,i32) *),
	%B* (%B*,i32,i32) * bitcast (%B* (%A*,i32,i32) * @A_method2 to %B* (%B*,i32,i32) *),
	%C* (%B*,i32) * bitcast (%C* (%A*,i32) * @A_method3 to %C* (%B*,i32) *),
	%D* (%B*,i32,i32) * bitcast (%D* (%A*,i32,i32) * @A_method4 to %D* (%B*,i32,i32) *),
	%E* (%B*,i32) * @B_method5
}

method layout
method layout
@str.C = internal constant [2 x i8] c"C\00"
setup_inherited_class C
0
1
1
0
0
0
0
0
%C = type {
	%C_vtable*,
	i32
}

%C_vtable = type {
	i32,
	i32,
	i8*,
	%C* () *,
	%Object* (%C*) *,
	%String* (%C*) *,
	%C* (%C*) *,
	i32 (%C*) *,
	%C* (%C*,i32) *,
	%C* (%C*,i32) *,
	%B* (%C*,i32,i32) *,
	%C* (%C*,i32) *,
	%D* (%C*,i32,i32) *,
	%E* (%C*,i32) *,
	%A* (%C*,i32) *
}

@C_vtable_prototype = constant %C_vtable {
	i32 8,
	i32 ptrtoint (%C* getelementptr (%C, %C* null, i32 1) to i32),
	i8* getelementptr ([2 x i8], [2 x i8]* @str.C, i32 0, i32 0),
	%C* () * @C_new,
	%Object* (%C*) * bitcast (%Object* (%Object*) * @Object_abort to %Object* (%C*) *),
	%String* (%C*) * bitcast (%String* (%Object*) * @Object_type_name to %String* (%C*) *),
	%C* (%C*) * bitcast (%Object* (%Object*) * @Object_copy to %C* (%C*) *),
	i32 (%C*) * bitcast (i32 (%A*) * @A_value to i32 (%C*) *),
	%C* (%C*,i32) * bitcast (%A* (%A*,i32) * @A_set_var to %C* (%C*,i32) *),
	%C* (%C*,i32) * bitcast (%A* (%A*,i32) * @A_method1 to %C* (%C*,i32) *),
	%B* (%C*,i32,i32) * bitcast (%B* (%A*,i32,i32) * @A_method2 to %B* (%C*,i32,i32) *),
	%C* (%C*,i32) * bitcast (%C* (%A*,i32) * @A_method3 to %C* (%C*,i32) *),
	%D* (%C*,i32,i32) * bitcast (%D* (%A*,i32,i32) * @A_method4 to %D* (%C*,i32,i32) *),
	%E* (%C*,i32) * @C_method5,
	%A* (%C*,i32) * @C_method6
}

method layout
@str.D = internal constant [2 x i8] c"D\00"
setup_inherited_class D
0
1
1
0
0
0
0
0
%D = type {
	%D_vtable*,
	i32
}

%D_vtable = type {
	i32,
	i32,
	i8*,
	%D* () *,
	%Object* (%D*) *,
	%String* (%D*) *,
	%D* (%D*) *,
	i32 (%D*) *,
	%D* (%D*,i32) *,
	%D* (%D*,i32) *,
	%B* (%D*,i32,i32) *,
	%C* (%D*,i32) *,
	%D* (%D*,i32,i32) *,
	%E* (%D*,i32) *,
	i1 (%D*,i32) *
}

@D_vtable_prototype = constant %D_vtable {
	i32 9,
	i32 ptrtoint (%D* getelementptr (%D, %D* null, i32 1) to i32),
	i8* getelementptr ([2 x i8], [2 x i8]* @str.D, i32 0, i32 0),
	%D* () * @D_new,
	%Object* (%D*) * bitcast (%Object* (%Object*) * @Object_abort to %Object* (%D*) *),
	%String* (%D*) * bitcast (%String* (%Object*) * @Object_type_name to %String* (%D*) *),
	%D* (%D*) * bitcast (%Object* (%Object*) * @Object_copy to %D* (%D*) *),
	i32 (%D*) * bitcast (i32 (%A*) * @A_value to i32 (%D*) *),
	%D* (%D*,i32) * bitcast (%A* (%A*,i32) * @A_set_var to %D* (%D*,i32) *),
	%D* (%D*,i32) * bitcast (%A* (%A*,i32) * @A_method1 to %D* (%D*,i32) *),
	%B* (%D*,i32,i32) * bitcast (%B* (%A*,i32,i32) * @A_method2 to %B* (%D*,i32,i32) *),
	%C* (%D*,i32) * bitcast (%C* (%A*,i32) * @A_method3 to %C* (%D*,i32) *),
	%D* (%D*,i32,i32) * bitcast (%D* (%A*,i32,i32) * @A_method4 to %D* (%D*,i32,i32) *),
	%E* (%D*,i32) * bitcast (%E* (%B*,i32) * @B_method5 to %E* (%D*,i32) *),
	i1 (%D*,i32) * @D_method7
}

method layout
@str.E = internal constant [2 x i8] c"E\00"
setup_inherited_class E
0
1
1
0
0
0
0
0
0
%E = type {
	%E_vtable*,
	i32
}

%E_vtable = type {
	i32,
	i32,
	i8*,
	%E* () *,
	%Object* (%E*) *,
	%String* (%E*) *,
	%E* (%E*) *,
	i32 (%E*) *,
	%E* (%E*,i32) *,
	%E* (%E*,i32) *,
	%B* (%E*,i32,i32) *,
	%C* (%E*,i32) *,
	%D* (%E*,i32,i32) *,
	%E* (%E*,i32) *,
	i1 (%E*,i32) *,
	%A* (%E*,i32) *
}

@E_vtable_prototype = constant %E_vtable {
	i32 10,
	i32 ptrtoint (%E* getelementptr (%E, %E* null, i32 1) to i32),
	i8* getelementptr ([2 x i8], [2 x i8]* @str.E, i32 0, i32 0),
	%E* () * @E_new,
	%Object* (%E*) * bitcast (%Object* (%Object*) * @Object_abort to %Object* (%E*) *),
	%String* (%E*) * bitcast (%String* (%Object*) * @Object_type_name to %String* (%E*) *),
	%E* (%E*) * bitcast (%Object* (%Object*) * @Object_copy to %E* (%E*) *),
	i32 (%E*) * bitcast (i32 (%A*) * @A_value to i32 (%E*) *),
	%E* (%E*,i32) * bitcast (%A* (%A*,i32) * @A_set_var to %E* (%E*,i32) *),
	%E* (%E*,i32) * bitcast (%A* (%A*,i32) * @A_method1 to %E* (%E*,i32) *),
	%B* (%E*,i32,i32) * bitcast (%B* (%A*,i32,i32) * @A_method2 to %B* (%E*,i32,i32) *),
	%C* (%E*,i32) * bitcast (%C* (%A*,i32) * @A_method3 to %C* (%E*,i32) *),
	%D* (%E*,i32,i32) * bitcast (%D* (%A*,i32,i32) * @A_method4 to %D* (%E*,i32,i32) *),
	%E* (%E*,i32) * bitcast (%E* (%B*,i32) * @B_method5 to %E* (%E*,i32) *),
	i1 (%E*,i32) * bitcast (i1 (%D*,i32) * @D_method7 to i1 (%E*,i32) *),
	%A* (%E*,i32) * @E_method6
}

method layout
method layout
method layout
method layout
method layout
method layout
@str.A2I = internal constant [4 x i8] c"A2I\00"
setup_inherited_class A2I
%A2I = type {
	%A2I_vtable*
}

%A2I_vtable = type {
	i32,
	i32,
	i8*,
	%A2I* () *,
	%Object* (%A2I*) *,
	%String* (%A2I*) *,
	%A2I* (%A2I*) *,
	i32 (%A2I*,%String*) *,
	%String* (%A2I*,i32) *,
	i32 (%A2I*,%String*) *,
	i32 (%A2I*,%String*) *,
	%String* (%A2I*,i32) *,
	%String* (%A2I*,i32) *
}

@A2I_vtable_prototype = constant %A2I_vtable {
	i32 11,
	i32 ptrtoint (%A2I* getelementptr (%A2I, %A2I* null, i32 1) to i32),
	i8* getelementptr ([4 x i8], [4 x i8]* @str.A2I, i32 0, i32 0),
	%A2I* () * @A2I_new,
	%Object* (%A2I*) * bitcast (%Object* (%Object*) * @Object_abort to %Object* (%A2I*) *),
	%String* (%A2I*) * bitcast (%String* (%Object*) * @Object_type_name to %String* (%A2I*) *),
	%A2I* (%A2I*) * bitcast (%Object* (%Object*) * @Object_copy to %A2I* (%A2I*) *),
	i32 (%A2I*,%String*) * @A2I_c2i,
	%String* (%A2I*,i32) * @A2I_i2c,
	i32 (%A2I*,%String*) * @A2I_a2i,
	i32 (%A2I*,%String*) * @A2I_a2i_aux,
	%String* (%A2I*,i32) * @A2I_i2a,
	%String* (%A2I*,i32) * @A2I_i2a_aux
}

@str.58 = internal constant [14 x i8] c"<basic class>\00"
@String.58 = constant %String {
	%String_vtable* @String_vtable_prototype,
	i8* getelementptr ([14 x i8], [14 x i8]* @str.58, i32 0, i32 0)
}

@str.57 = internal constant [2 x i8] c"q\00"
@String.57 = constant %String {
	%String_vtable* @String_vtable_prototype,
	i8* getelementptr ([2 x i8], [2 x i8]* @str.57, i32 0, i32 0)
}

@str.56 = internal constant [2 x i8] c"j\00"
@String.56 = constant %String {
	%String_vtable* @String_vtable_prototype,
	i8* getelementptr ([2 x i8], [2 x i8]* @str.56, i32 0, i32 0)
}

@str.55 = internal constant [29 x i8] c"times 8 with a remainder of \00"
@String.55 = constant %String {
	%String_vtable* @String_vtable_prototype,
	i8* getelementptr ([29 x i8], [29 x i8]* @str.55, i32 0, i32 0)
}

@str.54 = internal constant [13 x i8] c"is equal to \00"
@String.54 = constant %String {
	%String_vtable* @String_vtable_prototype,
	i8* getelementptr ([13 x i8], [13 x i8]* @str.54, i32 0, i32 0)
}

@str.53 = internal constant [2 x i8] c"h\00"
@String.53 = constant %String {
	%String_vtable* @String_vtable_prototype,
	i8* getelementptr ([2 x i8], [2 x i8]* @str.53, i32 0, i32 0)
}

@str.52 = internal constant [24 x i8] c"is not divisible by 3.\0A\00"
@String.52 = constant %String {
	%String_vtable* @String_vtable_prototype,
	i8* getelementptr ([24 x i8], [24 x i8]* @str.52, i32 0, i32 0)
}

@str.51 = internal constant [20 x i8] c"is divisible by 3.\0A\00"
@String.51 = constant %String {
	%String_vtable* @String_vtable_prototype,
	i8* getelementptr ([20 x i8], [20 x i8]* @str.51, i32 0, i32 0)
}

@str.50 = internal constant [2 x i8] c"g\00"
@String.50 = constant %String {
	%String_vtable* @String_vtable_prototype,
	i8* getelementptr ([2 x i8], [2 x i8]* @str.50, i32 0, i32 0)
}

@str.49 = internal constant [2 x i8] c"f\00"
@String.49 = constant %String {
	%String_vtable* @String_vtable_prototype,
	i8* getelementptr ([2 x i8], [2 x i8]* @str.49, i32 0, i32 0)
}

@str.48 = internal constant [2 x i8] c"e\00"
@String.48 = constant %String {
	%String_vtable* @String_vtable_prototype,
	i8* getelementptr ([2 x i8], [2 x i8]* @str.48, i32 0, i32 0)
}

@str.47 = internal constant [2 x i8] c"d\00"
@String.47 = constant %String {
	%String_vtable* @String_vtable_prototype,
	i8* getelementptr ([2 x i8], [2 x i8]* @str.47, i32 0, i32 0)
}

@str.46 = internal constant [2 x i8] c"c\00"
@String.46 = constant %String {
	%String_vtable* @String_vtable_prototype,
	i8* getelementptr ([2 x i8], [2 x i8]* @str.46, i32 0, i32 0)
}

@str.45 = internal constant [2 x i8] c"b\00"
@String.45 = constant %String {
	%String_vtable* @String_vtable_prototype,
	i8* getelementptr ([2 x i8], [2 x i8]* @str.45, i32 0, i32 0)
}

@str.44 = internal constant [2 x i8] c"a\00"
@String.44 = constant %String {
	%String_vtable* @String_vtable_prototype,
	i8* getelementptr ([2 x i8], [2 x i8]* @str.44, i32 0, i32 0)
}

@str.43 = internal constant [9 x i8] c"is odd!\0A\00"
@String.43 = constant %String {
	%String_vtable* @String_vtable_prototype,
	i8* getelementptr ([9 x i8], [9 x i8]* @str.43, i32 0, i32 0)
}

@str.42 = internal constant [10 x i8] c"is even!\0A\00"
@String.42 = constant %String {
	%String_vtable* @String_vtable_prototype,
	i8* getelementptr ([10 x i8], [10 x i8]* @str.42, i32 0, i32 0)
}

@str.41 = internal constant [8 x i8] c"number \00"
@String.41 = constant %String {
	%String_vtable* @String_vtable_prototype,
	i8* getelementptr ([8 x i8], [8 x i8]* @str.41, i32 0, i32 0)
}

@str.40 = internal constant [2 x i8] c" \00"
@String.40 = constant %String {
	%String_vtable* @String_vtable_prototype,
	i8* getelementptr ([2 x i8], [2 x i8]* @str.40, i32 0, i32 0)
}

@str.39 = internal constant [8 x i8] c"Oooops\0A\00"
@String.39 = constant %String {
	%String_vtable* @String_vtable_prototype,
	i8* getelementptr ([8 x i8], [8 x i8]* @str.39, i32 0, i32 0)
}

@str.38 = internal constant [21 x i8] c"Class type is now E\0A\00"
@String.38 = constant %String {
	%String_vtable* @String_vtable_prototype,
	i8* getelementptr ([21 x i8], [21 x i8]* @str.38, i32 0, i32 0)
}

@str.37 = internal constant [21 x i8] c"Class type is now D\0A\00"
@String.37 = constant %String {
	%String_vtable* @String_vtable_prototype,
	i8* getelementptr ([21 x i8], [21 x i8]* @str.37, i32 0, i32 0)
}

@str.36 = internal constant [21 x i8] c"Class type is now C\0A\00"
@String.36 = constant %String {
	%String_vtable* @String_vtable_prototype,
	i8* getelementptr ([21 x i8], [21 x i8]* @str.36, i32 0, i32 0)
}

@str.35 = internal constant [21 x i8] c"Class type is now B\0A\00"
@String.35 = constant %String {
	%String_vtable* @String_vtable_prototype,
	i8* getelementptr ([21 x i8], [21 x i8]* @str.35, i32 0, i32 0)
}

@str.34 = internal constant [21 x i8] c"Class type is now A\0A\00"
@String.34 = constant %String {
	%String_vtable* @String_vtable_prototype,
	i8* getelementptr ([21 x i8], [21 x i8]* @str.34, i32 0, i32 0)
}

@str.33 = internal constant [27 x i8] c"Please enter a number...  \00"
@String.33 = constant %String {
	%String_vtable* @String_vtable_prototype,
	i8* getelementptr ([27 x i8], [27 x i8]* @str.33, i32 0, i32 0)
}

@str.32 = internal constant [2 x i8] c"\0A\00"
@String.32 = constant %String {
	%String_vtable* @String_vtable_prototype,
	i8* getelementptr ([2 x i8], [2 x i8]* @str.32, i32 0, i32 0)
}

@str.31 = internal constant [22 x i8] c"\09To quit...enter q:\0A\0A\00"
@String.31 = constant %String {
	%String_vtable* @String_vtable_prototype,
	i8* getelementptr ([22 x i8], [22 x i8]* @str.31, i32 0, i32 0)
}

@str.30 = internal constant [33 x i8] c"\09To get a new number...enter j:\0A\00"
@String.30 = constant %String {
	%String_vtable* @String_vtable_prototype,
	i8* getelementptr ([33 x i8], [33 x i8]* @str.30, i32 0, i32 0)
}

@str.29 = internal constant [17 x i8] c"by 8...enter h:\0A\00"
@String.29 = constant %String {
	%String_vtable* @String_vtable_prototype,
	i8* getelementptr ([17 x i8], [17 x i8]* @str.29, i32 0, i32 0)
}

@str.28 = internal constant [12 x i8] c"\09To divide \00"
@String.28 = constant %String {
	%String_vtable* @String_vtable_prototype,
	i8* getelementptr ([12 x i8], [12 x i8]* @str.28, i32 0, i32 0)
}

@str.27 = internal constant [31 x i8] c"is a multiple of 3...enter g:\0A\00"
@String.27 = constant %String {
	%String_vtable* @String_vtable_prototype,
	i8* getelementptr ([31 x i8], [31 x i8]* @str.27, i32 0, i32 0)
}

@str.26 = internal constant [17 x i8] c"\09To find out if \00"
@String.26 = constant %String {
	%String_vtable* @String_vtable_prototype,
	i8* getelementptr ([17 x i8], [17 x i8]* @str.26, i32 0, i32 0)
}

@str.25 = internal constant [13 x i8] c"...enter f:\0A\00"
@String.25 = constant %String {
	%String_vtable* @String_vtable_prototype,
	i8* getelementptr ([13 x i8], [13 x i8]* @str.25, i32 0, i32 0)
}

@str.24 = internal constant [10 x i8] c"\09To cube \00"
@String.24 = constant %String {
	%String_vtable* @String_vtable_prototype,
	i8* getelementptr ([10 x i8], [10 x i8]* @str.24, i32 0, i32 0)
}

@str.23 = internal constant [13 x i8] c"...enter e:\0A\00"
@String.23 = constant %String {
	%String_vtable* @String_vtable_prototype,
	i8* getelementptr ([13 x i8], [13 x i8]* @str.23, i32 0, i32 0)
}

@str.22 = internal constant [12 x i8] c"\09To square \00"
@String.22 = constant %String {
	%String_vtable* @String_vtable_prototype,
	i8* getelementptr ([12 x i8], [12 x i8]* @str.22, i32 0, i32 0)
}

@str.21 = internal constant [13 x i8] c"...enter d:\0A\00"
@String.21 = constant %String {
	%String_vtable* @String_vtable_prototype,
	i8* getelementptr ([13 x i8], [13 x i8]* @str.21, i32 0, i32 0)
}

@str.20 = internal constant [27 x i8] c"\09To find the factorial of \00"
@String.20 = constant %String {
	%String_vtable* @String_vtable_prototype,
	i8* getelementptr ([27 x i8], [27 x i8]* @str.20, i32 0, i32 0)
}

@str.19 = internal constant [31 x i8] c"and another number...enter c:\0A\00"
@String.19 = constant %String {
	%String_vtable* @String_vtable_prototype,
	i8* getelementptr ([31 x i8], [31 x i8]* @str.19, i32 0, i32 0)
}

@str.18 = internal constant [33 x i8] c"\09To find the difference between \00"
@String.18 = constant %String {
	%String_vtable* @String_vtable_prototype,
	i8* getelementptr ([33 x i8], [33 x i8]* @str.18, i32 0, i32 0)
}

@str.17 = internal constant [13 x i8] c"...enter b:\0A\00"
@String.17 = constant %String {
	%String_vtable* @String_vtable_prototype,
	i8* getelementptr ([13 x i8], [13 x i8]* @str.17, i32 0, i32 0)
}

@str.16 = internal constant [12 x i8] c"\09To negate \00"
@String.16 = constant %String {
	%String_vtable* @String_vtable_prototype,
	i8* getelementptr ([12 x i8], [12 x i8]* @str.16, i32 0, i32 0)
}

@str.15 = internal constant [13 x i8] c"...enter a:\0A\00"
@String.15 = constant %String {
	%String_vtable* @String_vtable_prototype,
	i8* getelementptr ([13 x i8], [13 x i8]* @str.15, i32 0, i32 0)
}

@str.14 = internal constant [22 x i8] c"\0A\09To add a number to \00"
@String.14 = constant %String {
	%String_vtable* @String_vtable_prototype,
	i8* getelementptr ([22 x i8], [22 x i8]* @str.14, i32 0, i32 0)
}

@str.13 = internal constant [2 x i8] c"+\00"
@String.13 = constant %String {
	%String_vtable* @String_vtable_prototype,
	i8* getelementptr ([2 x i8], [2 x i8]* @str.13, i32 0, i32 0)
}

@str.12 = internal constant [2 x i8] c"-\00"
@String.12 = constant %String {
	%String_vtable* @String_vtable_prototype,
	i8* getelementptr ([2 x i8], [2 x i8]* @str.12, i32 0, i32 0)
}

@str.11 = internal constant [1 x i8] c"\00"
@String.11 = constant %String {
	%String_vtable* @String_vtable_prototype,
	i8* getelementptr ([1 x i8], [1 x i8]* @str.11, i32 0, i32 0)
}

@str.10 = internal constant [2 x i8] c"9\00"
@String.10 = constant %String {
	%String_vtable* @String_vtable_prototype,
	i8* getelementptr ([2 x i8], [2 x i8]* @str.10, i32 0, i32 0)
}

@str.9 = internal constant [2 x i8] c"8\00"
@String.9 = constant %String {
	%String_vtable* @String_vtable_prototype,
	i8* getelementptr ([2 x i8], [2 x i8]* @str.9, i32 0, i32 0)
}

@str.8 = internal constant [2 x i8] c"7\00"
@String.8 = constant %String {
	%String_vtable* @String_vtable_prototype,
	i8* getelementptr ([2 x i8], [2 x i8]* @str.8, i32 0, i32 0)
}

@str.7 = internal constant [2 x i8] c"6\00"
@String.7 = constant %String {
	%String_vtable* @String_vtable_prototype,
	i8* getelementptr ([2 x i8], [2 x i8]* @str.7, i32 0, i32 0)
}

@str.6 = internal constant [2 x i8] c"5\00"
@String.6 = constant %String {
	%String_vtable* @String_vtable_prototype,
	i8* getelementptr ([2 x i8], [2 x i8]* @str.6, i32 0, i32 0)
}

@str.5 = internal constant [2 x i8] c"4\00"
@String.5 = constant %String {
	%String_vtable* @String_vtable_prototype,
	i8* getelementptr ([2 x i8], [2 x i8]* @str.5, i32 0, i32 0)
}

@str.4 = internal constant [2 x i8] c"3\00"
@String.4 = constant %String {
	%String_vtable* @String_vtable_prototype,
	i8* getelementptr ([2 x i8], [2 x i8]* @str.4, i32 0, i32 0)
}

@str.3 = internal constant [2 x i8] c"2\00"
@String.3 = constant %String {
	%String_vtable* @String_vtable_prototype,
	i8* getelementptr ([2 x i8], [2 x i8]* @str.3, i32 0, i32 0)
}

@str.2 = internal constant [2 x i8] c"1\00"
@String.2 = constant %String {
	%String_vtable* @String_vtable_prototype,
	i8* getelementptr ([2 x i8], [2 x i8]* @str.2, i32 0, i32 0)
}

@str.1 = internal constant [2 x i8] c"0\00"
@String.1 = constant %String {
	%String_vtable* @String_vtable_prototype,
	i8* getelementptr ([2 x i8], [2 x i8]* @str.1, i32 0, i32 0)
}

@str.0 = internal constant [9 x i8] c"arith.cl\00"
@String.0 = constant %String {
	%String_vtable* @String_vtable_prototype,
	i8* getelementptr ([9 x i8], [9 x i8]* @str.0, i32 0, i32 0)
}

define i32 @main() {

entry:
	%main.obj = call %Main*() @Main_new(  )
	%main.retval = call %Object*(%Main*) @Main_main( %Main* %main.obj )
	ret i32 0
}

method
define %String* @Main_menu(%Main* %self) {

entry:
	%tmp.0 = alloca %Main*
conform
	store %Main* %self, %Main** %tmp.0
block
dispatch
string_const
Object
	%tmp.1 = load %Main*, %Main** %tmp.0
	%tmp.2 = icmp eq %Main* %tmp.1, null
	br i1 %tmp.2, label %abort, label %ok.0

ok.0:
	%tmp.3 = getelementptr %Main, %Main* %tmp.1, i32 0, i32 0
	%tmp.4 = load %Main_vtable*, %Main_vtable** %tmp.3
	%tmp.5 = getelementptr %Main_vtable, %Main_vtable* %tmp.4, i32 0, i32 7
	%tmp.6 = load %Main* (%Main*,%String*) *, %Main* (%Main*,%String*) ** %tmp.5
conform
conform
	%tmp.7 = call %Main*(%Main*, %String*) %tmp.6( %Main* %tmp.1, %String* @String.14 )
dispatch
Object
	%tmp.8 = load %Main*, %Main** %tmp.0
	%tmp.9 = getelementptr %Main, %Main* %tmp.8, i32 0, i32 2
	%tmp.10 = load %A*, %A** %tmp.9
Object
	%tmp.11 = load %Main*, %Main** %tmp.0
	%tmp.12 = icmp eq %Main* %tmp.11, null
	br i1 %tmp.12, label %abort, label %ok.1

ok.1:
	%tmp.13 = getelementptr %Main, %Main* %tmp.11, i32 0, i32 0
	%tmp.14 = load %Main_vtable*, %Main_vtable** %tmp.13
	%tmp.15 = getelementptr %Main_vtable, %Main_vtable* %tmp.14, i32 0, i32 16
	%tmp.16 = load %Main* (%Main*,%A*) *, %Main* (%Main*,%A*) ** %tmp.15
conform
conform
	%tmp.17 = call %Main*(%Main*, %A*) %tmp.16( %Main* %tmp.11, %A* %tmp.10 )
dispatch
string_const
Object
	%tmp.18 = load %Main*, %Main** %tmp.0
	%tmp.19 = icmp eq %Main* %tmp.18, null
	br i1 %tmp.19, label %abort, label %ok.2

ok.2:
	%tmp.20 = getelementptr %Main, %Main* %tmp.18, i32 0, i32 0
	%tmp.21 = load %Main_vtable*, %Main_vtable** %tmp.20
	%tmp.22 = getelementptr %Main_vtable, %Main_vtable* %tmp.21, i32 0, i32 7
	%tmp.23 = load %Main* (%Main*,%String*) *, %Main* (%Main*,%String*) ** %tmp.22
conform
conform
	%tmp.24 = call %Main*(%Main*, %String*) %tmp.23( %Main* %tmp.18, %String* @String.15 )
dispatch
string_const
Object
	%tmp.25 = load %Main*, %Main** %tmp.0
	%tmp.26 = icmp eq %Main* %tmp.25, null
	br i1 %tmp.26, label %abort, label %ok.3

ok.3:
	%tmp.27 = getelementptr %Main, %Main* %tmp.25, i32 0, i32 0
	%tmp.28 = load %Main_vtable*, %Main_vtable** %tmp.27
	%tmp.29 = getelementptr %Main_vtable, %Main_vtable* %tmp.28, i32 0, i32 7
	%tmp.30 = load %Main* (%Main*,%String*) *, %Main* (%Main*,%String*) ** %tmp.29
conform
conform
	%tmp.31 = call %Main*(%Main*, %String*) %tmp.30( %Main* %tmp.25, %String* @String.16 )
dispatch
Object
	%tmp.32 = load %Main*, %Main** %tmp.0
	%tmp.33 = getelementptr %Main, %Main* %tmp.32, i32 0, i32 2
	%tmp.34 = load %A*, %A** %tmp.33
Object
	%tmp.35 = load %Main*, %Main** %tmp.0
	%tmp.36 = icmp eq %Main* %tmp.35, null
	br i1 %tmp.36, label %abort, label %ok.4

ok.4:
	%tmp.37 = getelementptr %Main, %Main* %tmp.35, i32 0, i32 0
	%tmp.38 = load %Main_vtable*, %Main_vtable** %tmp.37
	%tmp.39 = getelementptr %Main_vtable, %Main_vtable* %tmp.38, i32 0, i32 16
	%tmp.40 = load %Main* (%Main*,%A*) *, %Main* (%Main*,%A*) ** %tmp.39
conform
conform
	%tmp.41 = call %Main*(%Main*, %A*) %tmp.40( %Main* %tmp.35, %A* %tmp.34 )
dispatch
string_const
Object
	%tmp.42 = load %Main*, %Main** %tmp.0
	%tmp.43 = icmp eq %Main* %tmp.42, null
	br i1 %tmp.43, label %abort, label %ok.5

ok.5:
	%tmp.44 = getelementptr %Main, %Main* %tmp.42, i32 0, i32 0
	%tmp.45 = load %Main_vtable*, %Main_vtable** %tmp.44
	%tmp.46 = getelementptr %Main_vtable, %Main_vtable* %tmp.45, i32 0, i32 7
	%tmp.47 = load %Main* (%Main*,%String*) *, %Main* (%Main*,%String*) ** %tmp.46
conform
conform
	%tmp.48 = call %Main*(%Main*, %String*) %tmp.47( %Main* %tmp.42, %String* @String.17 )
dispatch
string_const
Object
	%tmp.49 = load %Main*, %Main** %tmp.0
	%tmp.50 = icmp eq %Main* %tmp.49, null
	br i1 %tmp.50, label %abort, label %ok.6

ok.6:
	%tmp.51 = getelementptr %Main, %Main* %tmp.49, i32 0, i32 0
	%tmp.52 = load %Main_vtable*, %Main_vtable** %tmp.51
	%tmp.53 = getelementptr %Main_vtable, %Main_vtable* %tmp.52, i32 0, i32 7
	%tmp.54 = load %Main* (%Main*,%String*) *, %Main* (%Main*,%String*) ** %tmp.53
conform
conform
	%tmp.55 = call %Main*(%Main*, %String*) %tmp.54( %Main* %tmp.49, %String* @String.18 )
dispatch
Object
	%tmp.56 = load %Main*, %Main** %tmp.0
	%tmp.57 = getelementptr %Main, %Main* %tmp.56, i32 0, i32 2
	%tmp.58 = load %A*, %A** %tmp.57
Object
	%tmp.59 = load %Main*, %Main** %tmp.0
	%tmp.60 = icmp eq %Main* %tmp.59, null
	br i1 %tmp.60, label %abort, label %ok.7

ok.7:
	%tmp.61 = getelementptr %Main, %Main* %tmp.59, i32 0, i32 0
	%tmp.62 = load %Main_vtable*, %Main_vtable** %tmp.61
	%tmp.63 = getelementptr %Main_vtable, %Main_vtable* %tmp.62, i32 0, i32 16
	%tmp.64 = load %Main* (%Main*,%A*) *, %Main* (%Main*,%A*) ** %tmp.63
conform
conform
	%tmp.65 = call %Main*(%Main*, %A*) %tmp.64( %Main* %tmp.59, %A* %tmp.58 )
dispatch
string_const
Object
	%tmp.66 = load %Main*, %Main** %tmp.0
	%tmp.67 = icmp eq %Main* %tmp.66, null
	br i1 %tmp.67, label %abort, label %ok.8

ok.8:
	%tmp.68 = getelementptr %Main, %Main* %tmp.66, i32 0, i32 0
	%tmp.69 = load %Main_vtable*, %Main_vtable** %tmp.68
	%tmp.70 = getelementptr %Main_vtable, %Main_vtable* %tmp.69, i32 0, i32 7
	%tmp.71 = load %Main* (%Main*,%String*) *, %Main* (%Main*,%String*) ** %tmp.70
conform
conform
	%tmp.72 = call %Main*(%Main*, %String*) %tmp.71( %Main* %tmp.66, %String* @String.19 )
dispatch
string_const
Object
	%tmp.73 = load %Main*, %Main** %tmp.0
	%tmp.74 = icmp eq %Main* %tmp.73, null
	br i1 %tmp.74, label %abort, label %ok.9

ok.9:
	%tmp.75 = getelementptr %Main, %Main* %tmp.73, i32 0, i32 0
	%tmp.76 = load %Main_vtable*, %Main_vtable** %tmp.75
	%tmp.77 = getelementptr %Main_vtable, %Main_vtable* %tmp.76, i32 0, i32 7
	%tmp.78 = load %Main* (%Main*,%String*) *, %Main* (%Main*,%String*) ** %tmp.77
conform
conform
	%tmp.79 = call %Main*(%Main*, %String*) %tmp.78( %Main* %tmp.73, %String* @String.20 )
dispatch
Object
	%tmp.80 = load %Main*, %Main** %tmp.0
	%tmp.81 = getelementptr %Main, %Main* %tmp.80, i32 0, i32 2
	%tmp.82 = load %A*, %A** %tmp.81
Object
	%tmp.83 = load %Main*, %Main** %tmp.0
	%tmp.84 = icmp eq %Main* %tmp.83, null
	br i1 %tmp.84, label %abort, label %ok.10

ok.10:
	%tmp.85 = getelementptr %Main, %Main* %tmp.83, i32 0, i32 0
	%tmp.86 = load %Main_vtable*, %Main_vtable** %tmp.85
	%tmp.87 = getelementptr %Main_vtable, %Main_vtable* %tmp.86, i32 0, i32 16
	%tmp.88 = load %Main* (%Main*,%A*) *, %Main* (%Main*,%A*) ** %tmp.87
conform
conform
	%tmp.89 = call %Main*(%Main*, %A*) %tmp.88( %Main* %tmp.83, %A* %tmp.82 )
dispatch
string_const
Object
	%tmp.90 = load %Main*, %Main** %tmp.0
	%tmp.91 = icmp eq %Main* %tmp.90, null
	br i1 %tmp.91, label %abort, label %ok.11

ok.11:
	%tmp.92 = getelementptr %Main, %Main* %tmp.90, i32 0, i32 0
	%tmp.93 = load %Main_vtable*, %Main_vtable** %tmp.92
	%tmp.94 = getelementptr %Main_vtable, %Main_vtable* %tmp.93, i32 0, i32 7
	%tmp.95 = load %Main* (%Main*,%String*) *, %Main* (%Main*,%String*) ** %tmp.94
conform
conform
	%tmp.96 = call %Main*(%Main*, %String*) %tmp.95( %Main* %tmp.90, %String* @String.21 )
dispatch
string_const
Object
	%tmp.97 = load %Main*, %Main** %tmp.0
	%tmp.98 = icmp eq %Main* %tmp.97, null
	br i1 %tmp.98, label %abort, label %ok.12

ok.12:
	%tmp.99 = getelementptr %Main, %Main* %tmp.97, i32 0, i32 0
	%tmp.100 = load %Main_vtable*, %Main_vtable** %tmp.99
	%tmp.101 = getelementptr %Main_vtable, %Main_vtable* %tmp.100, i32 0, i32 7
	%tmp.102 = load %Main* (%Main*,%String*) *, %Main* (%Main*,%String*) ** %tmp.101
conform
conform
	%tmp.103 = call %Main*(%Main*, %String*) %tmp.102( %Main* %tmp.97, %String* @String.22 )
dispatch
Object
	%tmp.104 = load %Main*, %Main** %tmp.0
	%tmp.105 = getelementptr %Main, %Main* %tmp.104, i32 0, i32 2
	%tmp.106 = load %A*, %A** %tmp.105
Object
	%tmp.107 = load %Main*, %Main** %tmp.0
	%tmp.108 = icmp eq %Main* %tmp.107, null
	br i1 %tmp.108, label %abort, label %ok.13

ok.13:
	%tmp.109 = getelementptr %Main, %Main* %tmp.107, i32 0, i32 0
	%tmp.110 = load %Main_vtable*, %Main_vtable** %tmp.109
	%tmp.111 = getelementptr %Main_vtable, %Main_vtable* %tmp.110, i32 0, i32 16
	%tmp.112 = load %Main* (%Main*,%A*) *, %Main* (%Main*,%A*) ** %tmp.111
conform
conform
	%tmp.113 = call %Main*(%Main*, %A*) %tmp.112( %Main* %tmp.107, %A* %tmp.106 )
dispatch
string_const
Object
	%tmp.114 = load %Main*, %Main** %tmp.0
	%tmp.115 = icmp eq %Main* %tmp.114, null
	br i1 %tmp.115, label %abort, label %ok.14

ok.14:
	%tmp.116 = getelementptr %Main, %Main* %tmp.114, i32 0, i32 0
	%tmp.117 = load %Main_vtable*, %Main_vtable** %tmp.116
	%tmp.118 = getelementptr %Main_vtable, %Main_vtable* %tmp.117, i32 0, i32 7
	%tmp.119 = load %Main* (%Main*,%String*) *, %Main* (%Main*,%String*) ** %tmp.118
conform
conform
	%tmp.120 = call %Main*(%Main*, %String*) %tmp.119( %Main* %tmp.114, %String* @String.23 )
dispatch
string_const
Object
	%tmp.121 = load %Main*, %Main** %tmp.0
	%tmp.122 = icmp eq %Main* %tmp.121, null
	br i1 %tmp.122, label %abort, label %ok.15

ok.15:
	%tmp.123 = getelementptr %Main, %Main* %tmp.121, i32 0, i32 0
	%tmp.124 = load %Main_vtable*, %Main_vtable** %tmp.123
	%tmp.125 = getelementptr %Main_vtable, %Main_vtable* %tmp.124, i32 0, i32 7
	%tmp.126 = load %Main* (%Main*,%String*) *, %Main* (%Main*,%String*) ** %tmp.125
conform
conform
	%tmp.127 = call %Main*(%Main*, %String*) %tmp.126( %Main* %tmp.121, %String* @String.24 )
dispatch
Object
	%tmp.128 = load %Main*, %Main** %tmp.0
	%tmp.129 = getelementptr %Main, %Main* %tmp.128, i32 0, i32 2
	%tmp.130 = load %A*, %A** %tmp.129
Object
	%tmp.131 = load %Main*, %Main** %tmp.0
	%tmp.132 = icmp eq %Main* %tmp.131, null
	br i1 %tmp.132, label %abort, label %ok.16

ok.16:
	%tmp.133 = getelementptr %Main, %Main* %tmp.131, i32 0, i32 0
	%tmp.134 = load %Main_vtable*, %Main_vtable** %tmp.133
	%tmp.135 = getelementptr %Main_vtable, %Main_vtable* %tmp.134, i32 0, i32 16
	%tmp.136 = load %Main* (%Main*,%A*) *, %Main* (%Main*,%A*) ** %tmp.135
conform
conform
	%tmp.137 = call %Main*(%Main*, %A*) %tmp.136( %Main* %tmp.131, %A* %tmp.130 )
dispatch
string_const
Object
	%tmp.138 = load %Main*, %Main** %tmp.0
	%tmp.139 = icmp eq %Main* %tmp.138, null
	br i1 %tmp.139, label %abort, label %ok.17

ok.17:
	%tmp.140 = getelementptr %Main, %Main* %tmp.138, i32 0, i32 0
	%tmp.141 = load %Main_vtable*, %Main_vtable** %tmp.140
	%tmp.142 = getelementptr %Main_vtable, %Main_vtable* %tmp.141, i32 0, i32 7
	%tmp.143 = load %Main* (%Main*,%String*) *, %Main* (%Main*,%String*) ** %tmp.142
conform
conform
	%tmp.144 = call %Main*(%Main*, %String*) %tmp.143( %Main* %tmp.138, %String* @String.25 )
dispatch
string_const
Object
	%tmp.145 = load %Main*, %Main** %tmp.0
	%tmp.146 = icmp eq %Main* %tmp.145, null
	br i1 %tmp.146, label %abort, label %ok.18

ok.18:
	%tmp.147 = getelementptr %Main, %Main* %tmp.145, i32 0, i32 0
	%tmp.148 = load %Main_vtable*, %Main_vtable** %tmp.147
	%tmp.149 = getelementptr %Main_vtable, %Main_vtable* %tmp.148, i32 0, i32 7
	%tmp.150 = load %Main* (%Main*,%String*) *, %Main* (%Main*,%String*) ** %tmp.149
conform
conform
	%tmp.151 = call %Main*(%Main*, %String*) %tmp.150( %Main* %tmp.145, %String* @String.26 )
dispatch
Object
	%tmp.152 = load %Main*, %Main** %tmp.0
	%tmp.153 = getelementptr %Main, %Main* %tmp.152, i32 0, i32 2
	%tmp.154 = load %A*, %A** %tmp.153
Object
	%tmp.155 = load %Main*, %Main** %tmp.0
	%tmp.156 = icmp eq %Main* %tmp.155, null
	br i1 %tmp.156, label %abort, label %ok.19

ok.19:
	%tmp.157 = getelementptr %Main, %Main* %tmp.155, i32 0, i32 0
	%tmp.158 = load %Main_vtable*, %Main_vtable** %tmp.157
	%tmp.159 = getelementptr %Main_vtable, %Main_vtable* %tmp.158, i32 0, i32 16
	%tmp.160 = load %Main* (%Main*,%A*) *, %Main* (%Main*,%A*) ** %tmp.159
conform
conform
	%tmp.161 = call %Main*(%Main*, %A*) %tmp.160( %Main* %tmp.155, %A* %tmp.154 )
dispatch
string_const
Object
	%tmp.162 = load %Main*, %Main** %tmp.0
	%tmp.163 = icmp eq %Main* %tmp.162, null
	br i1 %tmp.163, label %abort, label %ok.20

ok.20:
	%tmp.164 = getelementptr %Main, %Main* %tmp.162, i32 0, i32 0
	%tmp.165 = load %Main_vtable*, %Main_vtable** %tmp.164
	%tmp.166 = getelementptr %Main_vtable, %Main_vtable* %tmp.165, i32 0, i32 7
	%tmp.167 = load %Main* (%Main*,%String*) *, %Main* (%Main*,%String*) ** %tmp.166
conform
conform
	%tmp.168 = call %Main*(%Main*, %String*) %tmp.167( %Main* %tmp.162, %String* @String.27 )
dispatch
string_const
Object
	%tmp.169 = load %Main*, %Main** %tmp.0
	%tmp.170 = icmp eq %Main* %tmp.169, null
	br i1 %tmp.170, label %abort, label %ok.21

ok.21:
	%tmp.171 = getelementptr %Main, %Main* %tmp.169, i32 0, i32 0
	%tmp.172 = load %Main_vtable*, %Main_vtable** %tmp.171
	%tmp.173 = getelementptr %Main_vtable, %Main_vtable* %tmp.172, i32 0, i32 7
	%tmp.174 = load %Main* (%Main*,%String*) *, %Main* (%Main*,%String*) ** %tmp.173
conform
conform
	%tmp.175 = call %Main*(%Main*, %String*) %tmp.174( %Main* %tmp.169, %String* @String.28 )
dispatch
Object
	%tmp.176 = load %Main*, %Main** %tmp.0
	%tmp.177 = getelementptr %Main, %Main* %tmp.176, i32 0, i32 2
	%tmp.178 = load %A*, %A** %tmp.177
Object
	%tmp.179 = load %Main*, %Main** %tmp.0
	%tmp.180 = icmp eq %Main* %tmp.179, null
	br i1 %tmp.180, label %abort, label %ok.22

ok.22:
	%tmp.181 = getelementptr %Main, %Main* %tmp.179, i32 0, i32 0
	%tmp.182 = load %Main_vtable*, %Main_vtable** %tmp.181
	%tmp.183 = getelementptr %Main_vtable, %Main_vtable* %tmp.182, i32 0, i32 16
	%tmp.184 = load %Main* (%Main*,%A*) *, %Main* (%Main*,%A*) ** %tmp.183
conform
conform
	%tmp.185 = call %Main*(%Main*, %A*) %tmp.184( %Main* %tmp.179, %A* %tmp.178 )
dispatch
string_const
Object
	%tmp.186 = load %Main*, %Main** %tmp.0
	%tmp.187 = icmp eq %Main* %tmp.186, null
	br i1 %tmp.187, label %abort, label %ok.23

ok.23:
	%tmp.188 = getelementptr %Main, %Main* %tmp.186, i32 0, i32 0
	%tmp.189 = load %Main_vtable*, %Main_vtable** %tmp.188
	%tmp.190 = getelementptr %Main_vtable, %Main_vtable* %tmp.189, i32 0, i32 7
	%tmp.191 = load %Main* (%Main*,%String*) *, %Main* (%Main*,%String*) ** %tmp.190
conform
conform
	%tmp.192 = call %Main*(%Main*, %String*) %tmp.191( %Main* %tmp.186, %String* @String.29 )
dispatch
string_const
Object
	%tmp.193 = load %Main*, %Main** %tmp.0
	%tmp.194 = icmp eq %Main* %tmp.193, null
	br i1 %tmp.194, label %abort, label %ok.24

ok.24:
	%tmp.195 = getelementptr %Main, %Main* %tmp.193, i32 0, i32 0
	%tmp.196 = load %Main_vtable*, %Main_vtable** %tmp.195
	%tmp.197 = getelementptr %Main_vtable, %Main_vtable* %tmp.196, i32 0, i32 7
	%tmp.198 = load %Main* (%Main*,%String*) *, %Main* (%Main*,%String*) ** %tmp.197
conform
conform
	%tmp.199 = call %Main*(%Main*, %String*) %tmp.198( %Main* %tmp.193, %String* @String.30 )
dispatch
string_const
Object
	%tmp.200 = load %Main*, %Main** %tmp.0
	%tmp.201 = icmp eq %Main* %tmp.200, null
	br i1 %tmp.201, label %abort, label %ok.25

ok.25:
	%tmp.202 = getelementptr %Main, %Main* %tmp.200, i32 0, i32 0
	%tmp.203 = load %Main_vtable*, %Main_vtable** %tmp.202
	%tmp.204 = getelementptr %Main_vtable, %Main_vtable* %tmp.203, i32 0, i32 7
	%tmp.205 = load %Main* (%Main*,%String*) *, %Main* (%Main*,%String*) ** %tmp.204
conform
conform
	%tmp.206 = call %Main*(%Main*, %String*) %tmp.205( %Main* %tmp.200, %String* @String.31 )
dispatch
Object
	%tmp.207 = load %Main*, %Main** %tmp.0
	%tmp.208 = icmp eq %Main* %tmp.207, null
	br i1 %tmp.208, label %abort, label %ok.26

ok.26:
	%tmp.209 = getelementptr %Main, %Main* %tmp.207, i32 0, i32 0
	%tmp.210 = load %Main_vtable*, %Main_vtable** %tmp.209
	%tmp.211 = getelementptr %Main_vtable, %Main_vtable* %tmp.210, i32 0, i32 9
	%tmp.212 = load %String* (%Main*) *, %String* (%Main*) ** %tmp.211
conform
	%tmp.213 = call %String*(%Main*) %tmp.212( %Main* %tmp.207 )
	ret %String* %tmp.213

abort:
	call void @abort(  )
	unreachable
}

method
define %String* @Main_prompt(%Main* %self) {

entry:
	%tmp.214 = alloca %Main*
conform
	store %Main* %self, %Main** %tmp.214
block
dispatch
string_const
Object
	%tmp.215 = load %Main*, %Main** %tmp.214
	%tmp.216 = icmp eq %Main* %tmp.215, null
	br i1 %tmp.216, label %abort, label %ok.27

ok.27:
	%tmp.217 = getelementptr %Main, %Main* %tmp.215, i32 0, i32 0
	%tmp.218 = load %Main_vtable*, %Main_vtable** %tmp.217
	%tmp.219 = getelementptr %Main_vtable, %Main_vtable* %tmp.218, i32 0, i32 7
	%tmp.220 = load %Main* (%Main*,%String*) *, %Main* (%Main*,%String*) ** %tmp.219
conform
conform
	%tmp.221 = call %Main*(%Main*, %String*) %tmp.220( %Main* %tmp.215, %String* @String.32 )
dispatch
string_const
Object
	%tmp.222 = load %Main*, %Main** %tmp.214
	%tmp.223 = icmp eq %Main* %tmp.222, null
	br i1 %tmp.223, label %abort, label %ok.28

ok.28:
	%tmp.224 = getelementptr %Main, %Main* %tmp.222, i32 0, i32 0
	%tmp.225 = load %Main_vtable*, %Main_vtable** %tmp.224
	%tmp.226 = getelementptr %Main_vtable, %Main_vtable* %tmp.225, i32 0, i32 7
	%tmp.227 = load %Main* (%Main*,%String*) *, %Main* (%Main*,%String*) ** %tmp.226
conform
conform
	%tmp.228 = call %Main*(%Main*, %String*) %tmp.227( %Main* %tmp.222, %String* @String.33 )
dispatch
Object
	%tmp.229 = load %Main*, %Main** %tmp.214
	%tmp.230 = icmp eq %Main* %tmp.229, null
	br i1 %tmp.230, label %abort, label %ok.29

ok.29:
	%tmp.231 = getelementptr %Main, %Main* %tmp.229, i32 0, i32 0
	%tmp.232 = load %Main_vtable*, %Main_vtable** %tmp.231
	%tmp.233 = getelementptr %Main_vtable, %Main_vtable* %tmp.232, i32 0, i32 9
	%tmp.234 = load %String* (%Main*) *, %String* (%Main*) ** %tmp.233
conform
	%tmp.235 = call %String*(%Main*) %tmp.234( %Main* %tmp.229 )
	ret %String* %tmp.235

abort:
	call void @abort(  )
	unreachable
}

method
define i32 @Main_get_int(%Main* %self) {

entry:
	%tmp.236 = alloca %Main*
conform
	store %Main* %self, %Main** %tmp.236
block
let
newClass
	%tmp.237 = call %A2I* @A2I_new(  )
	%tmp.238 = alloca %A2I*
conform
	store %A2I* %tmp.237, %A2I** %tmp.238
let
dispatch
Object
	%tmp.239 = load %Main*, %Main** %tmp.236
	%tmp.240 = icmp eq %Main* %tmp.239, null
	br i1 %tmp.240, label %abort, label %ok.30

ok.30:
	%tmp.241 = getelementptr %Main, %Main* %tmp.239, i32 0, i32 0
	%tmp.242 = load %Main_vtable*, %Main_vtable** %tmp.241
	%tmp.243 = getelementptr %Main_vtable, %Main_vtable* %tmp.242, i32 0, i32 12
	%tmp.244 = load %String* (%Main*) *, %String* (%Main*) ** %tmp.243
conform
	%tmp.245 = call %String*(%Main*) %tmp.244( %Main* %tmp.239 )
	%tmp.246 = alloca %String*
conform
	store %String* %tmp.245, %String** %tmp.246
dispatch
Object
	%tmp.247 = load %String*, %String** %tmp.246
Object
	%tmp.248 = load %A2I*, %A2I** %tmp.238
	%tmp.249 = icmp eq %A2I* %tmp.248, null
	br i1 %tmp.249, label %abort, label %ok.31

ok.31:
	%tmp.250 = getelementptr %A2I, %A2I* %tmp.248, i32 0, i32 0
	%tmp.251 = load %A2I_vtable*, %A2I_vtable** %tmp.250
	%tmp.252 = getelementptr %A2I_vtable, %A2I_vtable* %tmp.251, i32 0, i32 9
	%tmp.253 = load i32 (%A2I*,%String*) *, i32 (%A2I*,%String*) ** %tmp.252
conform
conform
	%tmp.254 = call i32(%A2I*, %String*) %tmp.253( %A2I* %tmp.248, %String* %tmp.247 )
	ret i32 %tmp.254

abort:
	call void @abort(  )
	unreachable
}

method
define i1 @Main_is_even(%Main* %self, i32 %num) {

entry:
	%tmp.255 = alloca %Main*
conform
	store %Main* %self, %Main** %tmp.255
	%tmp.256 = alloca i32
conform
	store i32 %num, i32* %tmp.256
let
Object
	%tmp.257 = load i32, i32* %tmp.256
	%tmp.258 = alloca i32
conform
	store i32 %tmp.257, i32* %tmp.258
cond
	%tmp.259 = alloca i1
lt
Object
	%tmp.260 = load i32, i32* %tmp.258
Integer Constant
conform
conform
	%tmp.261 = icmp slt i32 %tmp.260, 0
	br i1 %tmp.261, label %true.0, label %false.0

true.0:
dispatch
neg
Object
	%tmp.262 = load i32, i32* %tmp.258
conform
	%tmp.263 = sub i32 0, %tmp.262
Object
	%tmp.264 = load %Main*, %Main** %tmp.255
	%tmp.265 = icmp eq %Main* %tmp.264, null
	br i1 %tmp.265, label %abort, label %ok.32

ok.32:
	%tmp.266 = getelementptr %Main, %Main* %tmp.264, i32 0, i32 0
	%tmp.267 = load %Main_vtable*, %Main_vtable** %tmp.266
	%tmp.268 = getelementptr %Main_vtable, %Main_vtable* %tmp.267, i32 0, i32 14
	%tmp.269 = load i1 (%Main*,i32) *, i1 (%Main*,i32) ** %tmp.268
conform
conform
	%tmp.270 = call i1(%Main*, i32) %tmp.269( %Main* %tmp.264, i32 %tmp.263 )
conform
	store i1 %tmp.270, i1* %tmp.259
	br label %end.0

false.0:
cond
	%tmp.271 = alloca i1
eq
Integer Constant
Object
	%tmp.272 = load i32, i32* %tmp.258
	%tmp.273 = icmp eq i32 0, %tmp.272
	br i1 %tmp.273, label %true.1, label %false.1

true.1:
Boolean Constant
conform
	store i1 true, i1* %tmp.271
	br label %end.1

false.1:
cond
	%tmp.274 = alloca i1
eq
Integer Constant
Object
	%tmp.275 = load i32, i32* %tmp.258
	%tmp.276 = icmp eq i32 1, %tmp.275
	br i1 %tmp.276, label %true.2, label %false.2

true.2:
Boolean Constant
conform
	store i1 false, i1* %tmp.274
	br label %end.2

false.2:
dispatch
sub
Object
	%tmp.277 = load i32, i32* %tmp.258
Integer Constant
conform
conform
	%tmp.278 = sub i32 %tmp.277, 2
Object
	%tmp.279 = load %Main*, %Main** %tmp.255
	%tmp.280 = icmp eq %Main* %tmp.279, null
	br i1 %tmp.280, label %abort, label %ok.33

ok.33:
	%tmp.281 = getelementptr %Main, %Main* %tmp.279, i32 0, i32 0
	%tmp.282 = load %Main_vtable*, %Main_vtable** %tmp.281
	%tmp.283 = getelementptr %Main_vtable, %Main_vtable* %tmp.282, i32 0, i32 14
	%tmp.284 = load i1 (%Main*,i32) *, i1 (%Main*,i32) ** %tmp.283
conform
conform
	%tmp.285 = call i1(%Main*, i32) %tmp.284( %Main* %tmp.279, i32 %tmp.278 )
conform
	store i1 %tmp.285, i1* %tmp.274
	br label %end.2

end.2:
	%tmp.286 = load i1, i1* %tmp.274
conform
	store i1 %tmp.286, i1* %tmp.271
	br label %end.1

end.1:
	%tmp.287 = load i1, i1* %tmp.271
conform
	store i1 %tmp.287, i1* %tmp.259
	br label %end.0

end.0:
	%tmp.288 = load i1, i1* %tmp.259
	ret i1 %tmp.288

abort:
	call void @abort(  )
	unreachable
}

method
define %Main* @Main_class_type(%Main* %self, %A* %var) {

entry:
	%tmp.289 = alloca %Main*
conform
	store %Main* %self, %Main** %tmp.289
	%tmp.290 = alloca %A*
conform
	store %A* %var, %A** %tmp.290
typecase::code()
Object
	%tmp.291 = load %A*, %A** %tmp.290
	%vtpm.0 = icmp eq %A* %tmp.291, null
	br i1 %vtpm.0, label %abort, label %ok.34

ok.34:
	%tmp.292 = getelementptr %A, %A* %tmp.291, i32 0, i32 0
	%tmp.293 = load %A_vtable*, %A_vtable** %tmp.292
	%tmp.294 = getelementptr %A_vtable, %A_vtable* %tmp.293, i32 0, i32 0
	%tmp.295 = load i32, i32* %tmp.294
	br label %case.hdr.3

case.hdr.3:
	%vtpm.1 = alloca %Main*
	br label %case.10.3

case.10.3:
In branch_class::code()
	%tmp.296 = icmp slt i32 %tmp.295, 10
	br i1 %tmp.296, label %br_exit.10.3, label %src_gte_br.10.3

src_gte_br.10.3:
	%tmp.297 = icmp sgt i32 %tmp.295, 10
	br i1 %tmp.297, label %br_exit.10.3, label %src_lte_mc.10.3

src_lte_mc.10.3:
	%tmp.298 = alloca %E*
conform
	%tmp.299 = bitcast %A* %tmp.291 to %E*
	store %E* %tmp.299, %E** %tmp.298
dispatch
string_const
Object
	%tmp.300 = load %Main*, %Main** %tmp.289
	%tmp.301 = icmp eq %Main* %tmp.300, null
	br i1 %tmp.301, label %abort, label %ok.35

ok.35:
	%tmp.302 = getelementptr %Main, %Main* %tmp.300, i32 0, i32 0
	%tmp.303 = load %Main_vtable*, %Main_vtable** %tmp.302
	%tmp.304 = getelementptr %Main_vtable, %Main_vtable* %tmp.303, i32 0, i32 7
	%tmp.305 = load %Main* (%Main*,%String*) *, %Main* (%Main*,%String*) ** %tmp.304
conform
conform
	%tmp.306 = call %Main*(%Main*, %String*) %tmp.305( %Main* %tmp.300, %String* @String.38 )
conform
conform
	store %Main* %tmp.306, %Main** %vtpm.1
	br label %case.exit.3

br_exit.10.3:
Done branch_class::code()
	br label %case.9.3

case.9.3:
In branch_class::code()
	%tmp.307 = icmp slt i32 %tmp.295, 9
	br i1 %tmp.307, label %br_exit.9.3, label %src_gte_br.9.3

src_gte_br.9.3:
	%tmp.308 = icmp sgt i32 %tmp.295, 10
	br i1 %tmp.308, label %br_exit.9.3, label %src_lte_mc.9.3

src_lte_mc.9.3:
	%tmp.309 = alloca %D*
conform
	%tmp.310 = bitcast %A* %tmp.291 to %D*
	store %D* %tmp.310, %D** %tmp.309
dispatch
string_const
Object
	%tmp.311 = load %Main*, %Main** %tmp.289
	%tmp.312 = icmp eq %Main* %tmp.311, null
	br i1 %tmp.312, label %abort, label %ok.36

ok.36:
	%tmp.313 = getelementptr %Main, %Main* %tmp.311, i32 0, i32 0
	%tmp.314 = load %Main_vtable*, %Main_vtable** %tmp.313
	%tmp.315 = getelementptr %Main_vtable, %Main_vtable* %tmp.314, i32 0, i32 7
	%tmp.316 = load %Main* (%Main*,%String*) *, %Main* (%Main*,%String*) ** %tmp.315
conform
conform
	%tmp.317 = call %Main*(%Main*, %String*) %tmp.316( %Main* %tmp.311, %String* @String.37 )
conform
conform
	store %Main* %tmp.317, %Main** %vtpm.1
	br label %case.exit.3

br_exit.9.3:
Done branch_class::code()
	br label %case.8.3

case.8.3:
In branch_class::code()
	%tmp.318 = icmp slt i32 %tmp.295, 8
	br i1 %tmp.318, label %br_exit.8.3, label %src_gte_br.8.3

src_gte_br.8.3:
	%tmp.319 = icmp sgt i32 %tmp.295, 8
	br i1 %tmp.319, label %br_exit.8.3, label %src_lte_mc.8.3

src_lte_mc.8.3:
	%tmp.320 = alloca %C*
conform
	%tmp.321 = bitcast %A* %tmp.291 to %C*
	store %C* %tmp.321, %C** %tmp.320
dispatch
string_const
Object
	%tmp.322 = load %Main*, %Main** %tmp.289
	%tmp.323 = icmp eq %Main* %tmp.322, null
	br i1 %tmp.323, label %abort, label %ok.37

ok.37:
	%tmp.324 = getelementptr %Main, %Main* %tmp.322, i32 0, i32 0
	%tmp.325 = load %Main_vtable*, %Main_vtable** %tmp.324
	%tmp.326 = getelementptr %Main_vtable, %Main_vtable* %tmp.325, i32 0, i32 7
	%tmp.327 = load %Main* (%Main*,%String*) *, %Main* (%Main*,%String*) ** %tmp.326
conform
conform
	%tmp.328 = call %Main*(%Main*, %String*) %tmp.327( %Main* %tmp.322, %String* @String.36 )
conform
conform
	store %Main* %tmp.328, %Main** %vtpm.1
	br label %case.exit.3

br_exit.8.3:
Done branch_class::code()
	br label %case.7.3

case.7.3:
In branch_class::code()
	%tmp.329 = icmp slt i32 %tmp.295, 7
	br i1 %tmp.329, label %br_exit.7.3, label %src_gte_br.7.3

src_gte_br.7.3:
	%tmp.330 = icmp sgt i32 %tmp.295, 10
	br i1 %tmp.330, label %br_exit.7.3, label %src_lte_mc.7.3

src_lte_mc.7.3:
	%tmp.331 = alloca %B*
conform
	%tmp.332 = bitcast %A* %tmp.291 to %B*
	store %B* %tmp.332, %B** %tmp.331
dispatch
string_const
Object
	%tmp.333 = load %Main*, %Main** %tmp.289
	%tmp.334 = icmp eq %Main* %tmp.333, null
	br i1 %tmp.334, label %abort, label %ok.38

ok.38:
	%tmp.335 = getelementptr %Main, %Main* %tmp.333, i32 0, i32 0
	%tmp.336 = load %Main_vtable*, %Main_vtable** %tmp.335
	%tmp.337 = getelementptr %Main_vtable, %Main_vtable* %tmp.336, i32 0, i32 7
	%tmp.338 = load %Main* (%Main*,%String*) *, %Main* (%Main*,%String*) ** %tmp.337
conform
conform
	%tmp.339 = call %Main*(%Main*, %String*) %tmp.338( %Main* %tmp.333, %String* @String.35 )
conform
conform
	store %Main* %tmp.339, %Main** %vtpm.1
	br label %case.exit.3

br_exit.7.3:
Done branch_class::code()
	br label %case.6.3

case.6.3:
In branch_class::code()
	%tmp.340 = icmp slt i32 %tmp.295, 6
	br i1 %tmp.340, label %br_exit.6.3, label %src_gte_br.6.3

src_gte_br.6.3:
	%tmp.341 = icmp sgt i32 %tmp.295, 10
	br i1 %tmp.341, label %br_exit.6.3, label %src_lte_mc.6.3

src_lte_mc.6.3:
	%tmp.342 = alloca %A*
conform
	store %A* %tmp.291, %A** %tmp.342
dispatch
string_const
Object
	%tmp.343 = load %Main*, %Main** %tmp.289
	%tmp.344 = icmp eq %Main* %tmp.343, null
	br i1 %tmp.344, label %abort, label %ok.39

ok.39:
	%tmp.345 = getelementptr %Main, %Main* %tmp.343, i32 0, i32 0
	%tmp.346 = load %Main_vtable*, %Main_vtable** %tmp.345
	%tmp.347 = getelementptr %Main_vtable, %Main_vtable* %tmp.346, i32 0, i32 7
	%tmp.348 = load %Main* (%Main*,%String*) *, %Main* (%Main*,%String*) ** %tmp.347
conform
conform
	%tmp.349 = call %Main*(%Main*, %String*) %tmp.348( %Main* %tmp.343, %String* @String.34 )
conform
conform
	store %Main* %tmp.349, %Main** %vtpm.1
	br label %case.exit.3

br_exit.6.3:
Done branch_class::code()
	br label %case.0.3

case.0.3:
In branch_class::code()
	%tmp.350 = icmp slt i32 %tmp.295, 0
	br i1 %tmp.350, label %br_exit.0.3, label %src_gte_br.0.3

src_gte_br.0.3:
	%tmp.351 = icmp sgt i32 %tmp.295, 11
	br i1 %tmp.351, label %br_exit.0.3, label %src_lte_mc.0.3

src_lte_mc.0.3:
	%tmp.352 = alloca %Object*
conform
	%tmp.353 = bitcast %A* %tmp.291 to %Object*
	store %Object* %tmp.353, %Object** %tmp.352
dispatch
string_const
Object
	%tmp.354 = load %Main*, %Main** %tmp.289
	%tmp.355 = icmp eq %Main* %tmp.354, null
	br i1 %tmp.355, label %abort, label %ok.40

ok.40:
	%tmp.356 = getelementptr %Main, %Main* %tmp.354, i32 0, i32 0
	%tmp.357 = load %Main_vtable*, %Main_vtable** %tmp.356
	%tmp.358 = getelementptr %Main_vtable, %Main_vtable* %tmp.357, i32 0, i32 7
	%tmp.359 = load %Main* (%Main*,%String*) *, %Main* (%Main*,%String*) ** %tmp.358
conform
conform
	%tmp.360 = call %Main*(%Main*, %String*) %tmp.359( %Main* %tmp.354, %String* @String.39 )
conform
conform
	store %Main* %tmp.360, %Main** %vtpm.1
	br label %case.exit.3

br_exit.0.3:
Done branch_class::code()
	br label %abort

case.exit.3:
	%vtpm.2 = load %Main*, %Main** %vtpm.1
Done typcase::code()
	ret %Main* %vtpm.2

abort:
	call void @abort(  )
	unreachable
}

method
define %Main* @Main_print(%Main* %self, %A* %var) {

entry:
	%tmp.361 = alloca %Main*
conform
	store %Main* %self, %Main** %tmp.361
	%tmp.362 = alloca %A*
conform
	store %A* %var, %A** %tmp.362
let
newClass
	%tmp.363 = call %A2I* @A2I_new(  )
	%tmp.364 = alloca %A2I*
conform
	store %A2I* %tmp.363, %A2I** %tmp.364
block
dispatch
dispatch
dispatch
Object
	%tmp.365 = load %A*, %A** %tmp.362
	%tmp.366 = icmp eq %A* %tmp.365, null
	br i1 %tmp.366, label %abort, label %ok.41

ok.41:
	%tmp.367 = getelementptr %A, %A* %tmp.365, i32 0, i32 0
	%tmp.368 = load %A_vtable*, %A_vtable** %tmp.367
	%tmp.369 = getelementptr %A_vtable, %A_vtable* %tmp.368, i32 0, i32 7
	%tmp.370 = load i32 (%A*) *, i32 (%A*) ** %tmp.369
conform
	%tmp.371 = call i32(%A*) %tmp.370( %A* %tmp.365 )
Object
	%tmp.372 = load %A2I*, %A2I** %tmp.364
	%tmp.373 = icmp eq %A2I* %tmp.372, null
	br i1 %tmp.373, label %abort, label %ok.42

ok.42:
	%tmp.374 = getelementptr %A2I, %A2I* %tmp.372, i32 0, i32 0
	%tmp.375 = load %A2I_vtable*, %A2I_vtable** %tmp.374
	%tmp.376 = getelementptr %A2I_vtable, %A2I_vtable* %tmp.375, i32 0, i32 11
	%tmp.377 = load %String* (%A2I*,i32) *, %String* (%A2I*,i32) ** %tmp.376
conform
conform
	%tmp.378 = call %String*(%A2I*, i32) %tmp.377( %A2I* %tmp.372, i32 %tmp.371 )
Object
	%tmp.379 = load %Main*, %Main** %tmp.361
	%tmp.380 = icmp eq %Main* %tmp.379, null
	br i1 %tmp.380, label %abort, label %ok.43

ok.43:
	%tmp.381 = getelementptr %Main, %Main* %tmp.379, i32 0, i32 0
	%tmp.382 = load %Main_vtable*, %Main_vtable** %tmp.381
	%tmp.383 = getelementptr %Main_vtable, %Main_vtable* %tmp.382, i32 0, i32 7
	%tmp.384 = load %Main* (%Main*,%String*) *, %Main* (%Main*,%String*) ** %tmp.383
conform
conform
	%tmp.385 = call %Main*(%Main*, %String*) %tmp.384( %Main* %tmp.379, %String* %tmp.378 )
dispatch
string_const
Object
	%tmp.386 = load %Main*, %Main** %tmp.361
	%tmp.387 = icmp eq %Main* %tmp.386, null
	br i1 %tmp.387, label %abort, label %ok.44

ok.44:
	%tmp.388 = getelementptr %Main, %Main* %tmp.386, i32 0, i32 0
	%tmp.389 = load %Main_vtable*, %Main_vtable** %tmp.388
	%tmp.390 = getelementptr %Main_vtable, %Main_vtable* %tmp.389, i32 0, i32 7
	%tmp.391 = load %Main* (%Main*,%String*) *, %Main* (%Main*,%String*) ** %tmp.390
conform
conform
	%tmp.392 = call %Main*(%Main*, %String*) %tmp.391( %Main* %tmp.386, %String* @String.40 )
	ret %Main* %tmp.392

abort:
	call void @abort(  )
	unreachable
}

method
define %Object* @Main_main(%Main* %self) {

entry:
	%tmp.393 = alloca %Main*
conform
	store %Main* %self, %Main** %tmp.393
block
assign
newClass
	%tmp.394 = call %A* @A_new(  )
	%tmp.395 = load %Main*, %Main** %tmp.393
	%tmp.396 = getelementptr %Main, %Main* %tmp.395, i32 0, i32 2
conform
	store %A* %tmp.394, %A** %tmp.396
loop
	br label %loop.4

loop.4:
Object
	%tmp.397 = load %Main*, %Main** %tmp.393
	%tmp.398 = getelementptr %Main, %Main* %tmp.397, i32 0, i32 4
	%tmp.399 = load i1, i1* %tmp.398
	br i1 %tmp.399, label %true.4, label %false.4

true.4:
block
dispatch
string_const
Object
	%tmp.400 = load %Main*, %Main** %tmp.393
	%tmp.401 = icmp eq %Main* %tmp.400, null
	br i1 %tmp.401, label %abort, label %ok.45

ok.45:
	%tmp.402 = getelementptr %Main, %Main* %tmp.400, i32 0, i32 0
	%tmp.403 = load %Main_vtable*, %Main_vtable** %tmp.402
	%tmp.404 = getelementptr %Main_vtable, %Main_vtable* %tmp.403, i32 0, i32 7
	%tmp.405 = load %Main* (%Main*,%String*) *, %Main* (%Main*,%String*) ** %tmp.404
conform
conform
	%tmp.406 = call %Main*(%Main*, %String*) %tmp.405( %Main* %tmp.400, %String* @String.41 )
dispatch
Object
	%tmp.407 = load %Main*, %Main** %tmp.393
	%tmp.408 = getelementptr %Main, %Main* %tmp.407, i32 0, i32 2
	%tmp.409 = load %A*, %A** %tmp.408
Object
	%tmp.410 = load %Main*, %Main** %tmp.393
	%tmp.411 = icmp eq %Main* %tmp.410, null
	br i1 %tmp.411, label %abort, label %ok.46

ok.46:
	%tmp.412 = getelementptr %Main, %Main* %tmp.410, i32 0, i32 0
	%tmp.413 = load %Main_vtable*, %Main_vtable** %tmp.412
	%tmp.414 = getelementptr %Main_vtable, %Main_vtable* %tmp.413, i32 0, i32 16
	%tmp.415 = load %Main* (%Main*,%A*) *, %Main* (%Main*,%A*) ** %tmp.414
conform
conform
	%tmp.416 = call %Main*(%Main*, %A*) %tmp.415( %Main* %tmp.410, %A* %tmp.409 )
cond
	%tmp.417 = alloca %Main*
dispatch
dispatch
Object
	%tmp.418 = load %Main*, %Main** %tmp.393
	%tmp.419 = getelementptr %Main, %Main* %tmp.418, i32 0, i32 2
	%tmp.420 = load %A*, %A** %tmp.419
	%tmp.421 = icmp eq %A* %tmp.420, null
	br i1 %tmp.421, label %abort, label %ok.47

ok.47:
	%tmp.422 = getelementptr %A, %A* %tmp.420, i32 0, i32 0
	%tmp.423 = load %A_vtable*, %A_vtable** %tmp.422
	%tmp.424 = getelementptr %A_vtable, %A_vtable* %tmp.423, i32 0, i32 7
	%tmp.425 = load i32 (%A*) *, i32 (%A*) ** %tmp.424
conform
	%tmp.426 = call i32(%A*) %tmp.425( %A* %tmp.420 )
Object
	%tmp.427 = load %Main*, %Main** %tmp.393
	%tmp.428 = icmp eq %Main* %tmp.427, null
	br i1 %tmp.428, label %abort, label %ok.48

ok.48:
	%tmp.429 = getelementptr %Main, %Main* %tmp.427, i32 0, i32 0
	%tmp.430 = load %Main_vtable*, %Main_vtable** %tmp.429
	%tmp.431 = getelementptr %Main_vtable, %Main_vtable* %tmp.430, i32 0, i32 14
	%tmp.432 = load i1 (%Main*,i32) *, i1 (%Main*,i32) ** %tmp.431
conform
conform
	%tmp.433 = call i1(%Main*, i32) %tmp.432( %Main* %tmp.427, i32 %tmp.426 )
	br i1 %tmp.433, label %true.5, label %false.5

true.5:
dispatch
string_const
Object
	%tmp.434 = load %Main*, %Main** %tmp.393
	%tmp.435 = icmp eq %Main* %tmp.434, null
	br i1 %tmp.435, label %abort, label %ok.49

ok.49:
	%tmp.436 = getelementptr %Main, %Main* %tmp.434, i32 0, i32 0
	%tmp.437 = load %Main_vtable*, %Main_vtable** %tmp.436
	%tmp.438 = getelementptr %Main_vtable, %Main_vtable* %tmp.437, i32 0, i32 7
	%tmp.439 = load %Main* (%Main*,%String*) *, %Main* (%Main*,%String*) ** %tmp.438
conform
conform
	%tmp.440 = call %Main*(%Main*, %String*) %tmp.439( %Main* %tmp.434, %String* @String.42 )
conform
	store %Main* %tmp.440, %Main** %tmp.417
	br label %end.5

false.5:
dispatch
string_const
Object
	%tmp.441 = load %Main*, %Main** %tmp.393
	%tmp.442 = icmp eq %Main* %tmp.441, null
	br i1 %tmp.442, label %abort, label %ok.50

ok.50:
	%tmp.443 = getelementptr %Main, %Main* %tmp.441, i32 0, i32 0
	%tmp.444 = load %Main_vtable*, %Main_vtable** %tmp.443
	%tmp.445 = getelementptr %Main_vtable, %Main_vtable* %tmp.444, i32 0, i32 7
	%tmp.446 = load %Main* (%Main*,%String*) *, %Main* (%Main*,%String*) ** %tmp.445
conform
conform
	%tmp.447 = call %Main*(%Main*, %String*) %tmp.446( %Main* %tmp.441, %String* @String.43 )
conform
	store %Main* %tmp.447, %Main** %tmp.417
	br label %end.5

end.5:
	%tmp.448 = load %Main*, %Main** %tmp.417
dispatch
Object
	%tmp.449 = load %Main*, %Main** %tmp.393
	%tmp.450 = getelementptr %Main, %Main* %tmp.449, i32 0, i32 2
	%tmp.451 = load %A*, %A** %tmp.450
Object
	%tmp.452 = load %Main*, %Main** %tmp.393
	%tmp.453 = icmp eq %Main* %tmp.452, null
	br i1 %tmp.453, label %abort, label %ok.51

ok.51:
	%tmp.454 = getelementptr %Main, %Main* %tmp.452, i32 0, i32 0
	%tmp.455 = load %Main_vtable*, %Main_vtable** %tmp.454
	%tmp.456 = getelementptr %Main_vtable, %Main_vtable* %tmp.455, i32 0, i32 15
	%tmp.457 = load %Main* (%Main*,%A*) *, %Main* (%Main*,%A*) ** %tmp.456
conform
conform
	%tmp.458 = call %Main*(%Main*, %A*) %tmp.457( %Main* %tmp.452, %A* %tmp.451 )
assign
dispatch
Object
	%tmp.459 = load %Main*, %Main** %tmp.393
	%tmp.460 = icmp eq %Main* %tmp.459, null
	br i1 %tmp.460, label %abort, label %ok.52

ok.52:
	%tmp.461 = getelementptr %Main, %Main* %tmp.459, i32 0, i32 0
	%tmp.462 = load %Main_vtable*, %Main_vtable** %tmp.461
	%tmp.463 = getelementptr %Main_vtable, %Main_vtable* %tmp.462, i32 0, i32 11
	%tmp.464 = load %String* (%Main*) *, %String* (%Main*) ** %tmp.463
conform
	%tmp.465 = call %String*(%Main*) %tmp.464( %Main* %tmp.459 )
	%tmp.466 = load %Main*, %Main** %tmp.393
	%tmp.467 = getelementptr %Main, %Main* %tmp.466, i32 0, i32 1
conform
	store %String* %tmp.465, %String** %tmp.467
cond
	%tmp.468 = alloca %B*
eq
Object
	%tmp.469 = load %Main*, %Main** %tmp.393
	%tmp.470 = getelementptr %Main, %Main* %tmp.469, i32 0, i32 1
	%tmp.471 = load %String*, %String** %tmp.470
string_const
conform
	%tmp.472 = getelementptr %String, %String* %tmp.471, i32 0, i32 1
	%tmp.473 = load i8*, i8** %tmp.472
conform
	%tmp.474 = getelementptr %String, %String* @String.44, i32 0, i32 1
	%tmp.475 = load i8*, i8** %tmp.474
	%tmp.476 = call i32(i8*, i8*) @strcmp( i8* %tmp.473, i8* %tmp.475 )
	%tmp.477 = icmp eq i32 %tmp.476, 0
	br i1 %tmp.477, label %true.6, label %false.6

true.6:
block
assign
dispatch
dispatch
Object
	%tmp.478 = load %Main*, %Main** %tmp.393
	%tmp.479 = icmp eq %Main* %tmp.478, null
	br i1 %tmp.479, label %abort, label %ok.53

ok.53:
	%tmp.480 = getelementptr %Main, %Main* %tmp.478, i32 0, i32 0
	%tmp.481 = load %Main_vtable*, %Main_vtable** %tmp.480
	%tmp.482 = getelementptr %Main_vtable, %Main_vtable* %tmp.481, i32 0, i32 13
	%tmp.483 = load i32 (%Main*) *, i32 (%Main*) ** %tmp.482
conform
	%tmp.484 = call i32(%Main*) %tmp.483( %Main* %tmp.478 )
newClass
	%tmp.485 = call %A* @A_new(  )
	%tmp.486 = icmp eq %A* %tmp.485, null
	br i1 %tmp.486, label %abort, label %ok.54

ok.54:
	%tmp.487 = getelementptr %A, %A* %tmp.485, i32 0, i32 0
	%tmp.488 = load %A_vtable*, %A_vtable** %tmp.487
	%tmp.489 = getelementptr %A_vtable, %A_vtable* %tmp.488, i32 0, i32 8
	%tmp.490 = load %A* (%A*,i32) *, %A* (%A*,i32) ** %tmp.489
conform
conform
	%tmp.491 = call %A*(%A*, i32) %tmp.490( %A* %tmp.485, i32 %tmp.484 )
	%tmp.492 = load %Main*, %Main** %tmp.393
	%tmp.493 = getelementptr %Main, %Main* %tmp.492, i32 0, i32 3
conform
	store %A* %tmp.491, %A** %tmp.493
assign
dispatch
dispatch
Object
	%tmp.494 = load %Main*, %Main** %tmp.393
	%tmp.495 = getelementptr %Main, %Main* %tmp.494, i32 0, i32 2
	%tmp.496 = load %A*, %A** %tmp.495
	%tmp.497 = icmp eq %A* %tmp.496, null
	br i1 %tmp.497, label %abort, label %ok.55

ok.55:
	%tmp.498 = getelementptr %A, %A* %tmp.496, i32 0, i32 0
	%tmp.499 = load %A_vtable*, %A_vtable** %tmp.498
	%tmp.500 = getelementptr %A_vtable, %A_vtable* %tmp.499, i32 0, i32 7
	%tmp.501 = load i32 (%A*) *, i32 (%A*) ** %tmp.500
conform
	%tmp.502 = call i32(%A*) %tmp.501( %A* %tmp.496 )
dispatch
Object
	%tmp.503 = load %Main*, %Main** %tmp.393
	%tmp.504 = getelementptr %Main, %Main* %tmp.503, i32 0, i32 3
	%tmp.505 = load %A*, %A** %tmp.504
	%tmp.506 = icmp eq %A* %tmp.505, null
	br i1 %tmp.506, label %abort, label %ok.56

ok.56:
	%tmp.507 = getelementptr %A, %A* %tmp.505, i32 0, i32 0
	%tmp.508 = load %A_vtable*, %A_vtable** %tmp.507
	%tmp.509 = getelementptr %A_vtable, %A_vtable* %tmp.508, i32 0, i32 7
	%tmp.510 = load i32 (%A*) *, i32 (%A*) ** %tmp.509
conform
	%tmp.511 = call i32(%A*) %tmp.510( %A* %tmp.505 )
newClass
	%tmp.512 = call %B* @B_new(  )
	%tmp.513 = icmp eq %B* %tmp.512, null
	br i1 %tmp.513, label %abort, label %ok.57

ok.57:
	%tmp.514 = getelementptr %B, %B* %tmp.512, i32 0, i32 0
	%tmp.515 = load %B_vtable*, %B_vtable** %tmp.514
	%tmp.516 = getelementptr %B_vtable, %B_vtable* %tmp.515, i32 0, i32 10
	%tmp.517 = load %B* (%B*,i32,i32) *, %B* (%B*,i32,i32) ** %tmp.516
conform
conform
conform
	%tmp.518 = call %B*(%B*, i32, i32) %tmp.517( %B* %tmp.512, i32 %tmp.502, i32 %tmp.511 )
	%tmp.519 = load %Main*, %Main** %tmp.393
	%tmp.520 = getelementptr %Main, %Main* %tmp.519, i32 0, i32 2
conform
	%tmp.521 = bitcast %B* %tmp.518 to %A*
	store %A* %tmp.521, %A** %tmp.520
conform
	store %B* %tmp.518, %B** %tmp.468
	br label %end.6

false.6:
cond
	%tmp.522 = alloca %Object*
eq
Object
	%tmp.523 = load %Main*, %Main** %tmp.393
	%tmp.524 = getelementptr %Main, %Main* %tmp.523, i32 0, i32 1
	%tmp.525 = load %String*, %String** %tmp.524
string_const
conform
	%tmp.526 = getelementptr %String, %String* %tmp.525, i32 0, i32 1
	%tmp.527 = load i8*, i8** %tmp.526
conform
	%tmp.528 = getelementptr %String, %String* @String.45, i32 0, i32 1
	%tmp.529 = load i8*, i8** %tmp.528
	%tmp.530 = call i32(i8*, i8*) @strcmp( i8* %tmp.527, i8* %tmp.529 )
	%tmp.531 = icmp eq i32 %tmp.530, 0
	br i1 %tmp.531, label %true.7, label %false.7

true.7:
typecase::code()
Object
	%tmp.532 = load %Main*, %Main** %tmp.393
	%tmp.533 = getelementptr %Main, %Main* %tmp.532, i32 0, i32 2
	%tmp.534 = load %A*, %A** %tmp.533
	%vtpm.3 = icmp eq %A* %tmp.534, null
	br i1 %vtpm.3, label %abort, label %ok.58

ok.58:
	%tmp.535 = getelementptr %A, %A* %tmp.534, i32 0, i32 0
	%tmp.536 = load %A_vtable*, %A_vtable** %tmp.535
	%tmp.537 = getelementptr %A_vtable, %A_vtable* %tmp.536, i32 0, i32 0
	%tmp.538 = load i32, i32* %tmp.537
	br label %case.hdr.8

case.hdr.8:
	%vtpm.4 = alloca %A*
	br label %case.8.8

case.8.8:
In branch_class::code()
	%tmp.539 = icmp slt i32 %tmp.538, 8
	br i1 %tmp.539, label %br_exit.8.8, label %src_gte_br.8.8

src_gte_br.8.8:
	%tmp.540 = icmp sgt i32 %tmp.538, 8
	br i1 %tmp.540, label %br_exit.8.8, label %src_lte_mc.8.8

src_lte_mc.8.8:
	%tmp.541 = alloca %C*
conform
	%tmp.542 = bitcast %A* %tmp.534 to %C*
	store %C* %tmp.542, %C** %tmp.541
assign
dispatch
dispatch
Object
	%tmp.543 = load %C*, %C** %tmp.541
	%tmp.544 = icmp eq %C* %tmp.543, null
	br i1 %tmp.544, label %abort, label %ok.59

ok.59:
	%tmp.545 = getelementptr %C, %C* %tmp.543, i32 0, i32 0
	%tmp.546 = load %C_vtable*, %C_vtable** %tmp.545
	%tmp.547 = getelementptr %C_vtable, %C_vtable* %tmp.546, i32 0, i32 7
	%tmp.548 = load i32 (%C*) *, i32 (%C*) ** %tmp.547
conform
	%tmp.549 = call i32(%C*) %tmp.548( %C* %tmp.543 )
Object
	%tmp.550 = load %C*, %C** %tmp.541
	%tmp.551 = icmp eq %C* %tmp.550, null
	br i1 %tmp.551, label %abort, label %ok.60

ok.60:
	%tmp.552 = getelementptr %C, %C* %tmp.550, i32 0, i32 0
	%tmp.553 = load %C_vtable*, %C_vtable** %tmp.552
	%tmp.554 = getelementptr %C_vtable, %C_vtable* %tmp.553, i32 0, i32 14
	%tmp.555 = load %A* (%C*,i32) *, %A* (%C*,i32) ** %tmp.554
conform
conform
	%tmp.556 = call %A*(%C*, i32) %tmp.555( %C* %tmp.550, i32 %tmp.549 )
	%tmp.557 = load %Main*, %Main** %tmp.393
	%tmp.558 = getelementptr %Main, %Main* %tmp.557, i32 0, i32 2
conform
	store %A* %tmp.556, %A** %tmp.558
conform
	%tmp.559 = bitcast %A* %tmp.556 to %Object*
conform
	%tmp.560 = bitcast %Object* %tmp.559 to %A*
	store %A* %tmp.560, %A** %vtpm.4
	br label %case.exit.8

br_exit.8.8:
Done branch_class::code()
	br label %case.6.8

case.6.8:
In branch_class::code()
	%tmp.561 = icmp slt i32 %tmp.538, 6
	br i1 %tmp.561, label %br_exit.6.8, label %src_gte_br.6.8

src_gte_br.6.8:
	%tmp.562 = icmp sgt i32 %tmp.538, 10
	br i1 %tmp.562, label %br_exit.6.8, label %src_lte_mc.6.8

src_lte_mc.6.8:
	%tmp.563 = alloca %A*
conform
	store %A* %tmp.534, %A** %tmp.563
assign
dispatch
dispatch
Object
	%tmp.564 = load %A*, %A** %tmp.563
	%tmp.565 = icmp eq %A* %tmp.564, null
	br i1 %tmp.565, label %abort, label %ok.61

ok.61:
	%tmp.566 = getelementptr %A, %A* %tmp.564, i32 0, i32 0
	%tmp.567 = load %A_vtable*, %A_vtable** %tmp.566
	%tmp.568 = getelementptr %A_vtable, %A_vtable* %tmp.567, i32 0, i32 7
	%tmp.569 = load i32 (%A*) *, i32 (%A*) ** %tmp.568
conform
	%tmp.570 = call i32(%A*) %tmp.569( %A* %tmp.564 )
Object
	%tmp.571 = load %A*, %A** %tmp.563
	%tmp.572 = icmp eq %A* %tmp.571, null
	br i1 %tmp.572, label %abort, label %ok.62

ok.62:
	%tmp.573 = getelementptr %A, %A* %tmp.571, i32 0, i32 0
	%tmp.574 = load %A_vtable*, %A_vtable** %tmp.573
	%tmp.575 = getelementptr %A_vtable, %A_vtable* %tmp.574, i32 0, i32 11
	%tmp.576 = load %C* (%A*,i32) *, %C* (%A*,i32) ** %tmp.575
conform
conform
	%tmp.577 = call %C*(%A*, i32) %tmp.576( %A* %tmp.571, i32 %tmp.570 )
	%tmp.578 = load %Main*, %Main** %tmp.393
	%tmp.579 = getelementptr %Main, %Main* %tmp.578, i32 0, i32 2
conform
	%tmp.580 = bitcast %C* %tmp.577 to %A*
	store %A* %tmp.580, %A** %tmp.579
conform
	%tmp.581 = bitcast %C* %tmp.577 to %Object*
conform
	%tmp.582 = bitcast %Object* %tmp.581 to %A*
	store %A* %tmp.582, %A** %vtpm.4
	br label %case.exit.8

br_exit.6.8:
Done branch_class::code()
	br label %case.0.8

case.0.8:
In branch_class::code()
	%tmp.583 = icmp slt i32 %tmp.538, 0
	br i1 %tmp.583, label %br_exit.0.8, label %src_gte_br.0.8

src_gte_br.0.8:
	%tmp.584 = icmp sgt i32 %tmp.538, 11
	br i1 %tmp.584, label %br_exit.0.8, label %src_lte_mc.0.8

src_lte_mc.0.8:
	%tmp.585 = alloca %Object*
conform
	%tmp.586 = bitcast %A* %tmp.534 to %Object*
	store %Object* %tmp.586, %Object** %tmp.585
block
dispatch
string_const
Object
	%tmp.587 = load %Main*, %Main** %tmp.393
	%tmp.588 = icmp eq %Main* %tmp.587, null
	br i1 %tmp.588, label %abort, label %ok.63

ok.63:
	%tmp.589 = getelementptr %Main, %Main* %tmp.587, i32 0, i32 0
	%tmp.590 = load %Main_vtable*, %Main_vtable** %tmp.589
	%tmp.591 = getelementptr %Main_vtable, %Main_vtable* %tmp.590, i32 0, i32 7
	%tmp.592 = load %Main* (%Main*,%String*) *, %Main* (%Main*,%String*) ** %tmp.591
conform
conform
	%tmp.593 = call %Main*(%Main*, %String*) %tmp.592( %Main* %tmp.587, %String* @String.39 )
dispatch
Object
	%tmp.594 = load %Main*, %Main** %tmp.393
	%tmp.595 = icmp eq %Main* %tmp.594, null
	br i1 %tmp.595, label %abort, label %ok.64

ok.64:
	%tmp.596 = getelementptr %Main, %Main* %tmp.594, i32 0, i32 0
	%tmp.597 = load %Main_vtable*, %Main_vtable** %tmp.596
	%tmp.598 = getelementptr %Main_vtable, %Main_vtable* %tmp.597, i32 0, i32 4
	%tmp.599 = load %Object* (%Main*) *, %Object* (%Main*) ** %tmp.598
conform
	%tmp.600 = call %Object*(%Main*) %tmp.599( %Main* %tmp.594 )
Integer Constant
conform
	%tmp.601 = call %Int* @Int_new(  )
	call void(%Int*, i32) @Int_init( %Int* %tmp.601, i32 0 )
	%tmp.602 = bitcast %Int* %tmp.601 to %Object*
conform
	%tmp.603 = bitcast %Object* %tmp.602 to %A*
	store %A* %tmp.603, %A** %vtpm.4
	br label %case.exit.8

br_exit.0.8:
Done branch_class::code()
	br label %abort

case.exit.8:
	%vtpm.5 = load %A*, %A** %vtpm.4
Done typcase::code()
conform
	%tmp.604 = bitcast %A* %vtpm.5 to %Object*
	store %Object* %tmp.604, %Object** %tmp.522
	br label %end.7

false.7:
cond
	%tmp.605 = alloca %D*
eq
Object
	%tmp.606 = load %Main*, %Main** %tmp.393
	%tmp.607 = getelementptr %Main, %Main* %tmp.606, i32 0, i32 1
	%tmp.608 = load %String*, %String** %tmp.607
string_const
conform
	%tmp.609 = getelementptr %String, %String* %tmp.608, i32 0, i32 1
	%tmp.610 = load i8*, i8** %tmp.609
conform
	%tmp.611 = getelementptr %String, %String* @String.46, i32 0, i32 1
	%tmp.612 = load i8*, i8** %tmp.611
	%tmp.613 = call i32(i8*, i8*) @strcmp( i8* %tmp.610, i8* %tmp.612 )
	%tmp.614 = icmp eq i32 %tmp.613, 0
	br i1 %tmp.614, label %true.9, label %false.9

true.9:
block
assign
dispatch
dispatch
Object
	%tmp.615 = load %Main*, %Main** %tmp.393
	%tmp.616 = icmp eq %Main* %tmp.615, null
	br i1 %tmp.616, label %abort, label %ok.65

ok.65:
	%tmp.617 = getelementptr %Main, %Main* %tmp.615, i32 0, i32 0
	%tmp.618 = load %Main_vtable*, %Main_vtable** %tmp.617
	%tmp.619 = getelementptr %Main_vtable, %Main_vtable* %tmp.618, i32 0, i32 13
	%tmp.620 = load i32 (%Main*) *, i32 (%Main*) ** %tmp.619
conform
	%tmp.621 = call i32(%Main*) %tmp.620( %Main* %tmp.615 )
newClass
	%tmp.622 = call %A* @A_new(  )
	%tmp.623 = icmp eq %A* %tmp.622, null
	br i1 %tmp.623, label %abort, label %ok.66

ok.66:
	%tmp.624 = getelementptr %A, %A* %tmp.622, i32 0, i32 0
	%tmp.625 = load %A_vtable*, %A_vtable** %tmp.624
	%tmp.626 = getelementptr %A_vtable, %A_vtable* %tmp.625, i32 0, i32 8
	%tmp.627 = load %A* (%A*,i32) *, %A* (%A*,i32) ** %tmp.626
conform
conform
	%tmp.628 = call %A*(%A*, i32) %tmp.627( %A* %tmp.622, i32 %tmp.621 )
	%tmp.629 = load %Main*, %Main** %tmp.393
	%tmp.630 = getelementptr %Main, %Main* %tmp.629, i32 0, i32 3
conform
	store %A* %tmp.628, %A** %tmp.630
assign
dispatch
dispatch
Object
	%tmp.631 = load %Main*, %Main** %tmp.393
	%tmp.632 = getelementptr %Main, %Main* %tmp.631, i32 0, i32 2
	%tmp.633 = load %A*, %A** %tmp.632
	%tmp.634 = icmp eq %A* %tmp.633, null
	br i1 %tmp.634, label %abort, label %ok.67

ok.67:
	%tmp.635 = getelementptr %A, %A* %tmp.633, i32 0, i32 0
	%tmp.636 = load %A_vtable*, %A_vtable** %tmp.635
	%tmp.637 = getelementptr %A_vtable, %A_vtable* %tmp.636, i32 0, i32 7
	%tmp.638 = load i32 (%A*) *, i32 (%A*) ** %tmp.637
conform
	%tmp.639 = call i32(%A*) %tmp.638( %A* %tmp.633 )
dispatch
Object
	%tmp.640 = load %Main*, %Main** %tmp.393
	%tmp.641 = getelementptr %Main, %Main* %tmp.640, i32 0, i32 3
	%tmp.642 = load %A*, %A** %tmp.641
	%tmp.643 = icmp eq %A* %tmp.642, null
	br i1 %tmp.643, label %abort, label %ok.68

ok.68:
	%tmp.644 = getelementptr %A, %A* %tmp.642, i32 0, i32 0
	%tmp.645 = load %A_vtable*, %A_vtable** %tmp.644
	%tmp.646 = getelementptr %A_vtable, %A_vtable* %tmp.645, i32 0, i32 7
	%tmp.647 = load i32 (%A*) *, i32 (%A*) ** %tmp.646
conform
	%tmp.648 = call i32(%A*) %tmp.647( %A* %tmp.642 )
newClass
	%tmp.649 = call %D* @D_new(  )
	%tmp.650 = icmp eq %D* %tmp.649, null
	br i1 %tmp.650, label %abort, label %ok.69

ok.69:
	%tmp.651 = getelementptr %D, %D* %tmp.649, i32 0, i32 0
	%tmp.652 = load %D_vtable*, %D_vtable** %tmp.651
	%tmp.653 = getelementptr %D_vtable, %D_vtable* %tmp.652, i32 0, i32 12
	%tmp.654 = load %D* (%D*,i32,i32) *, %D* (%D*,i32,i32) ** %tmp.653
conform
conform
conform
	%tmp.655 = call %D*(%D*, i32, i32) %tmp.654( %D* %tmp.649, i32 %tmp.639, i32 %tmp.648 )
	%tmp.656 = load %Main*, %Main** %tmp.393
	%tmp.657 = getelementptr %Main, %Main* %tmp.656, i32 0, i32 2
conform
	%tmp.658 = bitcast %D* %tmp.655 to %A*
	store %A* %tmp.658, %A** %tmp.657
conform
	store %D* %tmp.655, %D** %tmp.605
	br label %end.9

false.9:
cond
	%tmp.659 = alloca %E*
eq
Object
	%tmp.660 = load %Main*, %Main** %tmp.393
	%tmp.661 = getelementptr %Main, %Main* %tmp.660, i32 0, i32 1
	%tmp.662 = load %String*, %String** %tmp.661
string_const
conform
	%tmp.663 = getelementptr %String, %String* %tmp.662, i32 0, i32 1
	%tmp.664 = load i8*, i8** %tmp.663
conform
	%tmp.665 = getelementptr %String, %String* @String.47, i32 0, i32 1
	%tmp.666 = load i8*, i8** %tmp.665
	%tmp.667 = call i32(i8*, i8*) @strcmp( i8* %tmp.664, i8* %tmp.666 )
	%tmp.668 = icmp eq i32 %tmp.667, 0
	br i1 %tmp.668, label %true.10, label %false.10

true.10:
assign
static dispatch
dispatch
Object
	%tmp.669 = load %Main*, %Main** %tmp.393
	%tmp.670 = getelementptr %Main, %Main* %tmp.669, i32 0, i32 2
	%tmp.671 = load %A*, %A** %tmp.670
	%tmp.672 = icmp eq %A* %tmp.671, null
	br i1 %tmp.672, label %abort, label %ok.70

ok.70:
	%tmp.673 = getelementptr %A, %A* %tmp.671, i32 0, i32 0
	%tmp.674 = load %A_vtable*, %A_vtable** %tmp.673
	%tmp.675 = getelementptr %A_vtable, %A_vtable* %tmp.674, i32 0, i32 7
	%tmp.676 = load i32 (%A*) *, i32 (%A*) ** %tmp.675
conform
	%tmp.677 = call i32(%A*) %tmp.676( %A* %tmp.671 )
newClass
	%tmp.678 = call %C* @C_new(  )
	%tmp.679 = icmp eq %C* %tmp.678, null
	br i1 %tmp.679, label %abort, label %ok.71

ok.71:
%C*
	%tmp.680 = getelementptr %A_vtable, %A_vtable* @A_vtable_prototype, i32 0, i32 13
	%tmp.681 = load %E* (%A*,i32) *, %E* (%A*,i32) ** %tmp.680
conform
	%tmp.682 = bitcast %C* %tmp.678 to %A*
	%tmp.683 = call %E*(%A*, i32) %tmp.681( %A* %tmp.682, i32 %tmp.677 )
%A*
	%tmp.684 = load %Main*, %Main** %tmp.393
	%tmp.685 = getelementptr %Main, %Main* %tmp.684, i32 0, i32 2
conform
	%tmp.686 = bitcast %E* %tmp.683 to %A*
	store %A* %tmp.686, %A** %tmp.685
conform
	store %E* %tmp.683, %E** %tmp.659
	br label %end.10

false.10:
cond
	%tmp.687 = alloca %E*
eq
Object
	%tmp.688 = load %Main*, %Main** %tmp.393
	%tmp.689 = getelementptr %Main, %Main* %tmp.688, i32 0, i32 1
	%tmp.690 = load %String*, %String** %tmp.689
string_const
conform
	%tmp.691 = getelementptr %String, %String* %tmp.690, i32 0, i32 1
	%tmp.692 = load i8*, i8** %tmp.691
conform
	%tmp.693 = getelementptr %String, %String* @String.48, i32 0, i32 1
	%tmp.694 = load i8*, i8** %tmp.693
	%tmp.695 = call i32(i8*, i8*) @strcmp( i8* %tmp.692, i8* %tmp.694 )
	%tmp.696 = icmp eq i32 %tmp.695, 0
	br i1 %tmp.696, label %true.11, label %false.11

true.11:
assign
static dispatch
dispatch
Object
	%tmp.697 = load %Main*, %Main** %tmp.393
	%tmp.698 = getelementptr %Main, %Main* %tmp.697, i32 0, i32 2
	%tmp.699 = load %A*, %A** %tmp.698
	%tmp.700 = icmp eq %A* %tmp.699, null
	br i1 %tmp.700, label %abort, label %ok.72

ok.72:
	%tmp.701 = getelementptr %A, %A* %tmp.699, i32 0, i32 0
	%tmp.702 = load %A_vtable*, %A_vtable** %tmp.701
	%tmp.703 = getelementptr %A_vtable, %A_vtable* %tmp.702, i32 0, i32 7
	%tmp.704 = load i32 (%A*) *, i32 (%A*) ** %tmp.703
conform
	%tmp.705 = call i32(%A*) %tmp.704( %A* %tmp.699 )
newClass
	%tmp.706 = call %C* @C_new(  )
	%tmp.707 = icmp eq %C* %tmp.706, null
	br i1 %tmp.707, label %abort, label %ok.73

ok.73:
%C*
	%tmp.708 = getelementptr %B_vtable, %B_vtable* @B_vtable_prototype, i32 0, i32 13
	%tmp.709 = load %E* (%B*,i32) *, %E* (%B*,i32) ** %tmp.708
conform
	%tmp.710 = bitcast %C* %tmp.706 to %B*
	%tmp.711 = call %E*(%B*, i32) %tmp.709( %B* %tmp.710, i32 %tmp.705 )
%B*
	%tmp.712 = load %Main*, %Main** %tmp.393
	%tmp.713 = getelementptr %Main, %Main* %tmp.712, i32 0, i32 2
conform
	%tmp.714 = bitcast %E* %tmp.711 to %A*
	store %A* %tmp.714, %A** %tmp.713
conform
	store %E* %tmp.711, %E** %tmp.687
	br label %end.11

false.11:
cond
	%tmp.715 = alloca %E*
eq
Object
	%tmp.716 = load %Main*, %Main** %tmp.393
	%tmp.717 = getelementptr %Main, %Main* %tmp.716, i32 0, i32 1
	%tmp.718 = load %String*, %String** %tmp.717
string_const
conform
	%tmp.719 = getelementptr %String, %String* %tmp.718, i32 0, i32 1
	%tmp.720 = load i8*, i8** %tmp.719
conform
	%tmp.721 = getelementptr %String, %String* @String.49, i32 0, i32 1
	%tmp.722 = load i8*, i8** %tmp.721
	%tmp.723 = call i32(i8*, i8*) @strcmp( i8* %tmp.720, i8* %tmp.722 )
	%tmp.724 = icmp eq i32 %tmp.723, 0
	br i1 %tmp.724, label %true.12, label %false.12

true.12:
assign
static dispatch
dispatch
Object
	%tmp.725 = load %Main*, %Main** %tmp.393
	%tmp.726 = getelementptr %Main, %Main* %tmp.725, i32 0, i32 2
	%tmp.727 = load %A*, %A** %tmp.726
	%tmp.728 = icmp eq %A* %tmp.727, null
	br i1 %tmp.728, label %abort, label %ok.74

ok.74:
	%tmp.729 = getelementptr %A, %A* %tmp.727, i32 0, i32 0
	%tmp.730 = load %A_vtable*, %A_vtable** %tmp.729
	%tmp.731 = getelementptr %A_vtable, %A_vtable* %tmp.730, i32 0, i32 7
	%tmp.732 = load i32 (%A*) *, i32 (%A*) ** %tmp.731
conform
	%tmp.733 = call i32(%A*) %tmp.732( %A* %tmp.727 )
newClass
	%tmp.734 = call %C* @C_new(  )
	%tmp.735 = icmp eq %C* %tmp.734, null
	br i1 %tmp.735, label %abort, label %ok.75

ok.75:
%C*
	%tmp.736 = getelementptr %C_vtable, %C_vtable* @C_vtable_prototype, i32 0, i32 13
	%tmp.737 = load %E* (%C*,i32) *, %E* (%C*,i32) ** %tmp.736
	%tmp.738 = call %E*(%C*, i32) %tmp.737( %C* %tmp.734, i32 %tmp.733 )
%C*
	%tmp.739 = load %Main*, %Main** %tmp.393
	%tmp.740 = getelementptr %Main, %Main* %tmp.739, i32 0, i32 2
conform
	%tmp.741 = bitcast %E* %tmp.738 to %A*
	store %A* %tmp.741, %A** %tmp.740
conform
	store %E* %tmp.738, %E** %tmp.715
	br label %end.12

false.12:
cond
	%tmp.742 = alloca %Main*
eq
Object
	%tmp.743 = load %Main*, %Main** %tmp.393
	%tmp.744 = getelementptr %Main, %Main* %tmp.743, i32 0, i32 1
	%tmp.745 = load %String*, %String** %tmp.744
string_const
conform
	%tmp.746 = getelementptr %String, %String* %tmp.745, i32 0, i32 1
	%tmp.747 = load i8*, i8** %tmp.746
conform
	%tmp.748 = getelementptr %String, %String* @String.50, i32 0, i32 1
	%tmp.749 = load i8*, i8** %tmp.748
	%tmp.750 = call i32(i8*, i8*) @strcmp( i8* %tmp.747, i8* %tmp.749 )
	%tmp.751 = icmp eq i32 %tmp.750, 0
	br i1 %tmp.751, label %true.13, label %false.13

true.13:
cond
	%tmp.752 = alloca %Main*
dispatch
dispatch
Object
	%tmp.753 = load %Main*, %Main** %tmp.393
	%tmp.754 = getelementptr %Main, %Main* %tmp.753, i32 0, i32 2
	%tmp.755 = load %A*, %A** %tmp.754
	%tmp.756 = icmp eq %A* %tmp.755, null
	br i1 %tmp.756, label %abort, label %ok.76

ok.76:
	%tmp.757 = getelementptr %A, %A* %tmp.755, i32 0, i32 0
	%tmp.758 = load %A_vtable*, %A_vtable** %tmp.757
	%tmp.759 = getelementptr %A_vtable, %A_vtable* %tmp.758, i32 0, i32 7
	%tmp.760 = load i32 (%A*) *, i32 (%A*) ** %tmp.759
conform
	%tmp.761 = call i32(%A*) %tmp.760( %A* %tmp.755 )
newClass
	%tmp.762 = call %D* @D_new(  )
	%tmp.763 = icmp eq %D* %tmp.762, null
	br i1 %tmp.763, label %abort, label %ok.77

ok.77:
	%tmp.764 = getelementptr %D, %D* %tmp.762, i32 0, i32 0
	%tmp.765 = load %D_vtable*, %D_vtable** %tmp.764
	%tmp.766 = getelementptr %D_vtable, %D_vtable* %tmp.765, i32 0, i32 14
	%tmp.767 = load i1 (%D*,i32) *, i1 (%D*,i32) ** %tmp.766
conform
conform
	%tmp.768 = call i1(%D*, i32) %tmp.767( %D* %tmp.762, i32 %tmp.761 )
	br i1 %tmp.768, label %true.14, label %false.14

true.14:
block
dispatch
string_const
Object
	%tmp.769 = load %Main*, %Main** %tmp.393
	%tmp.770 = icmp eq %Main* %tmp.769, null
	br i1 %tmp.770, label %abort, label %ok.78

ok.78:
	%tmp.771 = getelementptr %Main, %Main* %tmp.769, i32 0, i32 0
	%tmp.772 = load %Main_vtable*, %Main_vtable** %tmp.771
	%tmp.773 = getelementptr %Main_vtable, %Main_vtable* %tmp.772, i32 0, i32 7
	%tmp.774 = load %Main* (%Main*,%String*) *, %Main* (%Main*,%String*) ** %tmp.773
conform
conform
	%tmp.775 = call %Main*(%Main*, %String*) %tmp.774( %Main* %tmp.769, %String* @String.41 )
dispatch
Object
	%tmp.776 = load %Main*, %Main** %tmp.393
	%tmp.777 = getelementptr %Main, %Main* %tmp.776, i32 0, i32 2
	%tmp.778 = load %A*, %A** %tmp.777
Object
	%tmp.779 = load %Main*, %Main** %tmp.393
	%tmp.780 = icmp eq %Main* %tmp.779, null
	br i1 %tmp.780, label %abort, label %ok.79

ok.79:
	%tmp.781 = getelementptr %Main, %Main* %tmp.779, i32 0, i32 0
	%tmp.782 = load %Main_vtable*, %Main_vtable** %tmp.781
	%tmp.783 = getelementptr %Main_vtable, %Main_vtable* %tmp.782, i32 0, i32 16
	%tmp.784 = load %Main* (%Main*,%A*) *, %Main* (%Main*,%A*) ** %tmp.783
conform
conform
	%tmp.785 = call %Main*(%Main*, %A*) %tmp.784( %Main* %tmp.779, %A* %tmp.778 )
dispatch
string_const
Object
	%tmp.786 = load %Main*, %Main** %tmp.393
	%tmp.787 = icmp eq %Main* %tmp.786, null
	br i1 %tmp.787, label %abort, label %ok.80

ok.80:
	%tmp.788 = getelementptr %Main, %Main* %tmp.786, i32 0, i32 0
	%tmp.789 = load %Main_vtable*, %Main_vtable** %tmp.788
	%tmp.790 = getelementptr %Main_vtable, %Main_vtable* %tmp.789, i32 0, i32 7
	%tmp.791 = load %Main* (%Main*,%String*) *, %Main* (%Main*,%String*) ** %tmp.790
conform
conform
	%tmp.792 = call %Main*(%Main*, %String*) %tmp.791( %Main* %tmp.786, %String* @String.51 )
conform
	store %Main* %tmp.792, %Main** %tmp.752
	br label %end.14

false.14:
block
dispatch
string_const
Object
	%tmp.793 = load %Main*, %Main** %tmp.393
	%tmp.794 = icmp eq %Main* %tmp.793, null
	br i1 %tmp.794, label %abort, label %ok.81

ok.81:
	%tmp.795 = getelementptr %Main, %Main* %tmp.793, i32 0, i32 0
	%tmp.796 = load %Main_vtable*, %Main_vtable** %tmp.795
	%tmp.797 = getelementptr %Main_vtable, %Main_vtable* %tmp.796, i32 0, i32 7
	%tmp.798 = load %Main* (%Main*,%String*) *, %Main* (%Main*,%String*) ** %tmp.797
conform
conform
	%tmp.799 = call %Main*(%Main*, %String*) %tmp.798( %Main* %tmp.793, %String* @String.41 )
dispatch
Object
	%tmp.800 = load %Main*, %Main** %tmp.393
	%tmp.801 = getelementptr %Main, %Main* %tmp.800, i32 0, i32 2
	%tmp.802 = load %A*, %A** %tmp.801
Object
	%tmp.803 = load %Main*, %Main** %tmp.393
	%tmp.804 = icmp eq %Main* %tmp.803, null
	br i1 %tmp.804, label %abort, label %ok.82

ok.82:
	%tmp.805 = getelementptr %Main, %Main* %tmp.803, i32 0, i32 0
	%tmp.806 = load %Main_vtable*, %Main_vtable** %tmp.805
	%tmp.807 = getelementptr %Main_vtable, %Main_vtable* %tmp.806, i32 0, i32 16
	%tmp.808 = load %Main* (%Main*,%A*) *, %Main* (%Main*,%A*) ** %tmp.807
conform
conform
	%tmp.809 = call %Main*(%Main*, %A*) %tmp.808( %Main* %tmp.803, %A* %tmp.802 )
dispatch
string_const
Object
	%tmp.810 = load %Main*, %Main** %tmp.393
	%tmp.811 = icmp eq %Main* %tmp.810, null
	br i1 %tmp.811, label %abort, label %ok.83

ok.83:
	%tmp.812 = getelementptr %Main, %Main* %tmp.810, i32 0, i32 0
	%tmp.813 = load %Main_vtable*, %Main_vtable** %tmp.812
	%tmp.814 = getelementptr %Main_vtable, %Main_vtable* %tmp.813, i32 0, i32 7
	%tmp.815 = load %Main* (%Main*,%String*) *, %Main* (%Main*,%String*) ** %tmp.814
conform
conform
	%tmp.816 = call %Main*(%Main*, %String*) %tmp.815( %Main* %tmp.810, %String* @String.52 )
conform
	store %Main* %tmp.816, %Main** %tmp.752
	br label %end.14

end.14:
	%tmp.817 = load %Main*, %Main** %tmp.752
conform
	store %Main* %tmp.817, %Main** %tmp.742
	br label %end.13

false.13:
cond
	%tmp.818 = alloca %A*
eq
Object
	%tmp.819 = load %Main*, %Main** %tmp.393
	%tmp.820 = getelementptr %Main, %Main* %tmp.819, i32 0, i32 1
	%tmp.821 = load %String*, %String** %tmp.820
string_const
conform
	%tmp.822 = getelementptr %String, %String* %tmp.821, i32 0, i32 1
	%tmp.823 = load i8*, i8** %tmp.822
conform
	%tmp.824 = getelementptr %String, %String* @String.53, i32 0, i32 1
	%tmp.825 = load i8*, i8** %tmp.824
	%tmp.826 = call i32(i8*, i8*) @strcmp( i8* %tmp.823, i8* %tmp.825 )
	%tmp.827 = icmp eq i32 %tmp.826, 0
	br i1 %tmp.827, label %true.15, label %false.15

true.15:
let
No_expr
	%tmp.828 = alloca %A*
conform
	store %A* null, %A** %tmp.828
block
assign
dispatch
dispatch
Object
	%tmp.829 = load %Main*, %Main** %tmp.393
	%tmp.830 = getelementptr %Main, %Main* %tmp.829, i32 0, i32 2
	%tmp.831 = load %A*, %A** %tmp.830
	%tmp.832 = icmp eq %A* %tmp.831, null
	br i1 %tmp.832, label %abort, label %ok.84

ok.84:
	%tmp.833 = getelementptr %A, %A* %tmp.831, i32 0, i32 0
	%tmp.834 = load %A_vtable*, %A_vtable** %tmp.833
	%tmp.835 = getelementptr %A_vtable, %A_vtable* %tmp.834, i32 0, i32 7
	%tmp.836 = load i32 (%A*) *, i32 (%A*) ** %tmp.835
conform
	%tmp.837 = call i32(%A*) %tmp.836( %A* %tmp.831 )
newClass
	%tmp.838 = call %E* @E_new(  )
	%tmp.839 = icmp eq %E* %tmp.838, null
	br i1 %tmp.839, label %abort, label %ok.85

ok.85:
	%tmp.840 = getelementptr %E, %E* %tmp.838, i32 0, i32 0
	%tmp.841 = load %E_vtable*, %E_vtable** %tmp.840
	%tmp.842 = getelementptr %E_vtable, %E_vtable* %tmp.841, i32 0, i32 15
	%tmp.843 = load %A* (%E*,i32) *, %A* (%E*,i32) ** %tmp.842
conform
conform
	%tmp.844 = call %A*(%E*, i32) %tmp.843( %E* %tmp.838, i32 %tmp.837 )
conform
	store %A* %tmp.844, %A** %tmp.828
let
sub
dispatch
Object
	%tmp.845 = load %Main*, %Main** %tmp.393
	%tmp.846 = getelementptr %Main, %Main* %tmp.845, i32 0, i32 2
	%tmp.847 = load %A*, %A** %tmp.846
	%tmp.848 = icmp eq %A* %tmp.847, null
	br i1 %tmp.848, label %abort, label %ok.86

ok.86:
	%tmp.849 = getelementptr %A, %A* %tmp.847, i32 0, i32 0
	%tmp.850 = load %A_vtable*, %A_vtable** %tmp.849
	%tmp.851 = getelementptr %A_vtable, %A_vtable* %tmp.850, i32 0, i32 7
	%tmp.852 = load i32 (%A*) *, i32 (%A*) ** %tmp.851
conform
	%tmp.853 = call i32(%A*) %tmp.852( %A* %tmp.847 )
mul
dispatch
Object
	%tmp.854 = load %A*, %A** %tmp.828
	%tmp.855 = icmp eq %A* %tmp.854, null
	br i1 %tmp.855, label %abort, label %ok.87

ok.87:
	%tmp.856 = getelementptr %A, %A* %tmp.854, i32 0, i32 0
	%tmp.857 = load %A_vtable*, %A_vtable** %tmp.856
	%tmp.858 = getelementptr %A_vtable, %A_vtable* %tmp.857, i32 0, i32 7
	%tmp.859 = load i32 (%A*) *, i32 (%A*) ** %tmp.858
conform
	%tmp.860 = call i32(%A*) %tmp.859( %A* %tmp.854 )
Integer Constant
conform
conform
	%tmp.861 = mul i32 %tmp.860, 8
conform
conform
	%tmp.862 = sub i32 %tmp.853, %tmp.861
	%tmp.863 = alloca i32
conform
	store i32 %tmp.862, i32* %tmp.863
block
dispatch
string_const
Object
	%tmp.864 = load %Main*, %Main** %tmp.393
	%tmp.865 = icmp eq %Main* %tmp.864, null
	br i1 %tmp.865, label %abort, label %ok.88

ok.88:
	%tmp.866 = getelementptr %Main, %Main* %tmp.864, i32 0, i32 0
	%tmp.867 = load %Main_vtable*, %Main_vtable** %tmp.866
	%tmp.868 = getelementptr %Main_vtable, %Main_vtable* %tmp.867, i32 0, i32 7
	%tmp.869 = load %Main* (%Main*,%String*) *, %Main* (%Main*,%String*) ** %tmp.868
conform
conform
	%tmp.870 = call %Main*(%Main*, %String*) %tmp.869( %Main* %tmp.864, %String* @String.41 )
dispatch
Object
	%tmp.871 = load %Main*, %Main** %tmp.393
	%tmp.872 = getelementptr %Main, %Main* %tmp.871, i32 0, i32 2
	%tmp.873 = load %A*, %A** %tmp.872
Object
	%tmp.874 = load %Main*, %Main** %tmp.393
	%tmp.875 = icmp eq %Main* %tmp.874, null
	br i1 %tmp.875, label %abort, label %ok.89

ok.89:
	%tmp.876 = getelementptr %Main, %Main* %tmp.874, i32 0, i32 0
	%tmp.877 = load %Main_vtable*, %Main_vtable** %tmp.876
	%tmp.878 = getelementptr %Main_vtable, %Main_vtable* %tmp.877, i32 0, i32 16
	%tmp.879 = load %Main* (%Main*,%A*) *, %Main* (%Main*,%A*) ** %tmp.878
conform
conform
	%tmp.880 = call %Main*(%Main*, %A*) %tmp.879( %Main* %tmp.874, %A* %tmp.873 )
dispatch
string_const
Object
	%tmp.881 = load %Main*, %Main** %tmp.393
	%tmp.882 = icmp eq %Main* %tmp.881, null
	br i1 %tmp.882, label %abort, label %ok.90

ok.90:
	%tmp.883 = getelementptr %Main, %Main* %tmp.881, i32 0, i32 0
	%tmp.884 = load %Main_vtable*, %Main_vtable** %tmp.883
	%tmp.885 = getelementptr %Main_vtable, %Main_vtable* %tmp.884, i32 0, i32 7
	%tmp.886 = load %Main* (%Main*,%String*) *, %Main* (%Main*,%String*) ** %tmp.885
conform
conform
	%tmp.887 = call %Main*(%Main*, %String*) %tmp.886( %Main* %tmp.881, %String* @String.54 )
dispatch
Object
	%tmp.888 = load %A*, %A** %tmp.828
Object
	%tmp.889 = load %Main*, %Main** %tmp.393
	%tmp.890 = icmp eq %Main* %tmp.889, null
	br i1 %tmp.890, label %abort, label %ok.91

ok.91:
	%tmp.891 = getelementptr %Main, %Main* %tmp.889, i32 0, i32 0
	%tmp.892 = load %Main_vtable*, %Main_vtable** %tmp.891
	%tmp.893 = getelementptr %Main_vtable, %Main_vtable* %tmp.892, i32 0, i32 16
	%tmp.894 = load %Main* (%Main*,%A*) *, %Main* (%Main*,%A*) ** %tmp.893
conform
conform
	%tmp.895 = call %Main*(%Main*, %A*) %tmp.894( %Main* %tmp.889, %A* %tmp.888 )
dispatch
string_const
Object
	%tmp.896 = load %Main*, %Main** %tmp.393
	%tmp.897 = icmp eq %Main* %tmp.896, null
	br i1 %tmp.897, label %abort, label %ok.92

ok.92:
	%tmp.898 = getelementptr %Main, %Main* %tmp.896, i32 0, i32 0
	%tmp.899 = load %Main_vtable*, %Main_vtable** %tmp.898
	%tmp.900 = getelementptr %Main_vtable, %Main_vtable* %tmp.899, i32 0, i32 7
	%tmp.901 = load %Main* (%Main*,%String*) *, %Main* (%Main*,%String*) ** %tmp.900
conform
conform
	%tmp.902 = call %Main*(%Main*, %String*) %tmp.901( %Main* %tmp.896, %String* @String.55 )
let
newClass
	%tmp.903 = call %A2I* @A2I_new(  )
	%tmp.904 = alloca %A2I*
conform
	store %A2I* %tmp.903, %A2I** %tmp.904
block
dispatch
dispatch
Object
	%tmp.905 = load i32, i32* %tmp.863
Object
	%tmp.906 = load %A2I*, %A2I** %tmp.904
	%tmp.907 = icmp eq %A2I* %tmp.906, null
	br i1 %tmp.907, label %abort, label %ok.93

ok.93:
	%tmp.908 = getelementptr %A2I, %A2I* %tmp.906, i32 0, i32 0
	%tmp.909 = load %A2I_vtable*, %A2I_vtable** %tmp.908
	%tmp.910 = getelementptr %A2I_vtable, %A2I_vtable* %tmp.909, i32 0, i32 11
	%tmp.911 = load %String* (%A2I*,i32) *, %String* (%A2I*,i32) ** %tmp.910
conform
conform
	%tmp.912 = call %String*(%A2I*, i32) %tmp.911( %A2I* %tmp.906, i32 %tmp.905 )
Object
	%tmp.913 = load %Main*, %Main** %tmp.393
	%tmp.914 = icmp eq %Main* %tmp.913, null
	br i1 %tmp.914, label %abort, label %ok.94

ok.94:
	%tmp.915 = getelementptr %Main, %Main* %tmp.913, i32 0, i32 0
	%tmp.916 = load %Main_vtable*, %Main_vtable** %tmp.915
	%tmp.917 = getelementptr %Main_vtable, %Main_vtable* %tmp.916, i32 0, i32 7
	%tmp.918 = load %Main* (%Main*,%String*) *, %Main* (%Main*,%String*) ** %tmp.917
conform
conform
	%tmp.919 = call %Main*(%Main*, %String*) %tmp.918( %Main* %tmp.913, %String* %tmp.912 )
dispatch
string_const
Object
	%tmp.920 = load %Main*, %Main** %tmp.393
	%tmp.921 = icmp eq %Main* %tmp.920, null
	br i1 %tmp.921, label %abort, label %ok.95

ok.95:
	%tmp.922 = getelementptr %Main, %Main* %tmp.920, i32 0, i32 0
	%tmp.923 = load %Main_vtable*, %Main_vtable** %tmp.922
	%tmp.924 = getelementptr %Main_vtable, %Main_vtable* %tmp.923, i32 0, i32 7
	%tmp.925 = load %Main* (%Main*,%String*) *, %Main* (%Main*,%String*) ** %tmp.924
conform
conform
	%tmp.926 = call %Main*(%Main*, %String*) %tmp.925( %Main* %tmp.920, %String* @String.32 )
assign
Object
	%tmp.927 = load %A*, %A** %tmp.828
	%tmp.928 = load %Main*, %Main** %tmp.393
	%tmp.929 = getelementptr %Main, %Main* %tmp.928, i32 0, i32 2
conform
	store %A* %tmp.927, %A** %tmp.929
conform
	store %A* %tmp.927, %A** %tmp.818
	br label %end.15

false.15:
cond
	%tmp.930 = alloca %A*
eq
Object
	%tmp.931 = load %Main*, %Main** %tmp.393
	%tmp.932 = getelementptr %Main, %Main* %tmp.931, i32 0, i32 1
	%tmp.933 = load %String*, %String** %tmp.932
string_const
conform
	%tmp.934 = getelementptr %String, %String* %tmp.933, i32 0, i32 1
	%tmp.935 = load i8*, i8** %tmp.934
conform
	%tmp.936 = getelementptr %String, %String* @String.56, i32 0, i32 1
	%tmp.937 = load i8*, i8** %tmp.936
	%tmp.938 = call i32(i8*, i8*) @strcmp( i8* %tmp.935, i8* %tmp.937 )
	%tmp.939 = icmp eq i32 %tmp.938, 0
	br i1 %tmp.939, label %true.16, label %false.16

true.16:
assign
newClass
	%tmp.940 = call %A* @A_new(  )
	%tmp.941 = load %Main*, %Main** %tmp.393
	%tmp.942 = getelementptr %Main, %Main* %tmp.941, i32 0, i32 2
conform
	store %A* %tmp.940, %A** %tmp.942
conform
	store %A* %tmp.940, %A** %tmp.930
	br label %end.16

false.16:
cond
	%tmp.943 = alloca i1
eq
Object
	%tmp.944 = load %Main*, %Main** %tmp.393
	%tmp.945 = getelementptr %Main, %Main* %tmp.944, i32 0, i32 1
	%tmp.946 = load %String*, %String** %tmp.945
string_const
conform
	%tmp.947 = getelementptr %String, %String* %tmp.946, i32 0, i32 1
	%tmp.948 = load i8*, i8** %tmp.947
conform
	%tmp.949 = getelementptr %String, %String* @String.57, i32 0, i32 1
	%tmp.950 = load i8*, i8** %tmp.949
	%tmp.951 = call i32(i8*, i8*) @strcmp( i8* %tmp.948, i8* %tmp.950 )
	%tmp.952 = icmp eq i32 %tmp.951, 0
	br i1 %tmp.952, label %true.17, label %false.17

true.17:
assign
Boolean Constant
	%tmp.953 = load %Main*, %Main** %tmp.393
	%tmp.954 = getelementptr %Main, %Main* %tmp.953, i32 0, i32 4
conform
	store i1 false, i1* %tmp.954
conform
	store i1 false, i1* %tmp.943
	br label %end.17

false.17:
assign
dispatch
dispatch
Object
	%tmp.955 = load %Main*, %Main** %tmp.393
	%tmp.956 = getelementptr %Main, %Main* %tmp.955, i32 0, i32 2
	%tmp.957 = load %A*, %A** %tmp.956
	%tmp.958 = icmp eq %A* %tmp.957, null
	br i1 %tmp.958, label %abort, label %ok.96

ok.96:
	%tmp.959 = getelementptr %A, %A* %tmp.957, i32 0, i32 0
	%tmp.960 = load %A_vtable*, %A_vtable** %tmp.959
	%tmp.961 = getelementptr %A_vtable, %A_vtable* %tmp.960, i32 0, i32 7
	%tmp.962 = load i32 (%A*) *, i32 (%A*) ** %tmp.961
conform
	%tmp.963 = call i32(%A*) %tmp.962( %A* %tmp.957 )
newClass
	%tmp.964 = call %A* @A_new(  )
	%tmp.965 = icmp eq %A* %tmp.964, null
	br i1 %tmp.965, label %abort, label %ok.97

ok.97:
	%tmp.966 = getelementptr %A, %A* %tmp.964, i32 0, i32 0
	%tmp.967 = load %A_vtable*, %A_vtable** %tmp.966
	%tmp.968 = getelementptr %A_vtable, %A_vtable* %tmp.967, i32 0, i32 9
	%tmp.969 = load %A* (%A*,i32) *, %A* (%A*,i32) ** %tmp.968
conform
conform
	%tmp.970 = call %A*(%A*, i32) %tmp.969( %A* %tmp.964, i32 %tmp.963 )
	%tmp.971 = load %Main*, %Main** %tmp.393
	%tmp.972 = getelementptr %Main, %Main* %tmp.971, i32 0, i32 2
conform
	store %A* %tmp.970, %A** %tmp.972
conform
	%tmp.973 = getelementptr %A, %A* %tmp.970, i32 0, i32 1
	%tmp.974 = load i1, i1* %tmp.973
	store i1 %tmp.974, i1* %tmp.943
	br label %end.17

end.17:
	%tmp.975 = load i1, i1* %tmp.943
conform
	%tmp.976 = call %Bool* @Bool_new(  )
	call void(%Bool*, i1) @Bool_init( %Bool* %tmp.976, i1 %tmp.975 )
	%tmp.977 = bitcast %Bool* %tmp.976 to %A*
	store %A* %tmp.977, %A** %tmp.930
	br label %end.16

end.16:
	%tmp.978 = load %A*, %A** %tmp.930
conform
	store %A* %tmp.978, %A** %tmp.818
	br label %end.15

end.15:
	%tmp.979 = load %A*, %A** %tmp.818
conform
	%tmp.980 = bitcast %A* %tmp.979 to %Main*
	store %Main* %tmp.980, %Main** %tmp.742
	br label %end.13

end.13:
	%tmp.981 = load %Main*, %Main** %tmp.742
conform
	%tmp.982 = bitcast %Main* %tmp.981 to %E*
	store %E* %tmp.982, %E** %tmp.715
	br label %end.12

end.12:
	%tmp.983 = load %E*, %E** %tmp.715
conform
	store %E* %tmp.983, %E** %tmp.687
	br label %end.11

end.11:
	%tmp.984 = load %E*, %E** %tmp.687
conform
	store %E* %tmp.984, %E** %tmp.659
	br label %end.10

end.10:
	%tmp.985 = load %E*, %E** %tmp.659
conform
	%tmp.986 = bitcast %E* %tmp.985 to %D*
	store %D* %tmp.986, %D** %tmp.605
	br label %end.9

end.9:
	%tmp.987 = load %D*, %D** %tmp.605
conform
	%tmp.988 = bitcast %D* %tmp.987 to %Object*
	store %Object* %tmp.988, %Object** %tmp.522
	br label %end.7

end.7:
	%tmp.989 = load %Object*, %Object** %tmp.522
conform
	%tmp.990 = bitcast %Object* %tmp.989 to %B*
	store %B* %tmp.990, %B** %tmp.468
	br label %end.6

end.6:
	%tmp.991 = load %B*, %B** %tmp.468
	br label %loop.4

false.4:
conform
	%tmp.992 = call %Int* @Int_new(  )
	call void(%Int*, i32) @Int_init( %Int* %tmp.992, i32 0 )
	%tmp.993 = bitcast %Int* %tmp.992 to %Object*
	ret %Object* %tmp.993

abort:
	call void @abort(  )
	unreachable
}

define %Main* @Main_new() {

entry:
	%tmp.994 = getelementptr %Main_vtable, %Main_vtable* @Main_vtable_prototype, i32 0, i32 1
	%tmp.995 = load i32, i32* %tmp.994
	%tmp.996 = call i8*(i32) @malloc( i32 %tmp.995 )
	%tmp.997 = bitcast i8* %tmp.996 to %Main*
	%tmp.998 = getelementptr %Main, %Main* %tmp.997, i32 0, i32 0
	store %Main_vtable* @Main_vtable_prototype, %Main_vtable** %tmp.998
	%tmp.999 = alloca %Main*
	store %Main* %tmp.997, %Main** %tmp.999
method
method
method
method
method
method
method
attribute
	%tmp.1000 = getelementptr %Main, %Main* %tmp.997, i32 0, i32 1
No_expr
conform
	%tmp.1001 = call %String* @String_new(  )
	store %String* %tmp.1001, %String** %tmp.1000
attribute
	%tmp.1002 = getelementptr %Main, %Main* %tmp.997, i32 0, i32 2
No_expr
conform
	store %A* null, %A** %tmp.1002
attribute
	%tmp.1003 = getelementptr %Main, %Main* %tmp.997, i32 0, i32 3
No_expr
conform
	store %A* null, %A** %tmp.1003
attribute
	%tmp.1004 = getelementptr %Main, %Main* %tmp.997, i32 0, i32 4
Boolean Constant
conform
	store i1 true, i1* %tmp.1004
method
method
method
method
method
method
method
	ret %Main* %tmp.997

abort:
	call void @abort(  )
	unreachable
}

method
define i32 @A_value(%A* %self) {

entry:
	%tmp.1005 = alloca %A*
conform
	store %A* %self, %A** %tmp.1005
Object
	%tmp.1006 = load %A*, %A** %tmp.1005
	%tmp.1007 = getelementptr %A, %A* %tmp.1006, i32 0, i32 1
	%tmp.1008 = load i32, i32* %tmp.1007
	ret i32 %tmp.1008

abort:
	call void @abort(  )
	unreachable
}

method
define %A* @A_set_var(%A* %self, i32 %num) {

entry:
	%tmp.1009 = alloca %A*
conform
	store %A* %self, %A** %tmp.1009
	%tmp.1010 = alloca i32
conform
	store i32 %num, i32* %tmp.1010
block
assign
Object
	%tmp.1011 = load i32, i32* %tmp.1010
	%tmp.1012 = load %A*, %A** %tmp.1009
	%tmp.1013 = getelementptr %A, %A* %tmp.1012, i32 0, i32 1
conform
	store i32 %tmp.1011, i32* %tmp.1013
Object
	%tmp.1014 = load %A*, %A** %tmp.1009
	ret %A* %tmp.1014

abort:
	call void @abort(  )
	unreachable
}

method
define %A* @A_method1(%A* %self, i32 %num) {

entry:
	%tmp.1015 = alloca %A*
conform
	store %A* %self, %A** %tmp.1015
	%tmp.1016 = alloca i32
conform
	store i32 %num, i32* %tmp.1016
Object
	%tmp.1017 = load %A*, %A** %tmp.1015
	ret %A* %tmp.1017

abort:
	call void @abort(  )
	unreachable
}

method
define %B* @A_method2(%A* %self, i32 %num1, i32 %num2) {

entry:
	%tmp.1018 = alloca %A*
conform
	store %A* %self, %A** %tmp.1018
	%tmp.1019 = alloca i32
conform
	store i32 %num1, i32* %tmp.1019
	%tmp.1020 = alloca i32
conform
	store i32 %num2, i32* %tmp.1020
let
No_expr
	%tmp.1021 = alloca i32
conform
	store i32 0, i32* %tmp.1021
block
assign
plus
Object
	%tmp.1022 = load i32, i32* %tmp.1019
Object
	%tmp.1023 = load i32, i32* %tmp.1020
conform
conform
	%tmp.1024 = add i32 %tmp.1022, %tmp.1023
conform
	store i32 %tmp.1024, i32* %tmp.1021
dispatch
Object
	%tmp.1025 = load i32, i32* %tmp.1021
newClass
	%tmp.1026 = call %B* @B_new(  )
	%tmp.1027 = icmp eq %B* %tmp.1026, null
	br i1 %tmp.1027, label %abort, label %ok.0

ok.0:
	%tmp.1028 = getelementptr %B, %B* %tmp.1026, i32 0, i32 0
	%tmp.1029 = load %B_vtable*, %B_vtable** %tmp.1028
	%tmp.1030 = getelementptr %B_vtable, %B_vtable* %tmp.1029, i32 0, i32 8
	%tmp.1031 = load %B* (%B*,i32) *, %B* (%B*,i32) ** %tmp.1030
conform
conform
	%tmp.1032 = call %B*(%B*, i32) %tmp.1031( %B* %tmp.1026, i32 %tmp.1025 )
	ret %B* %tmp.1032

abort:
	call void @abort(  )
	unreachable
}

method
define %C* @A_method3(%A* %self, i32 %num) {

entry:
	%tmp.1033 = alloca %A*
conform
	store %A* %self, %A** %tmp.1033
	%tmp.1034 = alloca i32
conform
	store i32 %num, i32* %tmp.1034
let
No_expr
	%tmp.1035 = alloca i32
conform
	store i32 0, i32* %tmp.1035
block
assign
neg
Object
	%tmp.1036 = load i32, i32* %tmp.1034
conform
	%tmp.1037 = sub i32 0, %tmp.1036
conform
	store i32 %tmp.1037, i32* %tmp.1035
dispatch
Object
	%tmp.1038 = load i32, i32* %tmp.1035
newClass
	%tmp.1039 = call %C* @C_new(  )
	%tmp.1040 = icmp eq %C* %tmp.1039, null
	br i1 %tmp.1040, label %abort, label %ok.1

ok.1:
	%tmp.1041 = getelementptr %C, %C* %tmp.1039, i32 0, i32 0
	%tmp.1042 = load %C_vtable*, %C_vtable** %tmp.1041
	%tmp.1043 = getelementptr %C_vtable, %C_vtable* %tmp.1042, i32 0, i32 8
	%tmp.1044 = load %C* (%C*,i32) *, %C* (%C*,i32) ** %tmp.1043
conform
conform
	%tmp.1045 = call %C*(%C*, i32) %tmp.1044( %C* %tmp.1039, i32 %tmp.1038 )
	ret %C* %tmp.1045

abort:
	call void @abort(  )
	unreachable
}

method
define %D* @A_method4(%A* %self, i32 %num1, i32 %num2) {

entry:
	%tmp.1046 = alloca %A*
conform
	store %A* %self, %A** %tmp.1046
	%tmp.1047 = alloca i32
conform
	store i32 %num1, i32* %tmp.1047
	%tmp.1048 = alloca i32
conform
	store i32 %num2, i32* %tmp.1048
cond
	%tmp.1049 = alloca %D*
lt
Object
	%tmp.1050 = load i32, i32* %tmp.1048
Object
	%tmp.1051 = load i32, i32* %tmp.1047
conform
conform
	%tmp.1052 = icmp slt i32 %tmp.1050, %tmp.1051
	br i1 %tmp.1052, label %true.0, label %false.0

true.0:
let
No_expr
	%tmp.1053 = alloca i32
conform
	store i32 0, i32* %tmp.1053
block
assign
sub
Object
	%tmp.1054 = load i32, i32* %tmp.1047
Object
	%tmp.1055 = load i32, i32* %tmp.1048
conform
conform
	%tmp.1056 = sub i32 %tmp.1054, %tmp.1055
conform
	store i32 %tmp.1056, i32* %tmp.1053
dispatch
Object
	%tmp.1057 = load i32, i32* %tmp.1053
newClass
	%tmp.1058 = call %D* @D_new(  )
	%tmp.1059 = icmp eq %D* %tmp.1058, null
	br i1 %tmp.1059, label %abort, label %ok.2

ok.2:
	%tmp.1060 = getelementptr %D, %D* %tmp.1058, i32 0, i32 0
	%tmp.1061 = load %D_vtable*, %D_vtable** %tmp.1060
	%tmp.1062 = getelementptr %D_vtable, %D_vtable* %tmp.1061, i32 0, i32 8
	%tmp.1063 = load %D* (%D*,i32) *, %D* (%D*,i32) ** %tmp.1062
conform
conform
	%tmp.1064 = call %D*(%D*, i32) %tmp.1063( %D* %tmp.1058, i32 %tmp.1057 )
conform
	store %D* %tmp.1064, %D** %tmp.1049
	br label %end.0

false.0:
let
No_expr
	%tmp.1065 = alloca i32
conform
	store i32 0, i32* %tmp.1065
block
assign
sub
Object
	%tmp.1066 = load i32, i32* %tmp.1048
Object
	%tmp.1067 = load i32, i32* %tmp.1047
conform
conform
	%tmp.1068 = sub i32 %tmp.1066, %tmp.1067
conform
	store i32 %tmp.1068, i32* %tmp.1065
dispatch
Object
	%tmp.1069 = load i32, i32* %tmp.1065
newClass
	%tmp.1070 = call %D* @D_new(  )
	%tmp.1071 = icmp eq %D* %tmp.1070, null
	br i1 %tmp.1071, label %abort, label %ok.3

ok.3:
	%tmp.1072 = getelementptr %D, %D* %tmp.1070, i32 0, i32 0
	%tmp.1073 = load %D_vtable*, %D_vtable** %tmp.1072
	%tmp.1074 = getelementptr %D_vtable, %D_vtable* %tmp.1073, i32 0, i32 8
	%tmp.1075 = load %D* (%D*,i32) *, %D* (%D*,i32) ** %tmp.1074
conform
conform
	%tmp.1076 = call %D*(%D*, i32) %tmp.1075( %D* %tmp.1070, i32 %tmp.1069 )
conform
	store %D* %tmp.1076, %D** %tmp.1049
	br label %end.0

end.0:
	%tmp.1077 = load %D*, %D** %tmp.1049
	ret %D* %tmp.1077

abort:
	call void @abort(  )
	unreachable
}

method
define %E* @A_method5(%A* %self, i32 %num) {

entry:
	%tmp.1078 = alloca %A*
conform
	store %A* %self, %A** %tmp.1078
	%tmp.1079 = alloca i32
conform
	store i32 %num, i32* %tmp.1079
let
Integer Constant
	%tmp.1080 = alloca i32
conform
	store i32 1, i32* %tmp.1080
block
let
Integer Constant
	%tmp.1081 = alloca i32
conform
	store i32 1, i32* %tmp.1081
loop
	br label %loop.1

loop.1:
leq
Object
	%tmp.1082 = load i32, i32* %tmp.1081
Object
	%tmp.1083 = load i32, i32* %tmp.1079
conform
conform
	%tmp.1084 = icmp sle i32 %tmp.1082, %tmp.1083
	br i1 %tmp.1084, label %true.1, label %false.1

true.1:
block
assign
mul
Object
	%tmp.1085 = load i32, i32* %tmp.1080
Object
	%tmp.1086 = load i32, i32* %tmp.1081
conform
conform
	%tmp.1087 = mul i32 %tmp.1085, %tmp.1086
conform
	store i32 %tmp.1087, i32* %tmp.1080
assign
plus
Object
	%tmp.1088 = load i32, i32* %tmp.1081
Integer Constant
conform
conform
	%tmp.1089 = add i32 %tmp.1088, 1
conform
	store i32 %tmp.1089, i32* %tmp.1081
	br label %loop.1

false.1:
dispatch
Object
	%tmp.1090 = load i32, i32* %tmp.1080
newClass
	%tmp.1091 = call %E* @E_new(  )
	%tmp.1092 = icmp eq %E* %tmp.1091, null
	br i1 %tmp.1092, label %abort, label %ok.4

ok.4:
	%tmp.1093 = getelementptr %E, %E* %tmp.1091, i32 0, i32 0
	%tmp.1094 = load %E_vtable*, %E_vtable** %tmp.1093
	%tmp.1095 = getelementptr %E_vtable, %E_vtable* %tmp.1094, i32 0, i32 8
	%tmp.1096 = load %E* (%E*,i32) *, %E* (%E*,i32) ** %tmp.1095
conform
conform
	%tmp.1097 = call %E*(%E*, i32) %tmp.1096( %E* %tmp.1091, i32 %tmp.1090 )
	ret %E* %tmp.1097

abort:
	call void @abort(  )
	unreachable
}

define %A* @A_new() {

entry:
	%tmp.1098 = getelementptr %A_vtable, %A_vtable* @A_vtable_prototype, i32 0, i32 1
	%tmp.1099 = load i32, i32* %tmp.1098
	%tmp.1100 = call i8*(i32) @malloc( i32 %tmp.1099 )
	%tmp.1101 = bitcast i8* %tmp.1100 to %A*
	%tmp.1102 = getelementptr %A, %A* %tmp.1101, i32 0, i32 0
	store %A_vtable* @A_vtable_prototype, %A_vtable** %tmp.1102
	%tmp.1103 = alloca %A*
	store %A* %tmp.1101, %A** %tmp.1103
method
method
method
attribute
	%tmp.1104 = getelementptr %A, %A* %tmp.1101, i32 0, i32 1
Integer Constant
conform
	store i32 0, i32* %tmp.1104
method
method
method
method
method
method
method
	ret %A* %tmp.1101

abort:
	call void @abort(  )
	unreachable
}

method
define %E* @B_method5(%B* %self, i32 %num) {

entry:
	%tmp.1105 = alloca %B*
conform
	store %B* %self, %B** %tmp.1105
	%tmp.1106 = alloca i32
conform
	store i32 %num, i32* %tmp.1106
let
No_expr
	%tmp.1107 = alloca i32
conform
	store i32 0, i32* %tmp.1107
block
assign
mul
Object
	%tmp.1108 = load i32, i32* %tmp.1106
Object
	%tmp.1109 = load i32, i32* %tmp.1106
conform
conform
	%tmp.1110 = mul i32 %tmp.1108, %tmp.1109
conform
	store i32 %tmp.1110, i32* %tmp.1107
dispatch
Object
	%tmp.1111 = load i32, i32* %tmp.1107
newClass
	%tmp.1112 = call %E* @E_new(  )
	%tmp.1113 = icmp eq %E* %tmp.1112, null
	br i1 %tmp.1113, label %abort, label %ok.0

ok.0:
	%tmp.1114 = getelementptr %E, %E* %tmp.1112, i32 0, i32 0
	%tmp.1115 = load %E_vtable*, %E_vtable** %tmp.1114
	%tmp.1116 = getelementptr %E_vtable, %E_vtable* %tmp.1115, i32 0, i32 8
	%tmp.1117 = load %E* (%E*,i32) *, %E* (%E*,i32) ** %tmp.1116
conform
conform
	%tmp.1118 = call %E*(%E*, i32) %tmp.1117( %E* %tmp.1112, i32 %tmp.1111 )
	ret %E* %tmp.1118

abort:
	call void @abort(  )
	unreachable
}

define %B* @B_new() {

entry:
	%tmp.1119 = getelementptr %B_vtable, %B_vtable* @B_vtable_prototype, i32 0, i32 1
	%tmp.1120 = load i32, i32* %tmp.1119
	%tmp.1121 = call i8*(i32) @malloc( i32 %tmp.1120 )
	%tmp.1122 = bitcast i8* %tmp.1121 to %B*
	%tmp.1123 = getelementptr %B, %B* %tmp.1122, i32 0, i32 0
	store %B_vtable* @B_vtable_prototype, %B_vtable** %tmp.1123
	%tmp.1124 = alloca %B*
	store %B* %tmp.1122, %B** %tmp.1124
method
method
method
attribute
	%tmp.1125 = getelementptr %B, %B* %tmp.1122, i32 0, i32 1
Integer Constant
conform
	store i32 0, i32* %tmp.1125
method
method
method
method
method
method
method
method
	ret %B* %tmp.1122

abort:
	call void @abort(  )
	unreachable
}

method
define %A* @C_method6(%C* %self, i32 %num) {

entry:
	%tmp.1126 = alloca %C*
conform
	store %C* %self, %C** %tmp.1126
	%tmp.1127 = alloca i32
conform
	store i32 %num, i32* %tmp.1127
let
No_expr
	%tmp.1128 = alloca i32
conform
	store i32 0, i32* %tmp.1128
block
assign
neg
Object
	%tmp.1129 = load i32, i32* %tmp.1127
conform
	%tmp.1130 = sub i32 0, %tmp.1129
conform
	store i32 %tmp.1130, i32* %tmp.1128
dispatch
Object
	%tmp.1131 = load i32, i32* %tmp.1128
newClass
	%tmp.1132 = call %A* @A_new(  )
	%tmp.1133 = icmp eq %A* %tmp.1132, null
	br i1 %tmp.1133, label %abort, label %ok.0

ok.0:
	%tmp.1134 = getelementptr %A, %A* %tmp.1132, i32 0, i32 0
	%tmp.1135 = load %A_vtable*, %A_vtable** %tmp.1134
	%tmp.1136 = getelementptr %A_vtable, %A_vtable* %tmp.1135, i32 0, i32 8
	%tmp.1137 = load %A* (%A*,i32) *, %A* (%A*,i32) ** %tmp.1136
conform
conform
	%tmp.1138 = call %A*(%A*, i32) %tmp.1137( %A* %tmp.1132, i32 %tmp.1131 )
	ret %A* %tmp.1138

abort:
	call void @abort(  )
	unreachable
}

method
define %E* @C_method5(%C* %self, i32 %num) {

entry:
	%tmp.1139 = alloca %C*
conform
	store %C* %self, %C** %tmp.1139
	%tmp.1140 = alloca i32
conform
	store i32 %num, i32* %tmp.1140
let
No_expr
	%tmp.1141 = alloca i32
conform
	store i32 0, i32* %tmp.1141
block
assign
mul
mul
Object
	%tmp.1142 = load i32, i32* %tmp.1140
Object
	%tmp.1143 = load i32, i32* %tmp.1140
conform
conform
	%tmp.1144 = mul i32 %tmp.1142, %tmp.1143
Object
	%tmp.1145 = load i32, i32* %tmp.1140
conform
conform
	%tmp.1146 = mul i32 %tmp.1144, %tmp.1145
conform
	store i32 %tmp.1146, i32* %tmp.1141
dispatch
Object
	%tmp.1147 = load i32, i32* %tmp.1141
newClass
	%tmp.1148 = call %E* @E_new(  )
	%tmp.1149 = icmp eq %E* %tmp.1148, null
	br i1 %tmp.1149, label %abort, label %ok.1

ok.1:
	%tmp.1150 = getelementptr %E, %E* %tmp.1148, i32 0, i32 0
	%tmp.1151 = load %E_vtable*, %E_vtable** %tmp.1150
	%tmp.1152 = getelementptr %E_vtable, %E_vtable* %tmp.1151, i32 0, i32 8
	%tmp.1153 = load %E* (%E*,i32) *, %E* (%E*,i32) ** %tmp.1152
conform
conform
	%tmp.1154 = call %E*(%E*, i32) %tmp.1153( %E* %tmp.1148, i32 %tmp.1147 )
	ret %E* %tmp.1154

abort:
	call void @abort(  )
	unreachable
}

define %C* @C_new() {

entry:
	%tmp.1155 = getelementptr %C_vtable, %C_vtable* @C_vtable_prototype, i32 0, i32 1
	%tmp.1156 = load i32, i32* %tmp.1155
	%tmp.1157 = call i8*(i32) @malloc( i32 %tmp.1156 )
	%tmp.1158 = bitcast i8* %tmp.1157 to %C*
	%tmp.1159 = getelementptr %C, %C* %tmp.1158, i32 0, i32 0
	store %C_vtable* @C_vtable_prototype, %C_vtable** %tmp.1159
	%tmp.1160 = alloca %C*
	store %C* %tmp.1158, %C** %tmp.1160
method
method
method
attribute
	%tmp.1161 = getelementptr %C, %C* %tmp.1158, i32 0, i32 1
Integer Constant
conform
	store i32 0, i32* %tmp.1161
method
method
method
method
method
method
method
method
method
method
	ret %C* %tmp.1158

abort:
	call void @abort(  )
	unreachable
}

method
define i1 @D_method7(%D* %self, i32 %num) {

entry:
	%tmp.1162 = alloca %D*
conform
	store %D* %self, %D** %tmp.1162
	%tmp.1163 = alloca i32
conform
	store i32 %num, i32* %tmp.1163
let
Object
	%tmp.1164 = load i32, i32* %tmp.1163
	%tmp.1165 = alloca i32
conform
	store i32 %tmp.1164, i32* %tmp.1165
cond
	%tmp.1166 = alloca i1
lt
Object
	%tmp.1167 = load i32, i32* %tmp.1165
Integer Constant
conform
conform
	%tmp.1168 = icmp slt i32 %tmp.1167, 0
	br i1 %tmp.1168, label %true.0, label %false.0

true.0:
dispatch
neg
Object
	%tmp.1169 = load i32, i32* %tmp.1165
conform
	%tmp.1170 = sub i32 0, %tmp.1169
Object
	%tmp.1171 = load %D*, %D** %tmp.1162
	%tmp.1172 = icmp eq %D* %tmp.1171, null
	br i1 %tmp.1172, label %abort, label %ok.0

ok.0:
	%tmp.1173 = getelementptr %D, %D* %tmp.1171, i32 0, i32 0
	%tmp.1174 = load %D_vtable*, %D_vtable** %tmp.1173
	%tmp.1175 = getelementptr %D_vtable, %D_vtable* %tmp.1174, i32 0, i32 14
	%tmp.1176 = load i1 (%D*,i32) *, i1 (%D*,i32) ** %tmp.1175
conform
conform
	%tmp.1177 = call i1(%D*, i32) %tmp.1176( %D* %tmp.1171, i32 %tmp.1170 )
conform
	store i1 %tmp.1177, i1* %tmp.1166
	br label %end.0

false.0:
cond
	%tmp.1178 = alloca i1
eq
Integer Constant
Object
	%tmp.1179 = load i32, i32* %tmp.1165
	%tmp.1180 = icmp eq i32 0, %tmp.1179
	br i1 %tmp.1180, label %true.1, label %false.1

true.1:
Boolean Constant
conform
	store i1 true, i1* %tmp.1178
	br label %end.1

false.1:
cond
	%tmp.1181 = alloca i1
eq
Integer Constant
Object
	%tmp.1182 = load i32, i32* %tmp.1165
	%tmp.1183 = icmp eq i32 1, %tmp.1182
	br i1 %tmp.1183, label %true.2, label %false.2

true.2:
Boolean Constant
conform
	store i1 false, i1* %tmp.1181
	br label %end.2

false.2:
cond
	%tmp.1184 = alloca i1
eq
Integer Constant
Object
	%tmp.1185 = load i32, i32* %tmp.1165
	%tmp.1186 = icmp eq i32 2, %tmp.1185
	br i1 %tmp.1186, label %true.3, label %false.3

true.3:
Boolean Constant
conform
	store i1 false, i1* %tmp.1184
	br label %end.3

false.3:
dispatch
sub
Object
	%tmp.1187 = load i32, i32* %tmp.1165
Integer Constant
conform
conform
	%tmp.1188 = sub i32 %tmp.1187, 3
Object
	%tmp.1189 = load %D*, %D** %tmp.1162
	%tmp.1190 = icmp eq %D* %tmp.1189, null
	br i1 %tmp.1190, label %abort, label %ok.1

ok.1:
	%tmp.1191 = getelementptr %D, %D* %tmp.1189, i32 0, i32 0
	%tmp.1192 = load %D_vtable*, %D_vtable** %tmp.1191
	%tmp.1193 = getelementptr %D_vtable, %D_vtable* %tmp.1192, i32 0, i32 14
	%tmp.1194 = load i1 (%D*,i32) *, i1 (%D*,i32) ** %tmp.1193
conform
conform
	%tmp.1195 = call i1(%D*, i32) %tmp.1194( %D* %tmp.1189, i32 %tmp.1188 )
conform
	store i1 %tmp.1195, i1* %tmp.1184
	br label %end.3

end.3:
	%tmp.1196 = load i1, i1* %tmp.1184
conform
	store i1 %tmp.1196, i1* %tmp.1181
	br label %end.2

end.2:
	%tmp.1197 = load i1, i1* %tmp.1181
conform
	store i1 %tmp.1197, i1* %tmp.1178
	br label %end.1

end.1:
	%tmp.1198 = load i1, i1* %tmp.1178
conform
	store i1 %tmp.1198, i1* %tmp.1166
	br label %end.0

end.0:
	%tmp.1199 = load i1, i1* %tmp.1166
	ret i1 %tmp.1199

abort:
	call void @abort(  )
	unreachable
}

define %D* @D_new() {

entry:
	%tmp.1200 = getelementptr %D_vtable, %D_vtable* @D_vtable_prototype, i32 0, i32 1
	%tmp.1201 = load i32, i32* %tmp.1200
	%tmp.1202 = call i8*(i32) @malloc( i32 %tmp.1201 )
	%tmp.1203 = bitcast i8* %tmp.1202 to %D*
	%tmp.1204 = getelementptr %D, %D* %tmp.1203, i32 0, i32 0
	store %D_vtable* @D_vtable_prototype, %D_vtable** %tmp.1204
	%tmp.1205 = alloca %D*
	store %D* %tmp.1203, %D** %tmp.1205
method
method
method
attribute
	%tmp.1206 = getelementptr %D, %D* %tmp.1203, i32 0, i32 1
Integer Constant
conform
	store i32 0, i32* %tmp.1206
method
method
method
method
method
method
method
method
method
	ret %D* %tmp.1203

abort:
	call void @abort(  )
	unreachable
}

method
define %A* @E_method6(%E* %self, i32 %num) {

entry:
	%tmp.1207 = alloca %E*
conform
	store %E* %self, %E** %tmp.1207
	%tmp.1208 = alloca i32
conform
	store i32 %num, i32* %tmp.1208
let
No_expr
	%tmp.1209 = alloca i32
conform
	store i32 0, i32* %tmp.1209
block
assign
div
Object
	%tmp.1210 = load i32, i32* %tmp.1208
Integer Constant
conform
conform
	%tmp.1211 = icmp eq i32 8, 0
	br i1 %tmp.1211, label %abort, label %ok.0

ok.0:
	%tmp.1212 = sdiv i32 %tmp.1210, 8
conform
	store i32 %tmp.1212, i32* %tmp.1209
dispatch
Object
	%tmp.1213 = load i32, i32* %tmp.1209
newClass
	%tmp.1214 = call %A* @A_new(  )
	%tmp.1215 = icmp eq %A* %tmp.1214, null
	br i1 %tmp.1215, label %abort, label %ok.1

ok.1:
	%tmp.1216 = getelementptr %A, %A* %tmp.1214, i32 0, i32 0
	%tmp.1217 = load %A_vtable*, %A_vtable** %tmp.1216
	%tmp.1218 = getelementptr %A_vtable, %A_vtable* %tmp.1217, i32 0, i32 8
	%tmp.1219 = load %A* (%A*,i32) *, %A* (%A*,i32) ** %tmp.1218
conform
conform
	%tmp.1220 = call %A*(%A*, i32) %tmp.1219( %A* %tmp.1214, i32 %tmp.1213 )
	ret %A* %tmp.1220

abort:
	call void @abort(  )
	unreachable
}

define %E* @E_new() {

entry:
	%tmp.1221 = getelementptr %E_vtable, %E_vtable* @E_vtable_prototype, i32 0, i32 1
	%tmp.1222 = load i32, i32* %tmp.1221
	%tmp.1223 = call i8*(i32) @malloc( i32 %tmp.1222 )
	%tmp.1224 = bitcast i8* %tmp.1223 to %E*
	%tmp.1225 = getelementptr %E, %E* %tmp.1224, i32 0, i32 0
	store %E_vtable* @E_vtable_prototype, %E_vtable** %tmp.1225
	%tmp.1226 = alloca %E*
	store %E* %tmp.1224, %E** %tmp.1226
method
method
method
attribute
	%tmp.1227 = getelementptr %E, %E* %tmp.1224, i32 0, i32 1
Integer Constant
conform
	store i32 0, i32* %tmp.1227
method
method
method
method
method
method
method
method
method
method
	ret %E* %tmp.1224

abort:
	call void @abort(  )
	unreachable
}

method
define i32 @A2I_c2i(%A2I* %self, %String* %char) {

entry:
	%tmp.1228 = alloca %A2I*
conform
	store %A2I* %self, %A2I** %tmp.1228
	%tmp.1229 = alloca %String*
conform
	store %String* %char, %String** %tmp.1229
cond
	%tmp.1230 = alloca i32
eq
Object
	%tmp.1231 = load %String*, %String** %tmp.1229
string_const
conform
	%tmp.1232 = getelementptr %String, %String* %tmp.1231, i32 0, i32 1
	%tmp.1233 = load i8*, i8** %tmp.1232
conform
	%tmp.1234 = getelementptr %String, %String* @String.1, i32 0, i32 1
	%tmp.1235 = load i8*, i8** %tmp.1234
	%tmp.1236 = call i32(i8*, i8*) @strcmp( i8* %tmp.1233, i8* %tmp.1235 )
	%tmp.1237 = icmp eq i32 %tmp.1236, 0
	br i1 %tmp.1237, label %true.0, label %false.0

true.0:
Integer Constant
conform
	store i32 0, i32* %tmp.1230
	br label %end.0

false.0:
cond
	%tmp.1238 = alloca i32
eq
Object
	%tmp.1239 = load %String*, %String** %tmp.1229
string_const
conform
	%tmp.1240 = getelementptr %String, %String* %tmp.1239, i32 0, i32 1
	%tmp.1241 = load i8*, i8** %tmp.1240
conform
	%tmp.1242 = getelementptr %String, %String* @String.2, i32 0, i32 1
	%tmp.1243 = load i8*, i8** %tmp.1242
	%tmp.1244 = call i32(i8*, i8*) @strcmp( i8* %tmp.1241, i8* %tmp.1243 )
	%tmp.1245 = icmp eq i32 %tmp.1244, 0
	br i1 %tmp.1245, label %true.1, label %false.1

true.1:
Integer Constant
conform
	store i32 1, i32* %tmp.1238
	br label %end.1

false.1:
cond
	%tmp.1246 = alloca i32
eq
Object
	%tmp.1247 = load %String*, %String** %tmp.1229
string_const
conform
	%tmp.1248 = getelementptr %String, %String* %tmp.1247, i32 0, i32 1
	%tmp.1249 = load i8*, i8** %tmp.1248
conform
	%tmp.1250 = getelementptr %String, %String* @String.3, i32 0, i32 1
	%tmp.1251 = load i8*, i8** %tmp.1250
	%tmp.1252 = call i32(i8*, i8*) @strcmp( i8* %tmp.1249, i8* %tmp.1251 )
	%tmp.1253 = icmp eq i32 %tmp.1252, 0
	br i1 %tmp.1253, label %true.2, label %false.2

true.2:
Integer Constant
conform
	store i32 2, i32* %tmp.1246
	br label %end.2

false.2:
cond
	%tmp.1254 = alloca i32
eq
Object
	%tmp.1255 = load %String*, %String** %tmp.1229
string_const
conform
	%tmp.1256 = getelementptr %String, %String* %tmp.1255, i32 0, i32 1
	%tmp.1257 = load i8*, i8** %tmp.1256
conform
	%tmp.1258 = getelementptr %String, %String* @String.4, i32 0, i32 1
	%tmp.1259 = load i8*, i8** %tmp.1258
	%tmp.1260 = call i32(i8*, i8*) @strcmp( i8* %tmp.1257, i8* %tmp.1259 )
	%tmp.1261 = icmp eq i32 %tmp.1260, 0
	br i1 %tmp.1261, label %true.3, label %false.3

true.3:
Integer Constant
conform
	store i32 3, i32* %tmp.1254
	br label %end.3

false.3:
cond
	%tmp.1262 = alloca i32
eq
Object
	%tmp.1263 = load %String*, %String** %tmp.1229
string_const
conform
	%tmp.1264 = getelementptr %String, %String* %tmp.1263, i32 0, i32 1
	%tmp.1265 = load i8*, i8** %tmp.1264
conform
	%tmp.1266 = getelementptr %String, %String* @String.5, i32 0, i32 1
	%tmp.1267 = load i8*, i8** %tmp.1266
	%tmp.1268 = call i32(i8*, i8*) @strcmp( i8* %tmp.1265, i8* %tmp.1267 )
	%tmp.1269 = icmp eq i32 %tmp.1268, 0
	br i1 %tmp.1269, label %true.4, label %false.4

true.4:
Integer Constant
conform
	store i32 4, i32* %tmp.1262
	br label %end.4

false.4:
cond
	%tmp.1270 = alloca i32
eq
Object
	%tmp.1271 = load %String*, %String** %tmp.1229
string_const
conform
	%tmp.1272 = getelementptr %String, %String* %tmp.1271, i32 0, i32 1
	%tmp.1273 = load i8*, i8** %tmp.1272
conform
	%tmp.1274 = getelementptr %String, %String* @String.6, i32 0, i32 1
	%tmp.1275 = load i8*, i8** %tmp.1274
	%tmp.1276 = call i32(i8*, i8*) @strcmp( i8* %tmp.1273, i8* %tmp.1275 )
	%tmp.1277 = icmp eq i32 %tmp.1276, 0
	br i1 %tmp.1277, label %true.5, label %false.5

true.5:
Integer Constant
conform
	store i32 5, i32* %tmp.1270
	br label %end.5

false.5:
cond
	%tmp.1278 = alloca i32
eq
Object
	%tmp.1279 = load %String*, %String** %tmp.1229
string_const
conform
	%tmp.1280 = getelementptr %String, %String* %tmp.1279, i32 0, i32 1
	%tmp.1281 = load i8*, i8** %tmp.1280
conform
	%tmp.1282 = getelementptr %String, %String* @String.7, i32 0, i32 1
	%tmp.1283 = load i8*, i8** %tmp.1282
	%tmp.1284 = call i32(i8*, i8*) @strcmp( i8* %tmp.1281, i8* %tmp.1283 )
	%tmp.1285 = icmp eq i32 %tmp.1284, 0
	br i1 %tmp.1285, label %true.6, label %false.6

true.6:
Integer Constant
conform
	store i32 6, i32* %tmp.1278
	br label %end.6

false.6:
cond
	%tmp.1286 = alloca i32
eq
Object
	%tmp.1287 = load %String*, %String** %tmp.1229
string_const
conform
	%tmp.1288 = getelementptr %String, %String* %tmp.1287, i32 0, i32 1
	%tmp.1289 = load i8*, i8** %tmp.1288
conform
	%tmp.1290 = getelementptr %String, %String* @String.8, i32 0, i32 1
	%tmp.1291 = load i8*, i8** %tmp.1290
	%tmp.1292 = call i32(i8*, i8*) @strcmp( i8* %tmp.1289, i8* %tmp.1291 )
	%tmp.1293 = icmp eq i32 %tmp.1292, 0
	br i1 %tmp.1293, label %true.7, label %false.7

true.7:
Integer Constant
conform
	store i32 7, i32* %tmp.1286
	br label %end.7

false.7:
cond
	%tmp.1294 = alloca i32
eq
Object
	%tmp.1295 = load %String*, %String** %tmp.1229
string_const
conform
	%tmp.1296 = getelementptr %String, %String* %tmp.1295, i32 0, i32 1
	%tmp.1297 = load i8*, i8** %tmp.1296
conform
	%tmp.1298 = getelementptr %String, %String* @String.9, i32 0, i32 1
	%tmp.1299 = load i8*, i8** %tmp.1298
	%tmp.1300 = call i32(i8*, i8*) @strcmp( i8* %tmp.1297, i8* %tmp.1299 )
	%tmp.1301 = icmp eq i32 %tmp.1300, 0
	br i1 %tmp.1301, label %true.8, label %false.8

true.8:
Integer Constant
conform
	store i32 8, i32* %tmp.1294
	br label %end.8

false.8:
cond
	%tmp.1302 = alloca i32
eq
Object
	%tmp.1303 = load %String*, %String** %tmp.1229
string_const
conform
	%tmp.1304 = getelementptr %String, %String* %tmp.1303, i32 0, i32 1
	%tmp.1305 = load i8*, i8** %tmp.1304
conform
	%tmp.1306 = getelementptr %String, %String* @String.10, i32 0, i32 1
	%tmp.1307 = load i8*, i8** %tmp.1306
	%tmp.1308 = call i32(i8*, i8*) @strcmp( i8* %tmp.1305, i8* %tmp.1307 )
	%tmp.1309 = icmp eq i32 %tmp.1308, 0
	br i1 %tmp.1309, label %true.9, label %false.9

true.9:
Integer Constant
conform
	store i32 9, i32* %tmp.1302
	br label %end.9

false.9:
block
dispatch
Object
	%tmp.1310 = load %A2I*, %A2I** %tmp.1228
	%tmp.1311 = icmp eq %A2I* %tmp.1310, null
	br i1 %tmp.1311, label %abort, label %ok.0

ok.0:
	%tmp.1312 = getelementptr %A2I, %A2I* %tmp.1310, i32 0, i32 0
	%tmp.1313 = load %A2I_vtable*, %A2I_vtable** %tmp.1312
	%tmp.1314 = getelementptr %A2I_vtable, %A2I_vtable* %tmp.1313, i32 0, i32 4
	%tmp.1315 = load %Object* (%A2I*) *, %Object* (%A2I*) ** %tmp.1314
conform
	%tmp.1316 = call %Object*(%A2I*) %tmp.1315( %A2I* %tmp.1310 )
Integer Constant
conform
	store i32 0, i32* %tmp.1302
	br label %end.9

end.9:
	%tmp.1317 = load i32, i32* %tmp.1302
conform
	store i32 %tmp.1317, i32* %tmp.1294
	br label %end.8

end.8:
	%tmp.1318 = load i32, i32* %tmp.1294
conform
	store i32 %tmp.1318, i32* %tmp.1286
	br label %end.7

end.7:
	%tmp.1319 = load i32, i32* %tmp.1286
conform
	store i32 %tmp.1319, i32* %tmp.1278
	br label %end.6

end.6:
	%tmp.1320 = load i32, i32* %tmp.1278
conform
	store i32 %tmp.1320, i32* %tmp.1270
	br label %end.5

end.5:
	%tmp.1321 = load i32, i32* %tmp.1270
conform
	store i32 %tmp.1321, i32* %tmp.1262
	br label %end.4

end.4:
	%tmp.1322 = load i32, i32* %tmp.1262
conform
	store i32 %tmp.1322, i32* %tmp.1254
	br label %end.3

end.3:
	%tmp.1323 = load i32, i32* %tmp.1254
conform
	store i32 %tmp.1323, i32* %tmp.1246
	br label %end.2

end.2:
	%tmp.1324 = load i32, i32* %tmp.1246
conform
	store i32 %tmp.1324, i32* %tmp.1238
	br label %end.1

end.1:
	%tmp.1325 = load i32, i32* %tmp.1238
conform
	store i32 %tmp.1325, i32* %tmp.1230
	br label %end.0

end.0:
	%tmp.1326 = load i32, i32* %tmp.1230
	ret i32 %tmp.1326

abort:
	call void @abort(  )
	unreachable
}

method
define %String* @A2I_i2c(%A2I* %self, i32 %i) {

entry:
	%tmp.1327 = alloca %A2I*
conform
	store %A2I* %self, %A2I** %tmp.1327
	%tmp.1328 = alloca i32
conform
	store i32 %i, i32* %tmp.1328
cond
	%tmp.1329 = alloca %String*
eq
Object
	%tmp.1330 = load i32, i32* %tmp.1328
Integer Constant
	%tmp.1331 = icmp eq i32 %tmp.1330, 0
	br i1 %tmp.1331, label %true.10, label %false.10

true.10:
string_const
conform
	store %String* @String.1, %String** %tmp.1329
	br label %end.10

false.10:
cond
	%tmp.1332 = alloca %String*
eq
Object
	%tmp.1333 = load i32, i32* %tmp.1328
Integer Constant
	%tmp.1334 = icmp eq i32 %tmp.1333, 1
	br i1 %tmp.1334, label %true.11, label %false.11

true.11:
string_const
conform
	store %String* @String.2, %String** %tmp.1332
	br label %end.11

false.11:
cond
	%tmp.1335 = alloca %String*
eq
Object
	%tmp.1336 = load i32, i32* %tmp.1328
Integer Constant
	%tmp.1337 = icmp eq i32 %tmp.1336, 2
	br i1 %tmp.1337, label %true.12, label %false.12

true.12:
string_const
conform
	store %String* @String.3, %String** %tmp.1335
	br label %end.12

false.12:
cond
	%tmp.1338 = alloca %String*
eq
Object
	%tmp.1339 = load i32, i32* %tmp.1328
Integer Constant
	%tmp.1340 = icmp eq i32 %tmp.1339, 3
	br i1 %tmp.1340, label %true.13, label %false.13

true.13:
string_const
conform
	store %String* @String.4, %String** %tmp.1338
	br label %end.13

false.13:
cond
	%tmp.1341 = alloca %String*
eq
Object
	%tmp.1342 = load i32, i32* %tmp.1328
Integer Constant
	%tmp.1343 = icmp eq i32 %tmp.1342, 4
	br i1 %tmp.1343, label %true.14, label %false.14

true.14:
string_const
conform
	store %String* @String.5, %String** %tmp.1341
	br label %end.14

false.14:
cond
	%tmp.1344 = alloca %String*
eq
Object
	%tmp.1345 = load i32, i32* %tmp.1328
Integer Constant
	%tmp.1346 = icmp eq i32 %tmp.1345, 5
	br i1 %tmp.1346, label %true.15, label %false.15

true.15:
string_const
conform
	store %String* @String.6, %String** %tmp.1344
	br label %end.15

false.15:
cond
	%tmp.1347 = alloca %String*
eq
Object
	%tmp.1348 = load i32, i32* %tmp.1328
Integer Constant
	%tmp.1349 = icmp eq i32 %tmp.1348, 6
	br i1 %tmp.1349, label %true.16, label %false.16

true.16:
string_const
conform
	store %String* @String.7, %String** %tmp.1347
	br label %end.16

false.16:
cond
	%tmp.1350 = alloca %String*
eq
Object
	%tmp.1351 = load i32, i32* %tmp.1328
Integer Constant
	%tmp.1352 = icmp eq i32 %tmp.1351, 7
	br i1 %tmp.1352, label %true.17, label %false.17

true.17:
string_const
conform
	store %String* @String.8, %String** %tmp.1350
	br label %end.17

false.17:
cond
	%tmp.1353 = alloca %String*
eq
Object
	%tmp.1354 = load i32, i32* %tmp.1328
Integer Constant
	%tmp.1355 = icmp eq i32 %tmp.1354, 8
	br i1 %tmp.1355, label %true.18, label %false.18

true.18:
string_const
conform
	store %String* @String.9, %String** %tmp.1353
	br label %end.18

false.18:
cond
	%tmp.1356 = alloca %String*
eq
Object
	%tmp.1357 = load i32, i32* %tmp.1328
Integer Constant
	%tmp.1358 = icmp eq i32 %tmp.1357, 9
	br i1 %tmp.1358, label %true.19, label %false.19

true.19:
string_const
conform
	store %String* @String.10, %String** %tmp.1356
	br label %end.19

false.19:
block
dispatch
Object
	%tmp.1359 = load %A2I*, %A2I** %tmp.1327
	%tmp.1360 = icmp eq %A2I* %tmp.1359, null
	br i1 %tmp.1360, label %abort, label %ok.1

ok.1:
	%tmp.1361 = getelementptr %A2I, %A2I* %tmp.1359, i32 0, i32 0
	%tmp.1362 = load %A2I_vtable*, %A2I_vtable** %tmp.1361
	%tmp.1363 = getelementptr %A2I_vtable, %A2I_vtable* %tmp.1362, i32 0, i32 4
	%tmp.1364 = load %Object* (%A2I*) *, %Object* (%A2I*) ** %tmp.1363
conform
	%tmp.1365 = call %Object*(%A2I*) %tmp.1364( %A2I* %tmp.1359 )
string_const
conform
	store %String* @String.11, %String** %tmp.1356
	br label %end.19

end.19:
	%tmp.1366 = load %String*, %String** %tmp.1356
conform
	store %String* %tmp.1366, %String** %tmp.1353
	br label %end.18

end.18:
	%tmp.1367 = load %String*, %String** %tmp.1353
conform
	store %String* %tmp.1367, %String** %tmp.1350
	br label %end.17

end.17:
	%tmp.1368 = load %String*, %String** %tmp.1350
conform
	store %String* %tmp.1368, %String** %tmp.1347
	br label %end.16

end.16:
	%tmp.1369 = load %String*, %String** %tmp.1347
conform
	store %String* %tmp.1369, %String** %tmp.1344
	br label %end.15

end.15:
	%tmp.1370 = load %String*, %String** %tmp.1344
conform
	store %String* %tmp.1370, %String** %tmp.1341
	br label %end.14

end.14:
	%tmp.1371 = load %String*, %String** %tmp.1341
conform
	store %String* %tmp.1371, %String** %tmp.1338
	br label %end.13

end.13:
	%tmp.1372 = load %String*, %String** %tmp.1338
conform
	store %String* %tmp.1372, %String** %tmp.1335
	br label %end.12

end.12:
	%tmp.1373 = load %String*, %String** %tmp.1335
conform
	store %String* %tmp.1373, %String** %tmp.1332
	br label %end.11

end.11:
	%tmp.1374 = load %String*, %String** %tmp.1332
conform
	store %String* %tmp.1374, %String** %tmp.1329
	br label %end.10

end.10:
	%tmp.1375 = load %String*, %String** %tmp.1329
	ret %String* %tmp.1375

abort:
	call void @abort(  )
	unreachable
}

method
define i32 @A2I_a2i(%A2I* %self, %String* %s) {

entry:
	%tmp.1376 = alloca %A2I*
conform
	store %A2I* %self, %A2I** %tmp.1376
	%tmp.1377 = alloca %String*
conform
	store %String* %s, %String** %tmp.1377
cond
	%tmp.1378 = alloca i32
eq
dispatch
Object
	%tmp.1379 = load %String*, %String** %tmp.1377
	%tmp.1380 = icmp eq %String* %tmp.1379, null
	br i1 %tmp.1380, label %abort, label %ok.2

ok.2:
	%tmp.1381 = getelementptr %String, %String* %tmp.1379, i32 0, i32 0
	%tmp.1382 = load %String_vtable*, %String_vtable** %tmp.1381
	%tmp.1383 = getelementptr %String_vtable, %String_vtable* %tmp.1382, i32 0, i32 7
	%tmp.1384 = load i32 (%String*) *, i32 (%String*) ** %tmp.1383
conform
	%tmp.1385 = call i32(%String*) %tmp.1384( %String* %tmp.1379 )
Integer Constant
	%tmp.1386 = icmp eq i32 %tmp.1385, 0
	br i1 %tmp.1386, label %true.20, label %false.20

true.20:
Integer Constant
conform
	store i32 0, i32* %tmp.1378
	br label %end.20

false.20:
cond
	%tmp.1387 = alloca i32
eq
dispatch
Integer Constant
Integer Constant
Object
	%tmp.1388 = load %String*, %String** %tmp.1377
	%tmp.1389 = icmp eq %String* %tmp.1388, null
	br i1 %tmp.1389, label %abort, label %ok.3

ok.3:
	%tmp.1390 = getelementptr %String, %String* %tmp.1388, i32 0, i32 0
	%tmp.1391 = load %String_vtable*, %String_vtable** %tmp.1390
	%tmp.1392 = getelementptr %String_vtable, %String_vtable* %tmp.1391, i32 0, i32 9
	%tmp.1393 = load %String* (%String*,i32,i32) *, %String* (%String*,i32,i32) ** %tmp.1392
conform
conform
conform
	%tmp.1394 = call %String*(%String*, i32, i32) %tmp.1393( %String* %tmp.1388, i32 0, i32 1 )
string_const
conform
	%tmp.1395 = getelementptr %String, %String* %tmp.1394, i32 0, i32 1
	%tmp.1396 = load i8*, i8** %tmp.1395
conform
	%tmp.1397 = getelementptr %String, %String* @String.12, i32 0, i32 1
	%tmp.1398 = load i8*, i8** %tmp.1397
	%tmp.1399 = call i32(i8*, i8*) @strcmp( i8* %tmp.1396, i8* %tmp.1398 )
	%tmp.1400 = icmp eq i32 %tmp.1399, 0
	br i1 %tmp.1400, label %true.21, label %false.21

true.21:
neg
dispatch
dispatch
Integer Constant
sub
dispatch
Object
	%tmp.1401 = load %String*, %String** %tmp.1377
	%tmp.1402 = icmp eq %String* %tmp.1401, null
	br i1 %tmp.1402, label %abort, label %ok.4

ok.4:
	%tmp.1403 = getelementptr %String, %String* %tmp.1401, i32 0, i32 0
	%tmp.1404 = load %String_vtable*, %String_vtable** %tmp.1403
	%tmp.1405 = getelementptr %String_vtable, %String_vtable* %tmp.1404, i32 0, i32 7
	%tmp.1406 = load i32 (%String*) *, i32 (%String*) ** %tmp.1405
conform
	%tmp.1407 = call i32(%String*) %tmp.1406( %String* %tmp.1401 )
Integer Constant
conform
conform
	%tmp.1408 = sub i32 %tmp.1407, 1
Object
	%tmp.1409 = load %String*, %String** %tmp.1377
	%tmp.1410 = icmp eq %String* %tmp.1409, null
	br i1 %tmp.1410, label %abort, label %ok.5

ok.5:
	%tmp.1411 = getelementptr %String, %String* %tmp.1409, i32 0, i32 0
	%tmp.1412 = load %String_vtable*, %String_vtable** %tmp.1411
	%tmp.1413 = getelementptr %String_vtable, %String_vtable* %tmp.1412, i32 0, i32 9
	%tmp.1414 = load %String* (%String*,i32,i32) *, %String* (%String*,i32,i32) ** %tmp.1413
conform
conform
conform
	%tmp.1415 = call %String*(%String*, i32, i32) %tmp.1414( %String* %tmp.1409, i32 1, i32 %tmp.1408 )
Object
	%tmp.1416 = load %A2I*, %A2I** %tmp.1376
	%tmp.1417 = icmp eq %A2I* %tmp.1416, null
	br i1 %tmp.1417, label %abort, label %ok.6

ok.6:
	%tmp.1418 = getelementptr %A2I, %A2I* %tmp.1416, i32 0, i32 0
	%tmp.1419 = load %A2I_vtable*, %A2I_vtable** %tmp.1418
	%tmp.1420 = getelementptr %A2I_vtable, %A2I_vtable* %tmp.1419, i32 0, i32 10
	%tmp.1421 = load i32 (%A2I*,%String*) *, i32 (%A2I*,%String*) ** %tmp.1420
conform
conform
	%tmp.1422 = call i32(%A2I*, %String*) %tmp.1421( %A2I* %tmp.1416, %String* %tmp.1415 )
conform
	%tmp.1423 = sub i32 0, %tmp.1422
conform
	store i32 %tmp.1423, i32* %tmp.1387
	br label %end.21

false.21:
cond
	%tmp.1424 = alloca i32
eq
dispatch
Integer Constant
Integer Constant
Object
	%tmp.1425 = load %String*, %String** %tmp.1377
	%tmp.1426 = icmp eq %String* %tmp.1425, null
	br i1 %tmp.1426, label %abort, label %ok.7

ok.7:
	%tmp.1427 = getelementptr %String, %String* %tmp.1425, i32 0, i32 0
	%tmp.1428 = load %String_vtable*, %String_vtable** %tmp.1427
	%tmp.1429 = getelementptr %String_vtable, %String_vtable* %tmp.1428, i32 0, i32 9
	%tmp.1430 = load %String* (%String*,i32,i32) *, %String* (%String*,i32,i32) ** %tmp.1429
conform
conform
conform
	%tmp.1431 = call %String*(%String*, i32, i32) %tmp.1430( %String* %tmp.1425, i32 0, i32 1 )
string_const
conform
	%tmp.1432 = getelementptr %String, %String* %tmp.1431, i32 0, i32 1
	%tmp.1433 = load i8*, i8** %tmp.1432
conform
	%tmp.1434 = getelementptr %String, %String* @String.13, i32 0, i32 1
	%tmp.1435 = load i8*, i8** %tmp.1434
	%tmp.1436 = call i32(i8*, i8*) @strcmp( i8* %tmp.1433, i8* %tmp.1435 )
	%tmp.1437 = icmp eq i32 %tmp.1436, 0
	br i1 %tmp.1437, label %true.22, label %false.22

true.22:
dispatch
dispatch
Integer Constant
sub
dispatch
Object
	%tmp.1438 = load %String*, %String** %tmp.1377
	%tmp.1439 = icmp eq %String* %tmp.1438, null
	br i1 %tmp.1439, label %abort, label %ok.8

ok.8:
	%tmp.1440 = getelementptr %String, %String* %tmp.1438, i32 0, i32 0
	%tmp.1441 = load %String_vtable*, %String_vtable** %tmp.1440
	%tmp.1442 = getelementptr %String_vtable, %String_vtable* %tmp.1441, i32 0, i32 7
	%tmp.1443 = load i32 (%String*) *, i32 (%String*) ** %tmp.1442
conform
	%tmp.1444 = call i32(%String*) %tmp.1443( %String* %tmp.1438 )
Integer Constant
conform
conform
	%tmp.1445 = sub i32 %tmp.1444, 1
Object
	%tmp.1446 = load %String*, %String** %tmp.1377
	%tmp.1447 = icmp eq %String* %tmp.1446, null
	br i1 %tmp.1447, label %abort, label %ok.9

ok.9:
	%tmp.1448 = getelementptr %String, %String* %tmp.1446, i32 0, i32 0
	%tmp.1449 = load %String_vtable*, %String_vtable** %tmp.1448
	%tmp.1450 = getelementptr %String_vtable, %String_vtable* %tmp.1449, i32 0, i32 9
	%tmp.1451 = load %String* (%String*,i32,i32) *, %String* (%String*,i32,i32) ** %tmp.1450
conform
conform
conform
	%tmp.1452 = call %String*(%String*, i32, i32) %tmp.1451( %String* %tmp.1446, i32 1, i32 %tmp.1445 )
Object
	%tmp.1453 = load %A2I*, %A2I** %tmp.1376
	%tmp.1454 = icmp eq %A2I* %tmp.1453, null
	br i1 %tmp.1454, label %abort, label %ok.10

ok.10:
	%tmp.1455 = getelementptr %A2I, %A2I* %tmp.1453, i32 0, i32 0
	%tmp.1456 = load %A2I_vtable*, %A2I_vtable** %tmp.1455
	%tmp.1457 = getelementptr %A2I_vtable, %A2I_vtable* %tmp.1456, i32 0, i32 10
	%tmp.1458 = load i32 (%A2I*,%String*) *, i32 (%A2I*,%String*) ** %tmp.1457
conform
conform
	%tmp.1459 = call i32(%A2I*, %String*) %tmp.1458( %A2I* %tmp.1453, %String* %tmp.1452 )
conform
	store i32 %tmp.1459, i32* %tmp.1424
	br label %end.22

false.22:
dispatch
Object
	%tmp.1460 = load %String*, %String** %tmp.1377
Object
	%tmp.1461 = load %A2I*, %A2I** %tmp.1376
	%tmp.1462 = icmp eq %A2I* %tmp.1461, null
	br i1 %tmp.1462, label %abort, label %ok.11

ok.11:
	%tmp.1463 = getelementptr %A2I, %A2I* %tmp.1461, i32 0, i32 0
	%tmp.1464 = load %A2I_vtable*, %A2I_vtable** %tmp.1463
	%tmp.1465 = getelementptr %A2I_vtable, %A2I_vtable* %tmp.1464, i32 0, i32 10
	%tmp.1466 = load i32 (%A2I*,%String*) *, i32 (%A2I*,%String*) ** %tmp.1465
conform
conform
	%tmp.1467 = call i32(%A2I*, %String*) %tmp.1466( %A2I* %tmp.1461, %String* %tmp.1460 )
conform
	store i32 %tmp.1467, i32* %tmp.1424
	br label %end.22

end.22:
	%tmp.1468 = load i32, i32* %tmp.1424
conform
	store i32 %tmp.1468, i32* %tmp.1387
	br label %end.21

end.21:
	%tmp.1469 = load i32, i32* %tmp.1387
conform
	store i32 %tmp.1469, i32* %tmp.1378
	br label %end.20

end.20:
	%tmp.1470 = load i32, i32* %tmp.1378
	ret i32 %tmp.1470

abort:
	call void @abort(  )
	unreachable
}

method
define i32 @A2I_a2i_aux(%A2I* %self, %String* %s) {

entry:
	%tmp.1471 = alloca %A2I*
conform
	store %A2I* %self, %A2I** %tmp.1471
	%tmp.1472 = alloca %String*
conform
	store %String* %s, %String** %tmp.1472
let
Integer Constant
	%tmp.1473 = alloca i32
conform
	store i32 0, i32* %tmp.1473
block
let
dispatch
Object
	%tmp.1474 = load %String*, %String** %tmp.1472
	%tmp.1475 = icmp eq %String* %tmp.1474, null
	br i1 %tmp.1475, label %abort, label %ok.12

ok.12:
	%tmp.1476 = getelementptr %String, %String* %tmp.1474, i32 0, i32 0
	%tmp.1477 = load %String_vtable*, %String_vtable** %tmp.1476
	%tmp.1478 = getelementptr %String_vtable, %String_vtable* %tmp.1477, i32 0, i32 7
	%tmp.1479 = load i32 (%String*) *, i32 (%String*) ** %tmp.1478
conform
	%tmp.1480 = call i32(%String*) %tmp.1479( %String* %tmp.1474 )
	%tmp.1481 = alloca i32
conform
	store i32 %tmp.1480, i32* %tmp.1481
let
Integer Constant
	%tmp.1482 = alloca i32
conform
	store i32 0, i32* %tmp.1482
loop
	br label %loop.23

loop.23:
lt
Object
	%tmp.1483 = load i32, i32* %tmp.1482
Object
	%tmp.1484 = load i32, i32* %tmp.1481
conform
conform
	%tmp.1485 = icmp slt i32 %tmp.1483, %tmp.1484
	br i1 %tmp.1485, label %true.23, label %false.23

true.23:
block
assign
plus
mul
Object
	%tmp.1486 = load i32, i32* %tmp.1473
Integer Constant
conform
conform
	%tmp.1487 = mul i32 %tmp.1486, 10
dispatch
dispatch
Object
	%tmp.1488 = load i32, i32* %tmp.1482
Integer Constant
Object
	%tmp.1489 = load %String*, %String** %tmp.1472
	%tmp.1490 = icmp eq %String* %tmp.1489, null
	br i1 %tmp.1490, label %abort, label %ok.13

ok.13:
	%tmp.1491 = getelementptr %String, %String* %tmp.1489, i32 0, i32 0
	%tmp.1492 = load %String_vtable*, %String_vtable** %tmp.1491
	%tmp.1493 = getelementptr %String_vtable, %String_vtable* %tmp.1492, i32 0, i32 9
	%tmp.1494 = load %String* (%String*,i32,i32) *, %String* (%String*,i32,i32) ** %tmp.1493
conform
conform
conform
	%tmp.1495 = call %String*(%String*, i32, i32) %tmp.1494( %String* %tmp.1489, i32 %tmp.1488, i32 1 )
Object
	%tmp.1496 = load %A2I*, %A2I** %tmp.1471
	%tmp.1497 = icmp eq %A2I* %tmp.1496, null
	br i1 %tmp.1497, label %abort, label %ok.14

ok.14:
	%tmp.1498 = getelementptr %A2I, %A2I* %tmp.1496, i32 0, i32 0
	%tmp.1499 = load %A2I_vtable*, %A2I_vtable** %tmp.1498
	%tmp.1500 = getelementptr %A2I_vtable, %A2I_vtable* %tmp.1499, i32 0, i32 7
	%tmp.1501 = load i32 (%A2I*,%String*) *, i32 (%A2I*,%String*) ** %tmp.1500
conform
conform
	%tmp.1502 = call i32(%A2I*, %String*) %tmp.1501( %A2I* %tmp.1496, %String* %tmp.1495 )
conform
conform
	%tmp.1503 = add i32 %tmp.1487, %tmp.1502
conform
	store i32 %tmp.1503, i32* %tmp.1473
assign
plus
Object
	%tmp.1504 = load i32, i32* %tmp.1482
Integer Constant
conform
conform
	%tmp.1505 = add i32 %tmp.1504, 1
conform
	store i32 %tmp.1505, i32* %tmp.1482
	br label %loop.23

false.23:
Object
	%tmp.1506 = load i32, i32* %tmp.1473
	ret i32 %tmp.1506

abort:
	call void @abort(  )
	unreachable
}

method
define %String* @A2I_i2a(%A2I* %self, i32 %i) {

entry:
	%tmp.1507 = alloca %A2I*
conform
	store %A2I* %self, %A2I** %tmp.1507
	%tmp.1508 = alloca i32
conform
	store i32 %i, i32* %tmp.1508
cond
	%tmp.1509 = alloca %String*
eq
Object
	%tmp.1510 = load i32, i32* %tmp.1508
Integer Constant
	%tmp.1511 = icmp eq i32 %tmp.1510, 0
	br i1 %tmp.1511, label %true.24, label %false.24

true.24:
string_const
conform
	store %String* @String.1, %String** %tmp.1509
	br label %end.24

false.24:
cond
	%tmp.1512 = alloca %String*
lt
Integer Constant
Object
	%tmp.1513 = load i32, i32* %tmp.1508
conform
conform
	%tmp.1514 = icmp slt i32 0, %tmp.1513
	br i1 %tmp.1514, label %true.25, label %false.25

true.25:
dispatch
Object
	%tmp.1515 = load i32, i32* %tmp.1508
Object
	%tmp.1516 = load %A2I*, %A2I** %tmp.1507
	%tmp.1517 = icmp eq %A2I* %tmp.1516, null
	br i1 %tmp.1517, label %abort, label %ok.15

ok.15:
	%tmp.1518 = getelementptr %A2I, %A2I* %tmp.1516, i32 0, i32 0
	%tmp.1519 = load %A2I_vtable*, %A2I_vtable** %tmp.1518
	%tmp.1520 = getelementptr %A2I_vtable, %A2I_vtable* %tmp.1519, i32 0, i32 12
	%tmp.1521 = load %String* (%A2I*,i32) *, %String* (%A2I*,i32) ** %tmp.1520
conform
conform
	%tmp.1522 = call %String*(%A2I*, i32) %tmp.1521( %A2I* %tmp.1516, i32 %tmp.1515 )
conform
	store %String* %tmp.1522, %String** %tmp.1512
	br label %end.25

false.25:
dispatch
dispatch
mul
Object
	%tmp.1523 = load i32, i32* %tmp.1508
neg
Integer Constant
conform
	%tmp.1524 = sub i32 0, 1
conform
conform
	%tmp.1525 = mul i32 %tmp.1523, %tmp.1524
Object
	%tmp.1526 = load %A2I*, %A2I** %tmp.1507
	%tmp.1527 = icmp eq %A2I* %tmp.1526, null
	br i1 %tmp.1527, label %abort, label %ok.16

ok.16:
	%tmp.1528 = getelementptr %A2I, %A2I* %tmp.1526, i32 0, i32 0
	%tmp.1529 = load %A2I_vtable*, %A2I_vtable** %tmp.1528
	%tmp.1530 = getelementptr %A2I_vtable, %A2I_vtable* %tmp.1529, i32 0, i32 12
	%tmp.1531 = load %String* (%A2I*,i32) *, %String* (%A2I*,i32) ** %tmp.1530
conform
conform
	%tmp.1532 = call %String*(%A2I*, i32) %tmp.1531( %A2I* %tmp.1526, i32 %tmp.1525 )
string_const
	%tmp.1533 = icmp eq %String* @String.12, null
	br i1 %tmp.1533, label %abort, label %ok.17

ok.17:
	%tmp.1534 = getelementptr %String, %String* @String.12, i32 0, i32 0
	%tmp.1535 = load %String_vtable*, %String_vtable** %tmp.1534
	%tmp.1536 = getelementptr %String_vtable, %String_vtable* %tmp.1535, i32 0, i32 8
	%tmp.1537 = load %String* (%String*,%String*) *, %String* (%String*,%String*) ** %tmp.1536
conform
conform
	%tmp.1538 = call %String*(%String*, %String*) %tmp.1537( %String* @String.12, %String* %tmp.1532 )
conform
	store %String* %tmp.1538, %String** %tmp.1512
	br label %end.25

end.25:
	%tmp.1539 = load %String*, %String** %tmp.1512
conform
	store %String* %tmp.1539, %String** %tmp.1509
	br label %end.24

end.24:
	%tmp.1540 = load %String*, %String** %tmp.1509
	ret %String* %tmp.1540

abort:
	call void @abort(  )
	unreachable
}

method
define %String* @A2I_i2a_aux(%A2I* %self, i32 %i) {

entry:
	%tmp.1541 = alloca %A2I*
conform
	store %A2I* %self, %A2I** %tmp.1541
	%tmp.1542 = alloca i32
conform
	store i32 %i, i32* %tmp.1542
cond
	%tmp.1543 = alloca %String*
eq
Object
	%tmp.1544 = load i32, i32* %tmp.1542
Integer Constant
	%tmp.1545 = icmp eq i32 %tmp.1544, 0
	br i1 %tmp.1545, label %true.26, label %false.26

true.26:
string_const
conform
	store %String* @String.11, %String** %tmp.1543
	br label %end.26

false.26:
let
div
Object
	%tmp.1546 = load i32, i32* %tmp.1542
Integer Constant
conform
conform
	%tmp.1547 = icmp eq i32 10, 0
	br i1 %tmp.1547, label %abort, label %ok.18

ok.18:
	%tmp.1548 = sdiv i32 %tmp.1546, 10
	%tmp.1549 = alloca i32
conform
	store i32 %tmp.1548, i32* %tmp.1549
dispatch
dispatch
sub
Object
	%tmp.1550 = load i32, i32* %tmp.1542
mul
Object
	%tmp.1551 = load i32, i32* %tmp.1549
Integer Constant
conform
conform
	%tmp.1552 = mul i32 %tmp.1551, 10
conform
conform
	%tmp.1553 = sub i32 %tmp.1550, %tmp.1552
Object
	%tmp.1554 = load %A2I*, %A2I** %tmp.1541
	%tmp.1555 = icmp eq %A2I* %tmp.1554, null
	br i1 %tmp.1555, label %abort, label %ok.19

ok.19:
	%tmp.1556 = getelementptr %A2I, %A2I* %tmp.1554, i32 0, i32 0
	%tmp.1557 = load %A2I_vtable*, %A2I_vtable** %tmp.1556
	%tmp.1558 = getelementptr %A2I_vtable, %A2I_vtable* %tmp.1557, i32 0, i32 8
	%tmp.1559 = load %String* (%A2I*,i32) *, %String* (%A2I*,i32) ** %tmp.1558
conform
conform
	%tmp.1560 = call %String*(%A2I*, i32) %tmp.1559( %A2I* %tmp.1554, i32 %tmp.1553 )
dispatch
Object
	%tmp.1561 = load i32, i32* %tmp.1549
Object
	%tmp.1562 = load %A2I*, %A2I** %tmp.1541
	%tmp.1563 = icmp eq %A2I* %tmp.1562, null
	br i1 %tmp.1563, label %abort, label %ok.20

ok.20:
	%tmp.1564 = getelementptr %A2I, %A2I* %tmp.1562, i32 0, i32 0
	%tmp.1565 = load %A2I_vtable*, %A2I_vtable** %tmp.1564
	%tmp.1566 = getelementptr %A2I_vtable, %A2I_vtable* %tmp.1565, i32 0, i32 12
	%tmp.1567 = load %String* (%A2I*,i32) *, %String* (%A2I*,i32) ** %tmp.1566
conform
conform
	%tmp.1568 = call %String*(%A2I*, i32) %tmp.1567( %A2I* %tmp.1562, i32 %tmp.1561 )
	%tmp.1569 = icmp eq %String* %tmp.1568, null
	br i1 %tmp.1569, label %abort, label %ok.21

ok.21:
	%tmp.1570 = getelementptr %String, %String* %tmp.1568, i32 0, i32 0
	%tmp.1571 = load %String_vtable*, %String_vtable** %tmp.1570
	%tmp.1572 = getelementptr %String_vtable, %String_vtable* %tmp.1571, i32 0, i32 8
	%tmp.1573 = load %String* (%String*,%String*) *, %String* (%String*,%String*) ** %tmp.1572
conform
conform
	%tmp.1574 = call %String*(%String*, %String*) %tmp.1573( %String* %tmp.1568, %String* %tmp.1560 )
conform
	store %String* %tmp.1574, %String** %tmp.1543
	br label %end.26

end.26:
	%tmp.1575 = load %String*, %String** %tmp.1543
	ret %String* %tmp.1575

abort:
	call void @abort(  )
	unreachable
}

define %A2I* @A2I_new() {

entry:
	%tmp.1576 = getelementptr %A2I_vtable, %A2I_vtable* @A2I_vtable_prototype, i32 0, i32 1
	%tmp.1577 = load i32, i32* %tmp.1576
	%tmp.1578 = call i8*(i32) @malloc( i32 %tmp.1577 )
	%tmp.1579 = bitcast i8* %tmp.1578 to %A2I*
	%tmp.1580 = getelementptr %A2I, %A2I* %tmp.1579, i32 0, i32 0
	store %A2I_vtable* @A2I_vtable_prototype, %A2I_vtable** %tmp.1580
	%tmp.1581 = alloca %A2I*
	store %A2I* %tmp.1579, %A2I** %tmp.1581
method
method
method
method
method
method
method
method
method
	ret %A2I* %tmp.1579

abort:
	call void @abort(  )
	unreachable
}


Script done on 2021-10-26 23:57:46-0700
