declare i32 @strcmp(i8*, i8*)
declare i32 @printf(i8*, ...)
declare void @abort()
declare i8* @malloc(i32)
declare %Object* @Object_new()
declare %Object* @Object_abort(%Object*)
declare %String* @Object_type_name(%Object*)
declare %Object* @Object_copy(%Object*)
declare %IO* @IO_new()
declare %IO* @IO_out_string(%IO*, %String*)
declare %IO* @IO_out_int(%IO*, i32)
declare %String* @IO_in_string(%IO*)
declare i32 @IO_in_int(%IO*)
declare %String* @String_new()
declare i32 @String_length(%String*)
declare %String* @String_concat(%String*, %String*)
declare %String* @String_substr(%String*, i32, i32)
declare %Int* @Int_new()
declare void @Int_init(%Int*, i32)
declare %Bool* @Bool_new()
declare void @Bool_init(%Bool*, i1)
@str.Object = internal constant [7 x i8] c"Object\00", align 1
%Object = type {
	%Object_vtable*
}

%Object_vtable = type {
	i32,
	i32,
	i8*,
	%Object* () *,
	%Object* (%Object*) *,
	%String* (%Object*) *,
	%Object* (%Object*) *
}

@Object_vtable_prototype = constant %Object_vtable {
	i32 0,
	i32 ptrtoint (%Object* getelementptr (%Object, %Object* null, i32 1) to i32),
	i8* getelementptr ([7 x i8], [7 x i8]* @str.Object, i32 0, i32 0),
	%Object* () * @Object_new,
	%Object* (%Object*) * @Object_abort,
	%String* (%Object*) * @Object_type_name,
	%Object* (%Object*) * @Object_copy
}

@str.Int = internal constant [4 x i8] c"Int\00", align 1
%Int = type {
	%Int_vtable*,
	i32
}

%Int_vtable = type {
	i32,
	i32,
	i8*,
	%Int* () *,
	%Object* (%Int*) *,
	%String* (%Int*) *,
	%Int* (%Int*) *
}

@Int_vtable_prototype = constant %Int_vtable {
	i32 1,
	i32 ptrtoint (%Int* getelementptr (%Int, %Int* null, i32 1) to i32),
	i8* getelementptr ([4 x i8], [4 x i8]* @str.Int, i32 0, i32 0),
	%Int* () * @Int_new,
	%Object* (%Int*) * bitcast (%Object* (%Object*) * @Object_abort to %Object* (%Int*) *),
	%String* (%Int*) * bitcast (%String* (%Object*) * @Object_type_name to %String* (%Int*) *),
	%Int* (%Int*) * bitcast (%Object* (%Object*) * @Object_copy to %Int* (%Int*) *)
}

@str.Bool = internal constant [5 x i8] c"Bool\00", align 1
%Bool = type {
	%Bool_vtable*,
	i1
}

%Bool_vtable = type {
	i32,
	i32,
	i8*,
	%Bool* () *,
	%Object* (%Bool*) *,
	%String* (%Bool*) *,
	%Bool* (%Bool*) *
}

@Bool_vtable_prototype = constant %Bool_vtable {
	i32 2,
	i32 ptrtoint (%Bool* getelementptr (%Bool, %Bool* null, i32 1) to i32),
	i8* getelementptr ([5 x i8], [5 x i8]* @str.Bool, i32 0, i32 0),
	%Bool* () * @Bool_new,
	%Object* (%Bool*) * bitcast (%Object* (%Object*) * @Object_abort to %Object* (%Bool*) *),
	%String* (%Bool*) * bitcast (%String* (%Object*) * @Object_type_name to %String* (%Bool*) *),
	%Bool* (%Bool*) * bitcast (%Object* (%Object*) * @Object_copy to %Bool* (%Bool*) *)
}

@str.String = internal constant [7 x i8] c"String\00", align 1
%String = type {
	%String_vtable*,
	i8*
}

%String_vtable = type {
	i32,
	i32,
	i8*,
	%String* () *,
	%Object* (%String*) *,
	%String* (%String*) *,
	%String* (%String*) *,
	i32 (%String*) *,
	%String* (%String*,%String*) *,
	%String* (%String*,i32,i32) *
}

@String_vtable_prototype = constant %String_vtable {
	i32 3,
	i32 ptrtoint (%String* getelementptr (%String, %String* null, i32 1) to i32),
	i8* getelementptr ([7 x i8], [7 x i8]* @str.String, i32 0, i32 0),
	%String* () * @String_new,
	%Object* (%String*) * bitcast (%Object* (%Object*) * @Object_abort to %Object* (%String*) *),
	%String* (%String*) * bitcast (%String* (%Object*) * @Object_type_name to %String* (%String*) *),
	%String* (%String*) * bitcast (%Object* (%Object*) * @Object_copy to %String* (%String*) *),
	i32 (%String*) * @String_length,
	%String* (%String*,%String*) * @String_concat,
	%String* (%String*,i32,i32) * @String_substr
}

@str.IO = internal constant [3 x i8] c"IO\00", align 1
%IO = type {
	%IO_vtable*
}

%IO_vtable = type {
	i32,
	i32,
	i8*,
	%IO* () *,
	%Object* (%IO*) *,
	%String* (%IO*) *,
	%IO* (%IO*) *,
	%IO* (%IO*,%String*) *,
	%IO* (%IO*,i32) *,
	%String* (%IO*) *,
	i32 (%IO*) *
}

@IO_vtable_prototype = constant %IO_vtable {
	i32 4,
	i32 ptrtoint (%IO* getelementptr (%IO, %IO* null, i32 1) to i32),
	i8* getelementptr ([3 x i8], [3 x i8]* @str.IO, i32 0, i32 0),
	%IO* () * @IO_new,
	%Object* (%IO*) * bitcast (%Object* (%Object*) * @Object_abort to %Object* (%IO*) *),
	%String* (%IO*) * bitcast (%String* (%Object*) * @Object_type_name to %String* (%IO*) *),
	%IO* (%IO*) * bitcast (%Object* (%Object*) * @Object_copy to %IO* (%IO*) *),
	%IO* (%IO*,%String*) * @IO_out_string,
	%IO* (%IO*,i32) * @IO_out_int,
	%String* (%IO*) * @IO_in_string,
	i32 (%IO*) * @IO_in_int
}

@str.Main = internal constant [5 x i8] c"Main\00", align 1
%Main = type {
	%Main_vtable*,
	i32
}

%Main_vtable = type {
	i32,
	i32,
	i8*,
	%Main* () *,
	%Object* (%Main*) *,
	%String* (%Main*) *,
	%Main* (%Main*) *,
	%Main* (%Main*,%String*) *,
	%Main* (%Main*,i32) *,
	%String* (%Main*) *,
	i32 (%Main*) *,
	i1 (%Main*,%String*) *,
	%Main* (%Main*) *
}

@Main_vtable_prototype = constant %Main_vtable {
	i32 5,
	i32 ptrtoint (%Main* getelementptr (%Main, %Main* null, i32 1) to i32),
	i8* getelementptr ([5 x i8], [5 x i8]* @str.Main, i32 0, i32 0),
	%Main* () * @Main_new,
	%Object* (%Main*) * bitcast (%Object* (%Object*) * @Object_abort to %Object* (%Main*) *),
	%String* (%Main*) * bitcast (%String* (%Object*) * @Object_type_name to %String* (%Main*) *),
	%Main* (%Main*) * bitcast (%Object* (%Object*) * @Object_copy to %Main* (%Main*) *),
	%Main* (%Main*,%String*) * bitcast (%IO* (%IO*,%String*) * @IO_out_string to %Main* (%Main*,%String*) *),
	%Main* (%Main*,i32) * bitcast (%IO* (%IO*,i32) * @IO_out_int to %Main* (%Main*,i32) *),
	%String* (%Main*) * bitcast (%String* (%IO*) * @IO_in_string to %String* (%Main*) *),
	i32 (%Main*) * bitcast (i32 (%IO*) * @IO_in_int to i32 (%Main*) *),
	i1 (%Main*,%String*) * @Main_pal,
	%Main* (%Main*) * @Main_main
}

@str.4 = internal constant [14 x i8] c"<basic class>\00", align 1
@String.4 = constant %String {
	%String_vtable* @String_vtable_prototype,
	i8* getelementptr ([14 x i8], [14 x i8]* @str.4, i32 0, i32 0)
}

@str.3 = internal constant [27 x i8] c"that was not a palindrome\0A\00", align 1
@String.3 = constant %String {
	%String_vtable* @String_vtable_prototype,
	i8* getelementptr ([27 x i8], [27 x i8]* @str.3, i32 0, i32 0)
}

@str.2 = internal constant [23 x i8] c"that was a palindrome\0A\00", align 1
@String.2 = constant %String {
	%String_vtable* @String_vtable_prototype,
	i8* getelementptr ([23 x i8], [23 x i8]* @str.2, i32 0, i32 0)
}

@str.1 = internal constant [16 x i8] c"enter a string\0A\00", align 1
@String.1 = constant %String {
	%String_vtable* @String_vtable_prototype,
	i8* getelementptr ([16 x i8], [16 x i8]* @str.1, i32 0, i32 0)
}

@str.0 = internal constant [14 x i8] c"palindrome.cl\00", align 1
@String.0 = constant %String {
	%String_vtable* @String_vtable_prototype,
	i8* getelementptr ([14 x i8], [14 x i8]* @str.0, i32 0, i32 0)
}

define i32 @main() {
entry:
	%main.obj = call %Main*() @Main_new( )
	%main.retval = call %Main*(%Main*) @Main_main( %Main* %main.obj )
	ret i32 0
}

define i1 @Main_pal(%Main* %self, %String* %s) {

entry:
	%tmp.0 = alloca %Main*
	store %Main* %self, %Main** %tmp.0
	%tmp.1 = alloca %String*
	store %String* %s, %String** %tmp.1
	%tmp.2 = alloca i1
	%tmp.3 = load %String*, %String** %tmp.1
	%tmp.4 = icmp eq %String* %tmp.3, null
	br i1 %tmp.4, label %abort, label %ok.0

ok.0:
	%tmp.5 = getelementptr %String, %String* %tmp.3, i32 0, i32 0
	%tmp.6 = load %String_vtable*, %String_vtable** %tmp.5
	%tmp.7 = getelementptr %String_vtable, %String_vtable* %tmp.6, i32 0, i32 7
	%tmp.8 = load i32 (%String*) *, i32 (%String*) ** %tmp.7
	%tmp.9 = call i32(%String*) %tmp.8( %String* %tmp.3 )
	%tmp.10 = icmp eq i32 %tmp.9, 0
	br i1 %tmp.10, label %true.0, label %false.0

true.0:
	store i1 true, i1* %tmp.2
	br label %end.0

false.0:
	%tmp.11 = alloca i1
	%tmp.12 = load %String*, %String** %tmp.1
	%tmp.13 = icmp eq %String* %tmp.12, null
	br i1 %tmp.13, label %abort, label %ok.1

ok.1:
	%tmp.14 = getelementptr %String, %String* %tmp.12, i32 0, i32 0
	%tmp.15 = load %String_vtable*, %String_vtable** %tmp.14
	%tmp.16 = getelementptr %String_vtable, %String_vtable* %tmp.15, i32 0, i32 7
	%tmp.17 = load i32 (%String*) *, i32 (%String*) ** %tmp.16
	%tmp.18 = call i32(%String*) %tmp.17( %String* %tmp.12 )
	%tmp.19 = icmp eq i32 %tmp.18, 1
	br i1 %tmp.19, label %true.1, label %false.1

true.1:
	store i1 true, i1* %tmp.11
	br label %end.1

false.1:
	%tmp.20 = alloca i1
	%tmp.21 = load %String*, %String** %tmp.1
	%tmp.22 = icmp eq %String* %tmp.21, null
	br i1 %tmp.22, label %abort, label %ok.2

ok.2:
	%tmp.23 = getelementptr %String, %String* %tmp.21, i32 0, i32 0
	%tmp.24 = load %String_vtable*, %String_vtable** %tmp.23
	%tmp.25 = getelementptr %String_vtable, %String_vtable* %tmp.24, i32 0, i32 9
	%tmp.26 = load %String* (%String*,i32,i32) *, %String* (%String*,i32,i32) ** %tmp.25
	%tmp.27 = call %String*(%String*, i32, i32) %tmp.26( %String* %tmp.21, i32 0, i32 1 )
	%tmp.28 = load %String*, %String** %tmp.1
	%tmp.29 = icmp eq %String* %tmp.28, null
	br i1 %tmp.29, label %abort, label %ok.4

ok.4:
	%tmp.30 = getelementptr %String, %String* %tmp.28, i32 0, i32 0
	%tmp.31 = load %String_vtable*, %String_vtable** %tmp.30
	%tmp.32 = getelementptr %String_vtable, %String_vtable* %tmp.31, i32 0, i32 7
	%tmp.33 = load i32 (%String*) *, i32 (%String*) ** %tmp.32
	%tmp.34 = call i32(%String*) %tmp.33( %String* %tmp.28 )
	%tmp.35 = sub i32 %tmp.34, 1
	%tmp.36 = load %String*, %String** %tmp.1
	%tmp.37 = icmp eq %String* %tmp.36, null
	br i1 %tmp.37, label %abort, label %ok.3

ok.3:
	%tmp.38 = getelementptr %String, %String* %tmp.36, i32 0, i32 0
	%tmp.39 = load %String_vtable*, %String_vtable** %tmp.38
	%tmp.40 = getelementptr %String_vtable, %String_vtable* %tmp.39, i32 0, i32 9
	%tmp.41 = load %String* (%String*,i32,i32) *, %String* (%String*,i32,i32) ** %tmp.40
	%tmp.42 = call %String*(%String*, i32, i32) %tmp.41( %String* %tmp.36, i32 %tmp.35, i32 1 )
	%tmp.46 = getelementptr %String, %String* %tmp.27, i32 0, i32 1
	%tmp.44 = load i8*, i8** %tmp.46
	%tmp.47 = getelementptr %String, %String* %tmp.42, i32 0, i32 1
	%tmp.45 = load i8*, i8** %tmp.47
	%tmp.48 = call i32(i8*, i8*) @strcmp( i8* %tmp.44, i8* %tmp.45 )
	%tmp.43 = icmp eq i32 %tmp.48, 0
	br i1 %tmp.43, label %true.2, label %false.2

true.2:
	%tmp.49 = load %String*, %String** %tmp.1
	%tmp.50 = icmp eq %String* %tmp.49, null
	br i1 %tmp.50, label %abort, label %ok.7

ok.7:
	%tmp.51 = getelementptr %String, %String* %tmp.49, i32 0, i32 0
	%tmp.52 = load %String_vtable*, %String_vtable** %tmp.51
	%tmp.53 = getelementptr %String_vtable, %String_vtable* %tmp.52, i32 0, i32 7
	%tmp.54 = load i32 (%String*) *, i32 (%String*) ** %tmp.53
	%tmp.55 = call i32(%String*) %tmp.54( %String* %tmp.49 )
	%tmp.56 = sub i32 %tmp.55, 2
	%tmp.57 = load %String*, %String** %tmp.1
	%tmp.58 = icmp eq %String* %tmp.57, null
	br i1 %tmp.58, label %abort, label %ok.6

ok.6:
	%tmp.59 = getelementptr %String, %String* %tmp.57, i32 0, i32 0
	%tmp.60 = load %String_vtable*, %String_vtable** %tmp.59
	%tmp.61 = getelementptr %String_vtable, %String_vtable* %tmp.60, i32 0, i32 9
	%tmp.62 = load %String* (%String*,i32,i32) *, %String* (%String*,i32,i32) ** %tmp.61
	%tmp.63 = call %String*(%String*, i32, i32) %tmp.62( %String* %tmp.57, i32 1, i32 %tmp.56 )
	%tmp.64 = load %Main*, %Main** %tmp.0
	%tmp.65 = icmp eq %Main* %tmp.64, null
	br i1 %tmp.65, label %abort, label %ok.5

ok.5:
	%tmp.66 = getelementptr %Main, %Main* %tmp.64, i32 0, i32 0
	%tmp.67 = load %Main_vtable*, %Main_vtable** %tmp.66
	%tmp.68 = getelementptr %Main_vtable, %Main_vtable* %tmp.67, i32 0, i32 11
	%tmp.69 = load i1 (%Main*,%String*) *, i1 (%Main*,%String*) ** %tmp.68
	%tmp.70 = call i1(%Main*, %String*) %tmp.69( %Main* %tmp.64, %String* %tmp.63 )
	store i1 %tmp.70, i1* %tmp.20
	br label %end.2

false.2:
	store i1 false, i1* %tmp.20
	br label %end.2

end.2:
	%tmp.71 = load i1, i1* %tmp.20
	store i1 %tmp.71, i1* %tmp.11
	br label %end.1

end.1:
	%tmp.72 = load i1, i1* %tmp.11
	store i1 %tmp.72, i1* %tmp.2
	br label %end.0

end.0:
	%tmp.73 = load i1, i1* %tmp.2
	ret i1 %tmp.73

abort:
	call void @abort(  )
	unreachable
}

define %Main* @Main_main(%Main* %self) {

entry:
	%tmp.74 = alloca %Main*
	store %Main* %self, %Main** %tmp.74
	%tmp.75 = sub i32 0, 1
	%tmp.76 = load %Main*, %Main** %tmp.74
	%tmp.77 = getelementptr %Main, %Main* %tmp.76, i32 0, i32 1
	store i32 %tmp.75, i32* %tmp.77
	%tmp.78 = load %Main*, %Main** %tmp.74
	%tmp.79 = icmp eq %Main* %tmp.78, null
	br i1 %tmp.79, label %abort, label %ok.8

ok.8:
	%tmp.80 = getelementptr %Main, %Main* %tmp.78, i32 0, i32 0
	%tmp.81 = load %Main_vtable*, %Main_vtable** %tmp.80
	%tmp.82 = getelementptr %Main_vtable, %Main_vtable* %tmp.81, i32 0, i32 7
	%tmp.83 = load %Main* (%Main*,%String*) *, %Main* (%Main*,%String*) ** %tmp.82
	%tmp.84 = call %Main*(%Main*, %String*) %tmp.83( %Main* %tmp.78, %String* @String.1 )
	%tmp.85 = alloca %Main*
	%tmp.86 = load %Main*, %Main** %tmp.74
	%tmp.87 = icmp eq %Main* %tmp.86, null
	br i1 %tmp.87, label %abort, label %ok.10

ok.10:
	%tmp.88 = getelementptr %Main, %Main* %tmp.86, i32 0, i32 0
	%tmp.89 = load %Main_vtable*, %Main_vtable** %tmp.88
	%tmp.90 = getelementptr %Main_vtable, %Main_vtable* %tmp.89, i32 0, i32 9
	%tmp.91 = load %String* (%Main*) *, %String* (%Main*) ** %tmp.90
	%tmp.92 = call %String*(%Main*) %tmp.91( %Main* %tmp.86 )
	%tmp.93 = load %Main*, %Main** %tmp.74
	%tmp.94 = icmp eq %Main* %tmp.93, null
	br i1 %tmp.94, label %abort, label %ok.9

ok.9:
	%tmp.95 = getelementptr %Main, %Main* %tmp.93, i32 0, i32 0
	%tmp.96 = load %Main_vtable*, %Main_vtable** %tmp.95
	%tmp.97 = getelementptr %Main_vtable, %Main_vtable* %tmp.96, i32 0, i32 11
	%tmp.98 = load i1 (%Main*,%String*) *, i1 (%Main*,%String*) ** %tmp.97
	%tmp.99 = call i1(%Main*, %String*) %tmp.98( %Main* %tmp.93, %String* %tmp.92 )
	br i1 %tmp.99, label %true.3, label %false.3

true.3:
	%tmp.100 = load %Main*, %Main** %tmp.74
	%tmp.101 = icmp eq %Main* %tmp.100, null
	br i1 %tmp.101, label %abort, label %ok.11

ok.11:
	%tmp.102 = getelementptr %Main, %Main* %tmp.100, i32 0, i32 0
	%tmp.103 = load %Main_vtable*, %Main_vtable** %tmp.102
	%tmp.104 = getelementptr %Main_vtable, %Main_vtable* %tmp.103, i32 0, i32 7
	%tmp.105 = load %Main* (%Main*,%String*) *, %Main* (%Main*,%String*) ** %tmp.104
	%tmp.106 = call %Main*(%Main*, %String*) %tmp.105( %Main* %tmp.100, %String* @String.2 )
	store %Main* %tmp.106, %Main** %tmp.85
	br label %end.3

false.3:
	%tmp.107 = load %Main*, %Main** %tmp.74
	%tmp.108 = icmp eq %Main* %tmp.107, null
	br i1 %tmp.108, label %abort, label %ok.12

ok.12:
	%tmp.109 = getelementptr %Main, %Main* %tmp.107, i32 0, i32 0
	%tmp.110 = load %Main_vtable*, %Main_vtable** %tmp.109
	%tmp.111 = getelementptr %Main_vtable, %Main_vtable* %tmp.110, i32 0, i32 7
	%tmp.112 = load %Main* (%Main*,%String*) *, %Main* (%Main*,%String*) ** %tmp.111
	%tmp.113 = call %Main*(%Main*, %String*) %tmp.112( %Main* %tmp.107, %String* @String.3 )
	store %Main* %tmp.113, %Main** %tmp.85
	br label %end.3

end.3:
	%tmp.114 = load %Main*, %Main** %tmp.85
	ret %Main* %tmp.114

abort:
	call void @abort(  )
	unreachable
}

define %Main* @Main_new() {

entry:
	%tmp.115 = getelementptr %Main_vtable, %Main_vtable* @Main_vtable_prototype, i32 0, i32 1
	%tmp.116 = load i32, i32* %tmp.115
	%tmp.117 = call i8*(i32) @malloc( i32 %tmp.116 )
	%tmp.118 = bitcast i8* %tmp.117 to %Main*
	%tmp.119 = getelementptr %Main, %Main* %tmp.118, i32 0, i32 0
	store %Main_vtable* @Main_vtable_prototype, %Main_vtable** %tmp.119
	%tmp.120 = alloca %Main*
	store %Main* %tmp.118, %Main** %tmp.120
	%tmp.121 = getelementptr %Main, %Main* %tmp.118, i32 0, i32 1
	store i32 0, i32* %tmp.121
	ret %Main* %tmp.118

abort:
	call void @abort(  )
	unreachable
}

