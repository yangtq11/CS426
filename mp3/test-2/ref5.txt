declare i32 @strcmp(i8*, i8*)
declare i32 @printf(i8*, ...)
declare void @abort()
declare i8* @malloc(i32)
declare %Object* @Object_new()
declare %Object* @Object_abort(%Object*)
declare %String* @Object_type_name(%Object*)
declare %Object* @Object_copy(%Object*)
declare %IO* @IO_new()
declare %IO* @IO_out_string(%IO*, %String*)
declare %IO* @IO_out_int(%IO*, i32)
declare %String* @IO_in_string(%IO*)
declare i32 @IO_in_int(%IO*)
declare %String* @String_new()
declare i32 @String_length(%String*)
declare %String* @String_concat(%String*, %String*)
declare %String* @String_substr(%String*, i32, i32)
declare %Int* @Int_new()
declare void @Int_init(%Int*, i32)
declare %Bool* @Bool_new()
declare void @Bool_init(%Bool*, i1)
@str.Object = internal constant [7 x i8] c"Object\00", align 1
%Object = type {
	%Object_vtable*
}

%Object_vtable = type {
	i32,
	i32,
	i8*,
	%Object* () *,
	%Object* (%Object*) *,
	%String* (%Object*) *,
	%Object* (%Object*) *
}

@Object_vtable_prototype = constant %Object_vtable {
	i32 0,
	i32 ptrtoint (%Object* getelementptr (%Object, %Object* null, i32 1) to i32),
	i8* getelementptr ([7 x i8], [7 x i8]* @str.Object, i32 0, i32 0),
	%Object* () * @Object_new,
	%Object* (%Object*) * @Object_abort,
	%String* (%Object*) * @Object_type_name,
	%Object* (%Object*) * @Object_copy
}

@str.Int = internal constant [4 x i8] c"Int\00", align 1
%Int = type {
	%Int_vtable*,
	i32
}

%Int_vtable = type {
	i32,
	i32,
	i8*,
	%Int* () *,
	%Object* (%Int*) *,
	%String* (%Int*) *,
	%Int* (%Int*) *
}

@Int_vtable_prototype = constant %Int_vtable {
	i32 1,
	i32 ptrtoint (%Int* getelementptr (%Int, %Int* null, i32 1) to i32),
	i8* getelementptr ([4 x i8], [4 x i8]* @str.Int, i32 0, i32 0),
	%Int* () * @Int_new,
	%Object* (%Int*) * bitcast (%Object* (%Object*) * @Object_abort to %Object* (%Int*) *),
	%String* (%Int*) * bitcast (%String* (%Object*) * @Object_type_name to %String* (%Int*) *),
	%Int* (%Int*) * bitcast (%Object* (%Object*) * @Object_copy to %Int* (%Int*) *)
}

@str.Bool = internal constant [5 x i8] c"Bool\00", align 1
%Bool = type {
	%Bool_vtable*,
	i1
}

%Bool_vtable = type {
	i32,
	i32,
	i8*,
	%Bool* () *,
	%Object* (%Bool*) *,
	%String* (%Bool*) *,
	%Bool* (%Bool*) *
}

@Bool_vtable_prototype = constant %Bool_vtable {
	i32 2,
	i32 ptrtoint (%Bool* getelementptr (%Bool, %Bool* null, i32 1) to i32),
	i8* getelementptr ([5 x i8], [5 x i8]* @str.Bool, i32 0, i32 0),
	%Bool* () * @Bool_new,
	%Object* (%Bool*) * bitcast (%Object* (%Object*) * @Object_abort to %Object* (%Bool*) *),
	%String* (%Bool*) * bitcast (%String* (%Object*) * @Object_type_name to %String* (%Bool*) *),
	%Bool* (%Bool*) * bitcast (%Object* (%Object*) * @Object_copy to %Bool* (%Bool*) *)
}

@str.String = internal constant [7 x i8] c"String\00", align 1
%String = type {
	%String_vtable*,
	i8*
}

%String_vtable = type {
	i32,
	i32,
	i8*,
	%String* () *,
	%Object* (%String*) *,
	%String* (%String*) *,
	%String* (%String*) *,
	i32 (%String*) *,
	%String* (%String*,%String*) *,
	%String* (%String*,i32,i32) *
}

@String_vtable_prototype = constant %String_vtable {
	i32 3,
	i32 ptrtoint (%String* getelementptr (%String, %String* null, i32 1) to i32),
	i8* getelementptr ([7 x i8], [7 x i8]* @str.String, i32 0, i32 0),
	%String* () * @String_new,
	%Object* (%String*) * bitcast (%Object* (%Object*) * @Object_abort to %Object* (%String*) *),
	%String* (%String*) * bitcast (%String* (%Object*) * @Object_type_name to %String* (%String*) *),
	%String* (%String*) * bitcast (%Object* (%Object*) * @Object_copy to %String* (%String*) *),
	i32 (%String*) * @String_length,
	%String* (%String*,%String*) * @String_concat,
	%String* (%String*,i32,i32) * @String_substr
}

@str.IO = internal constant [3 x i8] c"IO\00", align 1
%IO = type {
	%IO_vtable*
}

%IO_vtable = type {
	i32,
	i32,
	i8*,
	%IO* () *,
	%Object* (%IO*) *,
	%String* (%IO*) *,
	%IO* (%IO*) *,
	%IO* (%IO*,%String*) *,
	%IO* (%IO*,i32) *,
	%String* (%IO*) *,
	i32 (%IO*) *
}

@IO_vtable_prototype = constant %IO_vtable {
	i32 4,
	i32 ptrtoint (%IO* getelementptr (%IO, %IO* null, i32 1) to i32),
	i8* getelementptr ([3 x i8], [3 x i8]* @str.IO, i32 0, i32 0),
	%IO* () * @IO_new,
	%Object* (%IO*) * bitcast (%Object* (%Object*) * @Object_abort to %Object* (%IO*) *),
	%String* (%IO*) * bitcast (%String* (%Object*) * @Object_type_name to %String* (%IO*) *),
	%IO* (%IO*) * bitcast (%Object* (%Object*) * @Object_copy to %IO* (%IO*) *),
	%IO* (%IO*,%String*) * @IO_out_string,
	%IO* (%IO*,i32) * @IO_out_int,
	%String* (%IO*) * @IO_in_string,
	i32 (%IO*) * @IO_in_int
}

@str.Bazz = internal constant [5 x i8] c"Bazz\00", align 1
%Bazz = type {
	%Bazz_vtable*,
	i32,
	%Foo*,
	%Object*
}

%Bazz_vtable = type {
	i32,
	i32,
	i8*,
	%Bazz* () *,
	%Object* (%Bazz*) *,
	%String* (%Bazz*) *,
	%Bazz* (%Bazz*) *,
	%Bazz* (%Bazz*,%String*) *,
	%Bazz* (%Bazz*,i32) *,
	%String* (%Bazz*) *,
	i32 (%Bazz*) *,
	i32 (%Bazz*) *,
	i32 (%Bazz*) *
}

@Bazz_vtable_prototype = constant %Bazz_vtable {
	i32 5,
	i32 ptrtoint (%Bazz* getelementptr (%Bazz, %Bazz* null, i32 1) to i32),
	i8* getelementptr ([5 x i8], [5 x i8]* @str.Bazz, i32 0, i32 0),
	%Bazz* () * @Bazz_new,
	%Object* (%Bazz*) * bitcast (%Object* (%Object*) * @Object_abort to %Object* (%Bazz*) *),
	%String* (%Bazz*) * bitcast (%String* (%Object*) * @Object_type_name to %String* (%Bazz*) *),
	%Bazz* (%Bazz*) * bitcast (%Object* (%Object*) * @Object_copy to %Bazz* (%Bazz*) *),
	%Bazz* (%Bazz*,%String*) * bitcast (%IO* (%IO*,%String*) * @IO_out_string to %Bazz* (%Bazz*,%String*) *),
	%Bazz* (%Bazz*,i32) * bitcast (%IO* (%IO*,i32) * @IO_out_int to %Bazz* (%Bazz*,i32) *),
	%String* (%Bazz*) * bitcast (%String* (%IO*) * @IO_in_string to %String* (%Bazz*) *),
	i32 (%Bazz*) * bitcast (i32 (%IO*) * @IO_in_int to i32 (%Bazz*) *),
	i32 (%Bazz*) * @Bazz_printh,
	i32 (%Bazz*) * @Bazz_doh
}

@str.Foo = internal constant [4 x i8] c"Foo\00", align 1
%Foo = type {
	%Foo_vtable*,
	i32,
	%Foo*,
	%Object*,
	%Razz*,
	i32
}

%Foo_vtable = type {
	i32,
	i32,
	i8*,
	%Foo* () *,
	%Object* (%Foo*) *,
	%String* (%Foo*) *,
	%Foo* (%Foo*) *,
	%Foo* (%Foo*,%String*) *,
	%Foo* (%Foo*,i32) *,
	%String* (%Foo*) *,
	i32 (%Foo*) *,
	i32 (%Foo*) *,
	i32 (%Foo*) *
}

@Foo_vtable_prototype = constant %Foo_vtable {
	i32 6,
	i32 ptrtoint (%Foo* getelementptr (%Foo, %Foo* null, i32 1) to i32),
	i8* getelementptr ([4 x i8], [4 x i8]* @str.Foo, i32 0, i32 0),
	%Foo* () * @Foo_new,
	%Object* (%Foo*) * bitcast (%Object* (%Object*) * @Object_abort to %Object* (%Foo*) *),
	%String* (%Foo*) * bitcast (%String* (%Object*) * @Object_type_name to %String* (%Foo*) *),
	%Foo* (%Foo*) * bitcast (%Object* (%Object*) * @Object_copy to %Foo* (%Foo*) *),
	%Foo* (%Foo*,%String*) * bitcast (%IO* (%IO*,%String*) * @IO_out_string to %Foo* (%Foo*,%String*) *),
	%Foo* (%Foo*,i32) * bitcast (%IO* (%IO*,i32) * @IO_out_int to %Foo* (%Foo*,i32) *),
	%String* (%Foo*) * bitcast (%String* (%IO*) * @IO_in_string to %String* (%Foo*) *),
	i32 (%Foo*) * bitcast (i32 (%IO*) * @IO_in_int to i32 (%Foo*) *),
	i32 (%Foo*) * bitcast (i32 (%Bazz*) * @Bazz_printh to i32 (%Foo*) *),
	i32 (%Foo*) * @Foo_doh
}

@str.Razz = internal constant [5 x i8] c"Razz\00", align 1
%Razz = type {
	%Razz_vtable*,
	i32,
	%Foo*,
	%Object*,
	%Razz*,
	i32,
	%Bar*,
	i32
}

%Razz_vtable = type {
	i32,
	i32,
	i8*,
	%Razz* () *,
	%Object* (%Razz*) *,
	%String* (%Razz*) *,
	%Razz* (%Razz*) *,
	%Razz* (%Razz*,%String*) *,
	%Razz* (%Razz*,i32) *,
	%String* (%Razz*) *,
	i32 (%Razz*) *,
	i32 (%Razz*) *,
	i32 (%Razz*) *
}

@Razz_vtable_prototype = constant %Razz_vtable {
	i32 7,
	i32 ptrtoint (%Razz* getelementptr (%Razz, %Razz* null, i32 1) to i32),
	i8* getelementptr ([5 x i8], [5 x i8]* @str.Razz, i32 0, i32 0),
	%Razz* () * @Razz_new,
	%Object* (%Razz*) * bitcast (%Object* (%Object*) * @Object_abort to %Object* (%Razz*) *),
	%String* (%Razz*) * bitcast (%String* (%Object*) * @Object_type_name to %String* (%Razz*) *),
	%Razz* (%Razz*) * bitcast (%Object* (%Object*) * @Object_copy to %Razz* (%Razz*) *),
	%Razz* (%Razz*,%String*) * bitcast (%IO* (%IO*,%String*) * @IO_out_string to %Razz* (%Razz*,%String*) *),
	%Razz* (%Razz*,i32) * bitcast (%IO* (%IO*,i32) * @IO_out_int to %Razz* (%Razz*,i32) *),
	%String* (%Razz*) * bitcast (%String* (%IO*) * @IO_in_string to %String* (%Razz*) *),
	i32 (%Razz*) * bitcast (i32 (%IO*) * @IO_in_int to i32 (%Razz*) *),
	i32 (%Razz*) * bitcast (i32 (%Bazz*) * @Bazz_printh to i32 (%Razz*) *),
	i32 (%Razz*) * bitcast (i32 (%Foo*) * @Foo_doh to i32 (%Razz*) *)
}

@str.Bar = internal constant [4 x i8] c"Bar\00", align 1
%Bar = type {
	%Bar_vtable*,
	i32,
	%Foo*,
	%Object*,
	%Razz*,
	i32,
	%Bar*,
	i32,
	i32,
	%Object*
}

%Bar_vtable = type {
	i32,
	i32,
	i8*,
	%Bar* () *,
	%Object* (%Bar*) *,
	%String* (%Bar*) *,
	%Bar* (%Bar*) *,
	%Bar* (%Bar*,%String*) *,
	%Bar* (%Bar*,i32) *,
	%String* (%Bar*) *,
	i32 (%Bar*) *,
	i32 (%Bar*) *,
	i32 (%Bar*) *
}

@Bar_vtable_prototype = constant %Bar_vtable {
	i32 8,
	i32 ptrtoint (%Bar* getelementptr (%Bar, %Bar* null, i32 1) to i32),
	i8* getelementptr ([4 x i8], [4 x i8]* @str.Bar, i32 0, i32 0),
	%Bar* () * @Bar_new,
	%Object* (%Bar*) * bitcast (%Object* (%Object*) * @Object_abort to %Object* (%Bar*) *),
	%String* (%Bar*) * bitcast (%String* (%Object*) * @Object_type_name to %String* (%Bar*) *),
	%Bar* (%Bar*) * bitcast (%Object* (%Object*) * @Object_copy to %Bar* (%Bar*) *),
	%Bar* (%Bar*,%String*) * bitcast (%IO* (%IO*,%String*) * @IO_out_string to %Bar* (%Bar*,%String*) *),
	%Bar* (%Bar*,i32) * bitcast (%IO* (%IO*,i32) * @IO_out_int to %Bar* (%Bar*,i32) *),
	%String* (%Bar*) * bitcast (%String* (%IO*) * @IO_in_string to %String* (%Bar*) *),
	i32 (%Bar*) * bitcast (i32 (%IO*) * @IO_in_int to i32 (%Bar*) *),
	i32 (%Bar*) * bitcast (i32 (%Bazz*) * @Bazz_printh to i32 (%Bar*) *),
	i32 (%Bar*) * bitcast (i32 (%Foo*) * @Foo_doh to i32 (%Bar*) *)
}

@str.Main = internal constant [5 x i8] c"Main\00", align 1
%Main = type {
	%Main_vtable*,
	%Bazz*,
	%Foo*,
	%Razz*,
	%Bar*
}

%Main_vtable = type {
	i32,
	i32,
	i8*,
	%Main* () *,
	%Object* (%Main*) *,
	%String* (%Main*) *,
	%Main* (%Main*) *,
	%String* (%Main*) *
}

@Main_vtable_prototype = constant %Main_vtable {
	i32 9,
	i32 ptrtoint (%Main* getelementptr (%Main, %Main* null, i32 1) to i32),
	i8* getelementptr ([5 x i8], [5 x i8]* @str.Main, i32 0, i32 0),
	%Main* () * @Main_new,
	%Object* (%Main*) * bitcast (%Object* (%Object*) * @Object_abort to %Object* (%Main*) *),
	%String* (%Main*) * bitcast (%String* (%Object*) * @Object_type_name to %String* (%Main*) *),
	%Main* (%Main*) * bitcast (%Object* (%Object*) * @Object_copy to %Main* (%Main*) *),
	%String* (%Main*) * @Main_main
}

@str.2 = internal constant [14 x i8] c"<basic class>\00", align 1
@String.2 = constant %String {
	%String_vtable* @String_vtable_prototype,
	i8* getelementptr ([14 x i8], [14 x i8]* @str.2, i32 0, i32 0)
}

@str.1 = internal constant [11 x i8] c"do nothing\00", align 1
@String.1 = constant %String {
	%String_vtable* @String_vtable_prototype,
	i8* getelementptr ([11 x i8], [11 x i8]* @str.1, i32 0, i32 0)
}

@str.0 = internal constant [14 x i8] c"hairyscary.cl\00", align 1
@String.0 = constant %String {
	%String_vtable* @String_vtable_prototype,
	i8* getelementptr ([14 x i8], [14 x i8]* @str.0, i32 0, i32 0)
}

define i32 @main() {
entry:
	%main.obj = call %Main*() @Main_new( )
	%main.retval = call %String*(%Main*) @Main_main( %Main* %main.obj )
	ret i32 0
}

define i32 @Bazz_printh(%Bazz* %self) {

entry:
	%tmp.0 = alloca %Bazz*
	store %Bazz* %self, %Bazz** %tmp.0
	%tmp.1 = load %Bazz*, %Bazz** %tmp.0
	%tmp.2 = getelementptr %Bazz, %Bazz* %tmp.1, i32 0, i32 1
	%tmp.3 = load i32, i32* %tmp.2
	%tmp.4 = load %Bazz*, %Bazz** %tmp.0
	%tmp.5 = icmp eq %Bazz* %tmp.4, null
	br i1 %tmp.5, label %abort, label %ok.0

ok.0:
	%tmp.6 = getelementptr %Bazz, %Bazz* %tmp.4, i32 0, i32 0
	%tmp.7 = load %Bazz_vtable*, %Bazz_vtable** %tmp.6
	%tmp.8 = getelementptr %Bazz_vtable, %Bazz_vtable* %tmp.7, i32 0, i32 8
	%tmp.9 = load %Bazz* (%Bazz*,i32) *, %Bazz* (%Bazz*,i32) ** %tmp.8
	%tmp.10 = call %Bazz*(%Bazz*, i32) %tmp.9( %Bazz* %tmp.4, i32 %tmp.3 )
	ret i32 0

abort:
	call void @abort(  )
	unreachable
}

define i32 @Bazz_doh(%Bazz* %self) {

entry:
	%tmp.11 = alloca %Bazz*
	store %Bazz* %self, %Bazz** %tmp.11
	%tmp.12 = load %Bazz*, %Bazz** %tmp.11
	%tmp.13 = getelementptr %Bazz, %Bazz* %tmp.12, i32 0, i32 1
	%tmp.14 = load i32, i32* %tmp.13
	%tmp.15 = alloca i32
	store i32 %tmp.14, i32* %tmp.15
	%tmp.16 = load %Bazz*, %Bazz** %tmp.11
	%tmp.17 = getelementptr %Bazz, %Bazz* %tmp.16, i32 0, i32 1
	%tmp.18 = load i32, i32* %tmp.17
	%tmp.19 = add i32 %tmp.18, 1
	%tmp.20 = load %Bazz*, %Bazz** %tmp.11
	%tmp.21 = getelementptr %Bazz, %Bazz* %tmp.20, i32 0, i32 1
	store i32 %tmp.19, i32* %tmp.21
	%tmp.22 = load i32, i32* %tmp.15
	ret i32 %tmp.22

abort:
	call void @abort(  )
	unreachable
}

define %Bazz* @Bazz_new() {

entry:
	%tmp.23 = getelementptr %Bazz_vtable, %Bazz_vtable* @Bazz_vtable_prototype, i32 0, i32 1
	%tmp.24 = load i32, i32* %tmp.23
	%tmp.25 = call i8*(i32) @malloc( i32 %tmp.24 )
	%tmp.26 = bitcast i8* %tmp.25 to %Bazz*
	%tmp.27 = getelementptr %Bazz, %Bazz* %tmp.26, i32 0, i32 0
	store %Bazz_vtable* @Bazz_vtable_prototype, %Bazz_vtable** %tmp.27
	%tmp.28 = alloca %Bazz*
	store %Bazz* %tmp.26, %Bazz** %tmp.28
	%tmp.29 = getelementptr %Bazz, %Bazz* %tmp.26, i32 0, i32 1
	store i32 1, i32* %tmp.29
	%tmp.30 = getelementptr %Bazz, %Bazz* %tmp.26, i32 0, i32 2
	%tmp.31 = load %Bazz*, %Bazz** %tmp.28
	%tmp.32 = icmp eq %Bazz* %tmp.31, null
	br i1 %tmp.32, label %abort, label %ok.1

ok.1:
	%tmp.33 = getelementptr %Bazz, %Bazz* %tmp.31, i32 0, i32 0
	%tmp.34 = load %Bazz_vtable*, %Bazz_vtable** %tmp.33
	%tmp.35 = getelementptr %Bazz_vtable, %Bazz_vtable* %tmp.34, i32 0, i32 0
	%tmp.36 = load i32, i32* %tmp.35
	br label %case.hdr.0

case.hdr.0:
	%tmp.37 = alloca %Foo*
	br label %case.8.0

case.8.0:
	%vtpm.0 = icmp slt i32 %tmp.36, 8
	br i1 %vtpm.0, label %br_exit.8.0, label %src_gte_br.8.0

src_gte_br.8.0:
	%vtpm.1 = icmp sgt i32 %tmp.36, 8
	br i1 %vtpm.1, label %br_exit.8.0, label %src_lte_mc.8.0

src_lte_mc.8.0:
	%vtpm.2 = alloca %Bar*
	%tmp.38 = bitcast %Bazz* %tmp.31 to %Bar*
	store %Bar* %tmp.38, %Bar** %vtpm.2
	%tmp.39 = load %Bar*, %Bar** %vtpm.2
	%tmp.40 = bitcast %Bar* %tmp.39 to %Foo*
	store %Foo* %tmp.40, %Foo** %tmp.37
	br label %case.exit.0

br_exit.8.0:
	br label %case.7.0

case.7.0:
	%vtpm.3 = icmp slt i32 %tmp.36, 7
	br i1 %vtpm.3, label %br_exit.7.0, label %src_gte_br.7.0

src_gte_br.7.0:
	%vtpm.4 = icmp sgt i32 %tmp.36, 8
	br i1 %vtpm.4, label %br_exit.7.0, label %src_lte_mc.7.0

src_lte_mc.7.0:
	%vtpm.5 = alloca %Razz*
	%tmp.41 = bitcast %Bazz* %tmp.31 to %Razz*
	store %Razz* %tmp.41, %Razz** %vtpm.5
	%tmp.42 = call %Bar* @Bar_new(  )
	%tmp.43 = bitcast %Bar* %tmp.42 to %Foo*
	store %Foo* %tmp.43, %Foo** %tmp.37
	br label %case.exit.0

br_exit.7.0:
	br label %case.6.0

case.6.0:
	%vtpm.6 = icmp slt i32 %tmp.36, 6
	br i1 %vtpm.6, label %br_exit.6.0, label %src_gte_br.6.0

src_gte_br.6.0:
	%vtpm.7 = icmp sgt i32 %tmp.36, 8
	br i1 %vtpm.7, label %br_exit.6.0, label %src_lte_mc.6.0

src_lte_mc.6.0:
	%vtpm.8 = alloca %Foo*
	%tmp.44 = bitcast %Bazz* %tmp.31 to %Foo*
	store %Foo* %tmp.44, %Foo** %vtpm.8
	%tmp.45 = call %Razz* @Razz_new(  )
	%tmp.46 = bitcast %Razz* %tmp.45 to %Foo*
	store %Foo* %tmp.46, %Foo** %tmp.37
	br label %case.exit.0

br_exit.6.0:
	br label %case.5.0

case.5.0:
	%vtpm.9 = icmp slt i32 %tmp.36, 5
	br i1 %vtpm.9, label %br_exit.5.0, label %src_gte_br.5.0

src_gte_br.5.0:
	%vtpm.10 = icmp sgt i32 %tmp.36, 8
	br i1 %vtpm.10, label %br_exit.5.0, label %src_lte_mc.5.0

src_lte_mc.5.0:
	%vtpm.11 = alloca %Bazz*
	store %Bazz* %tmp.31, %Bazz** %vtpm.11
	%tmp.47 = call %Foo* @Foo_new(  )
	store %Foo* %tmp.47, %Foo** %tmp.37
	br label %case.exit.0

br_exit.5.0:
	br label %abort

case.exit.0:
	%tmp.48 = load %Foo*, %Foo** %tmp.37
	store %Foo* %tmp.48, %Foo** %tmp.30
	%tmp.49 = getelementptr %Bazz, %Bazz* %tmp.26, i32 0, i32 3
	%tmp.50 = load %Bazz*, %Bazz** %tmp.28
	%tmp.51 = icmp eq %Bazz* %tmp.50, null
	br i1 %tmp.51, label %abort, label %ok.2

ok.2:
	%tmp.52 = getelementptr %Bazz, %Bazz* %tmp.50, i32 0, i32 0
	%tmp.53 = load %Bazz_vtable*, %Bazz_vtable** %tmp.52
	%tmp.54 = getelementptr %Bazz_vtable, %Bazz_vtable* %tmp.53, i32 0, i32 11
	%tmp.55 = load i32 (%Bazz*) *, i32 (%Bazz*) ** %tmp.54
	%tmp.56 = call i32(%Bazz*) %tmp.55( %Bazz* %tmp.50 )
	%tmp.58 = call %Int* @Int_new(  )
	call void(%Int*, i32) @Int_init( %Int* %tmp.58, i32 %tmp.56 )
	%tmp.59 = bitcast %Int* %tmp.58 to %Object*
	store %Object* %tmp.59, %Object** %tmp.49
	ret %Bazz* %tmp.26

abort:
	call void @abort(  )
	unreachable
}

define i32 @Foo_doh(%Foo* %self) {

entry:
	%tmp.0 = alloca %Foo*
	store %Foo* %self, %Foo** %tmp.0
	%tmp.1 = load %Foo*, %Foo** %tmp.0
	%tmp.2 = getelementptr %Foo, %Foo* %tmp.1, i32 0, i32 1
	%tmp.3 = load i32, i32* %tmp.2
	%tmp.4 = alloca i32
	store i32 %tmp.3, i32* %tmp.4
	%tmp.5 = load %Foo*, %Foo** %tmp.0
	%tmp.6 = getelementptr %Foo, %Foo* %tmp.5, i32 0, i32 1
	%tmp.7 = load i32, i32* %tmp.6
	%tmp.8 = add i32 %tmp.7, 2
	%tmp.9 = load %Foo*, %Foo** %tmp.0
	%tmp.10 = getelementptr %Foo, %Foo* %tmp.9, i32 0, i32 1
	store i32 %tmp.8, i32* %tmp.10
	%tmp.11 = load i32, i32* %tmp.4
	ret i32 %tmp.11

abort:
	call void @abort(  )
	unreachable
}

define %Foo* @Foo_new() {

entry:
	%tmp.12 = getelementptr %Foo_vtable, %Foo_vtable* @Foo_vtable_prototype, i32 0, i32 1
	%tmp.13 = load i32, i32* %tmp.12
	%tmp.14 = call i8*(i32) @malloc( i32 %tmp.13 )
	%tmp.15 = bitcast i8* %tmp.14 to %Foo*
	%tmp.16 = getelementptr %Foo, %Foo* %tmp.15, i32 0, i32 0
	store %Foo_vtable* @Foo_vtable_prototype, %Foo_vtable** %tmp.16
	%tmp.17 = alloca %Foo*
	store %Foo* %tmp.15, %Foo** %tmp.17
	%tmp.18 = getelementptr %Foo, %Foo* %tmp.15, i32 0, i32 1
	store i32 1, i32* %tmp.18
	%tmp.19 = getelementptr %Foo, %Foo* %tmp.15, i32 0, i32 2
	%tmp.20 = load %Foo*, %Foo** %tmp.17
	%tmp.21 = icmp eq %Foo* %tmp.20, null
	br i1 %tmp.21, label %abort, label %ok.0

ok.0:
	%tmp.22 = getelementptr %Foo, %Foo* %tmp.20, i32 0, i32 0
	%tmp.23 = load %Foo_vtable*, %Foo_vtable** %tmp.22
	%tmp.24 = getelementptr %Foo_vtable, %Foo_vtable* %tmp.23, i32 0, i32 0
	%tmp.25 = load i32, i32* %tmp.24
	br label %case.hdr.0

case.hdr.0:
	%tmp.26 = alloca %Foo*
	br label %case.8.0

case.8.0:
	%vtpm.12 = icmp slt i32 %tmp.25, 8
	br i1 %vtpm.12, label %br_exit.8.0, label %src_gte_br.8.0

src_gte_br.8.0:
	%vtpm.13 = icmp sgt i32 %tmp.25, 8
	br i1 %vtpm.13, label %br_exit.8.0, label %src_lte_mc.8.0

src_lte_mc.8.0:
	%vtpm.14 = alloca %Bar*
	%tmp.27 = bitcast %Foo* %tmp.20 to %Bar*
	store %Bar* %tmp.27, %Bar** %vtpm.14
	%tmp.28 = load %Bar*, %Bar** %vtpm.14
	%tmp.29 = bitcast %Bar* %tmp.28 to %Foo*
	store %Foo* %tmp.29, %Foo** %tmp.26
	br label %case.exit.0

br_exit.8.0:
	br label %case.7.0

case.7.0:
	%vtpm.15 = icmp slt i32 %tmp.25, 7
	br i1 %vtpm.15, label %br_exit.7.0, label %src_gte_br.7.0

src_gte_br.7.0:
	%vtpm.16 = icmp sgt i32 %tmp.25, 8
	br i1 %vtpm.16, label %br_exit.7.0, label %src_lte_mc.7.0

src_lte_mc.7.0:
	%vtpm.17 = alloca %Razz*
	%tmp.30 = bitcast %Foo* %tmp.20 to %Razz*
	store %Razz* %tmp.30, %Razz** %vtpm.17
	%tmp.31 = call %Bar* @Bar_new(  )
	%tmp.32 = bitcast %Bar* %tmp.31 to %Foo*
	store %Foo* %tmp.32, %Foo** %tmp.26
	br label %case.exit.0

br_exit.7.0:
	br label %case.6.0

case.6.0:
	%vtpm.18 = icmp slt i32 %tmp.25, 6
	br i1 %vtpm.18, label %br_exit.6.0, label %src_gte_br.6.0

src_gte_br.6.0:
	%vtpm.19 = icmp sgt i32 %tmp.25, 8
	br i1 %vtpm.19, label %br_exit.6.0, label %src_lte_mc.6.0

src_lte_mc.6.0:
	%vtpm.20 = alloca %Foo*
	store %Foo* %tmp.20, %Foo** %vtpm.20
	%tmp.33 = call %Razz* @Razz_new(  )
	%tmp.34 = bitcast %Razz* %tmp.33 to %Foo*
	store %Foo* %tmp.34, %Foo** %tmp.26
	br label %case.exit.0

br_exit.6.0:
	br label %case.5.0

case.5.0:
	%vtpm.21 = icmp slt i32 %tmp.25, 5
	br i1 %vtpm.21, label %br_exit.5.0, label %src_gte_br.5.0

src_gte_br.5.0:
	%vtpm.22 = icmp sgt i32 %tmp.25, 8
	br i1 %vtpm.22, label %br_exit.5.0, label %src_lte_mc.5.0

src_lte_mc.5.0:
	%vtpm.23 = alloca %Bazz*
	%tmp.35 = bitcast %Foo* %tmp.20 to %Bazz*
	store %Bazz* %tmp.35, %Bazz** %vtpm.23
	%tmp.36 = call %Foo* @Foo_new(  )
	store %Foo* %tmp.36, %Foo** %tmp.26
	br label %case.exit.0

br_exit.5.0:
	br label %abort

case.exit.0:
	%tmp.37 = load %Foo*, %Foo** %tmp.26
	store %Foo* %tmp.37, %Foo** %tmp.19
	%tmp.38 = getelementptr %Foo, %Foo* %tmp.15, i32 0, i32 3
	%tmp.39 = load %Foo*, %Foo** %tmp.17
	%tmp.40 = icmp eq %Foo* %tmp.39, null
	br i1 %tmp.40, label %abort, label %ok.1

ok.1:
	%tmp.41 = getelementptr %Foo, %Foo* %tmp.39, i32 0, i32 0
	%tmp.42 = load %Foo_vtable*, %Foo_vtable** %tmp.41
	%tmp.43 = getelementptr %Foo_vtable, %Foo_vtable* %tmp.42, i32 0, i32 11
	%tmp.44 = load i32 (%Foo*) *, i32 (%Foo*) ** %tmp.43
	%tmp.45 = call i32(%Foo*) %tmp.44( %Foo* %tmp.39 )
	%tmp.47 = call %Int* @Int_new(  )
	call void(%Int*, i32) @Int_init( %Int* %tmp.47, i32 %tmp.45 )
	%tmp.48 = bitcast %Int* %tmp.47 to %Object*
	store %Object* %tmp.48, %Object** %tmp.38
	%tmp.49 = getelementptr %Foo, %Foo* %tmp.15, i32 0, i32 4
	%tmp.50 = load %Foo*, %Foo** %tmp.17
	%tmp.51 = icmp eq %Foo* %tmp.50, null
	br i1 %tmp.51, label %abort, label %ok.2

ok.2:
	%tmp.52 = getelementptr %Foo, %Foo* %tmp.50, i32 0, i32 0
	%tmp.53 = load %Foo_vtable*, %Foo_vtable** %tmp.52
	%tmp.54 = getelementptr %Foo_vtable, %Foo_vtable* %tmp.53, i32 0, i32 0
	%tmp.55 = load i32, i32* %tmp.54
	br label %case.hdr.1

case.hdr.1:
	%tmp.56 = alloca %Bar*
	br label %case.8.1

case.8.1:
	%vtpm.24 = icmp slt i32 %tmp.55, 8
	br i1 %vtpm.24, label %br_exit.8.1, label %src_gte_br.8.1

src_gte_br.8.1:
	%vtpm.25 = icmp sgt i32 %tmp.55, 8
	br i1 %vtpm.25, label %br_exit.8.1, label %src_lte_mc.8.1

src_lte_mc.8.1:
	%vtpm.26 = alloca %Bar*
	%tmp.57 = bitcast %Foo* %tmp.50 to %Bar*
	store %Bar* %tmp.57, %Bar** %vtpm.26
	%tmp.58 = load %Bar*, %Bar** %vtpm.26
	%tmp.59 = bitcast %Bar* %tmp.58 to %Razz*
	%tmp.60 = bitcast %Razz* %tmp.59 to %Bar*
	store %Bar* %tmp.60, %Bar** %tmp.56
	br label %case.exit.1

br_exit.8.1:
	br label %case.7.1

case.7.1:
	%vtpm.27 = icmp slt i32 %tmp.55, 7
	br i1 %vtpm.27, label %br_exit.7.1, label %src_gte_br.7.1

src_gte_br.7.1:
	%vtpm.28 = icmp sgt i32 %tmp.55, 8
	br i1 %vtpm.28, label %br_exit.7.1, label %src_lte_mc.7.1

src_lte_mc.7.1:
	%vtpm.29 = alloca %Razz*
	%tmp.61 = bitcast %Foo* %tmp.50 to %Razz*
	store %Razz* %tmp.61, %Razz** %vtpm.29
	%tmp.62 = call %Bar* @Bar_new(  )
	%tmp.63 = bitcast %Bar* %tmp.62 to %Razz*
	%tmp.64 = bitcast %Razz* %tmp.63 to %Bar*
	store %Bar* %tmp.64, %Bar** %tmp.56
	br label %case.exit.1

br_exit.7.1:
	br label %case.6.1

case.6.1:
	%vtpm.30 = icmp slt i32 %tmp.55, 6
	br i1 %vtpm.30, label %br_exit.6.1, label %src_gte_br.6.1

src_gte_br.6.1:
	%vtpm.31 = icmp sgt i32 %tmp.55, 8
	br i1 %vtpm.31, label %br_exit.6.1, label %src_lte_mc.6.1

src_lte_mc.6.1:
	%vtpm.32 = alloca %Foo*
	store %Foo* %tmp.50, %Foo** %vtpm.32
	%tmp.65 = call %Razz* @Razz_new(  )
	%tmp.66 = bitcast %Razz* %tmp.65 to %Bar*
	store %Bar* %tmp.66, %Bar** %tmp.56
	br label %case.exit.1

br_exit.6.1:
	br label %abort

case.exit.1:
	%tmp.67 = load %Bar*, %Bar** %tmp.56
	%tmp.68 = bitcast %Bar* %tmp.67 to %Razz*
	store %Razz* %tmp.68, %Razz** %tmp.49
	%tmp.69 = getelementptr %Foo, %Foo* %tmp.15, i32 0, i32 5
	%tmp.70 = load %Foo*, %Foo** %tmp.17
	%tmp.71 = getelementptr %Foo, %Foo* %tmp.70, i32 0, i32 4
	%tmp.72 = load %Razz*, %Razz** %tmp.71
	%tmp.73 = icmp eq %Razz* %tmp.72, null
	br i1 %tmp.73, label %abort, label %ok.3

ok.3:
	%tmp.74 = getelementptr %Razz, %Razz* %tmp.72, i32 0, i32 0
	%tmp.75 = load %Razz_vtable*, %Razz_vtable** %tmp.74
	%tmp.76 = getelementptr %Razz_vtable, %Razz_vtable* %tmp.75, i32 0, i32 12
	%tmp.77 = load i32 (%Razz*) *, i32 (%Razz*) ** %tmp.76
	%tmp.78 = call i32(%Razz*) %tmp.77( %Razz* %tmp.72 )
	%tmp.79 = load %Foo*, %Foo** %tmp.17
	%tmp.80 = getelementptr %Foo, %Foo* %tmp.79, i32 0, i32 2
	%tmp.81 = load %Foo*, %Foo** %tmp.80
	%tmp.82 = icmp eq %Foo* %tmp.81, null
	br i1 %tmp.82, label %abort, label %ok.4

ok.4:
	%tmp.83 = getelementptr %Foo, %Foo* %tmp.81, i32 0, i32 0
	%tmp.84 = load %Foo_vtable*, %Foo_vtable** %tmp.83
	%tmp.85 = getelementptr %Foo_vtable, %Foo_vtable* %tmp.84, i32 0, i32 12
	%tmp.86 = load i32 (%Foo*) *, i32 (%Foo*) ** %tmp.85
	%tmp.87 = call i32(%Foo*) %tmp.86( %Foo* %tmp.81 )
	%tmp.88 = add i32 %tmp.78, %tmp.87
	%tmp.89 = load %Foo*, %Foo** %tmp.17
	%tmp.90 = icmp eq %Foo* %tmp.89, null
	br i1 %tmp.90, label %abort, label %ok.5

ok.5:
	%tmp.91 = getelementptr %Foo, %Foo* %tmp.89, i32 0, i32 0
	%tmp.92 = load %Foo_vtable*, %Foo_vtable** %tmp.91
	%tmp.93 = getelementptr %Foo_vtable, %Foo_vtable* %tmp.92, i32 0, i32 12
	%tmp.94 = load i32 (%Foo*) *, i32 (%Foo*) ** %tmp.93
	%tmp.95 = call i32(%Foo*) %tmp.94( %Foo* %tmp.89 )
	%tmp.96 = add i32 %tmp.88, %tmp.95
	%tmp.97 = load %Foo*, %Foo** %tmp.17
	%tmp.98 = icmp eq %Foo* %tmp.97, null
	br i1 %tmp.98, label %abort, label %ok.6

ok.6:
	%tmp.99 = getelementptr %Foo, %Foo* %tmp.97, i32 0, i32 0
	%tmp.100 = load %Foo_vtable*, %Foo_vtable** %tmp.99
	%tmp.101 = getelementptr %Foo_vtable, %Foo_vtable* %tmp.100, i32 0, i32 11
	%tmp.102 = load i32 (%Foo*) *, i32 (%Foo*) ** %tmp.101
	%tmp.103 = call i32(%Foo*) %tmp.102( %Foo* %tmp.97 )
	%tmp.104 = add i32 %tmp.96, %tmp.103
	store i32 %tmp.104, i32* %tmp.69
	ret %Foo* %tmp.15

abort:
	call void @abort(  )
	unreachable
}

define %Razz* @Razz_new() {

entry:
	%tmp.0 = getelementptr %Razz_vtable, %Razz_vtable* @Razz_vtable_prototype, i32 0, i32 1
	%tmp.1 = load i32, i32* %tmp.0
	%tmp.2 = call i8*(i32) @malloc( i32 %tmp.1 )
	%tmp.3 = bitcast i8* %tmp.2 to %Razz*
	%tmp.4 = getelementptr %Razz, %Razz* %tmp.3, i32 0, i32 0
	store %Razz_vtable* @Razz_vtable_prototype, %Razz_vtable** %tmp.4
	%tmp.5 = alloca %Razz*
	store %Razz* %tmp.3, %Razz** %tmp.5
	%tmp.6 = getelementptr %Razz, %Razz* %tmp.3, i32 0, i32 1
	store i32 1, i32* %tmp.6
	%tmp.7 = getelementptr %Razz, %Razz* %tmp.3, i32 0, i32 2
	%tmp.8 = load %Razz*, %Razz** %tmp.5
	%tmp.9 = icmp eq %Razz* %tmp.8, null
	br i1 %tmp.9, label %abort, label %ok.0

ok.0:
	%tmp.10 = getelementptr %Razz, %Razz* %tmp.8, i32 0, i32 0
	%tmp.11 = load %Razz_vtable*, %Razz_vtable** %tmp.10
	%tmp.12 = getelementptr %Razz_vtable, %Razz_vtable* %tmp.11, i32 0, i32 0
	%tmp.13 = load i32, i32* %tmp.12
	br label %case.hdr.0

case.hdr.0:
	%tmp.14 = alloca %Foo*
	br label %case.8.0

case.8.0:
	%vtpm.33 = icmp slt i32 %tmp.13, 8
	br i1 %vtpm.33, label %br_exit.8.0, label %src_gte_br.8.0

src_gte_br.8.0:
	%vtpm.34 = icmp sgt i32 %tmp.13, 8
	br i1 %vtpm.34, label %br_exit.8.0, label %src_lte_mc.8.0

src_lte_mc.8.0:
	%vtpm.35 = alloca %Bar*
	%tmp.15 = bitcast %Razz* %tmp.8 to %Bar*
	store %Bar* %tmp.15, %Bar** %vtpm.35
	%tmp.16 = load %Bar*, %Bar** %vtpm.35
	%tmp.17 = bitcast %Bar* %tmp.16 to %Foo*
	store %Foo* %tmp.17, %Foo** %tmp.14
	br label %case.exit.0

br_exit.8.0:
	br label %case.7.0

case.7.0:
	%vtpm.36 = icmp slt i32 %tmp.13, 7
	br i1 %vtpm.36, label %br_exit.7.0, label %src_gte_br.7.0

src_gte_br.7.0:
	%vtpm.37 = icmp sgt i32 %tmp.13, 8
	br i1 %vtpm.37, label %br_exit.7.0, label %src_lte_mc.7.0

src_lte_mc.7.0:
	%vtpm.38 = alloca %Razz*
	store %Razz* %tmp.8, %Razz** %vtpm.38
	%tmp.18 = call %Bar* @Bar_new(  )
	%tmp.19 = bitcast %Bar* %tmp.18 to %Foo*
	store %Foo* %tmp.19, %Foo** %tmp.14
	br label %case.exit.0

br_exit.7.0:
	br label %case.6.0

case.6.0:
	%vtpm.39 = icmp slt i32 %tmp.13, 6
	br i1 %vtpm.39, label %br_exit.6.0, label %src_gte_br.6.0

src_gte_br.6.0:
	%vtpm.40 = icmp sgt i32 %tmp.13, 8
	br i1 %vtpm.40, label %br_exit.6.0, label %src_lte_mc.6.0

src_lte_mc.6.0:
	%vtpm.41 = alloca %Foo*
	%tmp.20 = bitcast %Razz* %tmp.8 to %Foo*
	store %Foo* %tmp.20, %Foo** %vtpm.41
	%tmp.21 = call %Razz* @Razz_new(  )
	%tmp.22 = bitcast %Razz* %tmp.21 to %Foo*
	store %Foo* %tmp.22, %Foo** %tmp.14
	br label %case.exit.0

br_exit.6.0:
	br label %case.5.0

case.5.0:
	%vtpm.42 = icmp slt i32 %tmp.13, 5
	br i1 %vtpm.42, label %br_exit.5.0, label %src_gte_br.5.0

src_gte_br.5.0:
	%vtpm.43 = icmp sgt i32 %tmp.13, 8
	br i1 %vtpm.43, label %br_exit.5.0, label %src_lte_mc.5.0

src_lte_mc.5.0:
	%vtpm.44 = alloca %Bazz*
	%tmp.23 = bitcast %Razz* %tmp.8 to %Bazz*
	store %Bazz* %tmp.23, %Bazz** %vtpm.44
	%tmp.24 = call %Foo* @Foo_new(  )
	store %Foo* %tmp.24, %Foo** %tmp.14
	br label %case.exit.0

br_exit.5.0:
	br label %abort

case.exit.0:
	%tmp.25 = load %Foo*, %Foo** %tmp.14
	store %Foo* %tmp.25, %Foo** %tmp.7
	%tmp.26 = getelementptr %Razz, %Razz* %tmp.3, i32 0, i32 3
	%tmp.27 = load %Razz*, %Razz** %tmp.5
	%tmp.28 = icmp eq %Razz* %tmp.27, null
	br i1 %tmp.28, label %abort, label %ok.1

ok.1:
	%tmp.29 = getelementptr %Razz, %Razz* %tmp.27, i32 0, i32 0
	%tmp.30 = load %Razz_vtable*, %Razz_vtable** %tmp.29
	%tmp.31 = getelementptr %Razz_vtable, %Razz_vtable* %tmp.30, i32 0, i32 11
	%tmp.32 = load i32 (%Razz*) *, i32 (%Razz*) ** %tmp.31
	%tmp.33 = call i32(%Razz*) %tmp.32( %Razz* %tmp.27 )
	%tmp.35 = call %Int* @Int_new(  )
	call void(%Int*, i32) @Int_init( %Int* %tmp.35, i32 %tmp.33 )
	%tmp.36 = bitcast %Int* %tmp.35 to %Object*
	store %Object* %tmp.36, %Object** %tmp.26
	%tmp.37 = getelementptr %Razz, %Razz* %tmp.3, i32 0, i32 4
	%tmp.38 = load %Razz*, %Razz** %tmp.5
	%tmp.39 = icmp eq %Razz* %tmp.38, null
	br i1 %tmp.39, label %abort, label %ok.2

ok.2:
	%tmp.40 = getelementptr %Razz, %Razz* %tmp.38, i32 0, i32 0
	%tmp.41 = load %Razz_vtable*, %Razz_vtable** %tmp.40
	%tmp.42 = getelementptr %Razz_vtable, %Razz_vtable* %tmp.41, i32 0, i32 0
	%tmp.43 = load i32, i32* %tmp.42
	br label %case.hdr.1

case.hdr.1:
	%tmp.44 = alloca %Bar*
	br label %case.8.1

case.8.1:
	%vtpm.45 = icmp slt i32 %tmp.43, 8
	br i1 %vtpm.45, label %br_exit.8.1, label %src_gte_br.8.1

src_gte_br.8.1:
	%vtpm.46 = icmp sgt i32 %tmp.43, 8
	br i1 %vtpm.46, label %br_exit.8.1, label %src_lte_mc.8.1

src_lte_mc.8.1:
	%vtpm.47 = alloca %Bar*
	%tmp.45 = bitcast %Razz* %tmp.38 to %Bar*
	store %Bar* %tmp.45, %Bar** %vtpm.47
	%tmp.46 = load %Bar*, %Bar** %vtpm.47
	%tmp.47 = bitcast %Bar* %tmp.46 to %Razz*
	%tmp.48 = bitcast %Razz* %tmp.47 to %Bar*
	store %Bar* %tmp.48, %Bar** %tmp.44
	br label %case.exit.1

br_exit.8.1:
	br label %case.7.1

case.7.1:
	%vtpm.48 = icmp slt i32 %tmp.43, 7
	br i1 %vtpm.48, label %br_exit.7.1, label %src_gte_br.7.1

src_gte_br.7.1:
	%vtpm.49 = icmp sgt i32 %tmp.43, 8
	br i1 %vtpm.49, label %br_exit.7.1, label %src_lte_mc.7.1

src_lte_mc.7.1:
	%vtpm.50 = alloca %Razz*
	store %Razz* %tmp.38, %Razz** %vtpm.50
	%tmp.49 = call %Bar* @Bar_new(  )
	%tmp.50 = bitcast %Bar* %tmp.49 to %Razz*
	%tmp.51 = bitcast %Razz* %tmp.50 to %Bar*
	store %Bar* %tmp.51, %Bar** %tmp.44
	br label %case.exit.1

br_exit.7.1:
	br label %case.6.1

case.6.1:
	%vtpm.51 = icmp slt i32 %tmp.43, 6
	br i1 %vtpm.51, label %br_exit.6.1, label %src_gte_br.6.1

src_gte_br.6.1:
	%vtpm.52 = icmp sgt i32 %tmp.43, 8
	br i1 %vtpm.52, label %br_exit.6.1, label %src_lte_mc.6.1

src_lte_mc.6.1:
	%vtpm.53 = alloca %Foo*
	%tmp.52 = bitcast %Razz* %tmp.38 to %Foo*
	store %Foo* %tmp.52, %Foo** %vtpm.53
	%tmp.53 = call %Razz* @Razz_new(  )
	%tmp.54 = bitcast %Razz* %tmp.53 to %Bar*
	store %Bar* %tmp.54, %Bar** %tmp.44
	br label %case.exit.1

br_exit.6.1:
	br label %abort

case.exit.1:
	%tmp.55 = load %Bar*, %Bar** %tmp.44
	%tmp.56 = bitcast %Bar* %tmp.55 to %Razz*
	store %Razz* %tmp.56, %Razz** %tmp.37
	%tmp.57 = getelementptr %Razz, %Razz* %tmp.3, i32 0, i32 5
	%tmp.58 = load %Razz*, %Razz** %tmp.5
	%tmp.59 = getelementptr %Razz, %Razz* %tmp.58, i32 0, i32 4
	%tmp.60 = load %Razz*, %Razz** %tmp.59
	%tmp.61 = icmp eq %Razz* %tmp.60, null
	br i1 %tmp.61, label %abort, label %ok.3

ok.3:
	%tmp.62 = getelementptr %Razz, %Razz* %tmp.60, i32 0, i32 0
	%tmp.63 = load %Razz_vtable*, %Razz_vtable** %tmp.62
	%tmp.64 = getelementptr %Razz_vtable, %Razz_vtable* %tmp.63, i32 0, i32 12
	%tmp.65 = load i32 (%Razz*) *, i32 (%Razz*) ** %tmp.64
	%tmp.66 = call i32(%Razz*) %tmp.65( %Razz* %tmp.60 )
	%tmp.67 = load %Razz*, %Razz** %tmp.5
	%tmp.68 = getelementptr %Razz, %Razz* %tmp.67, i32 0, i32 2
	%tmp.69 = load %Foo*, %Foo** %tmp.68
	%tmp.70 = icmp eq %Foo* %tmp.69, null
	br i1 %tmp.70, label %abort, label %ok.4

ok.4:
	%tmp.71 = getelementptr %Foo, %Foo* %tmp.69, i32 0, i32 0
	%tmp.72 = load %Foo_vtable*, %Foo_vtable** %tmp.71
	%tmp.73 = getelementptr %Foo_vtable, %Foo_vtable* %tmp.72, i32 0, i32 12
	%tmp.74 = load i32 (%Foo*) *, i32 (%Foo*) ** %tmp.73
	%tmp.75 = call i32(%Foo*) %tmp.74( %Foo* %tmp.69 )
	%tmp.76 = add i32 %tmp.66, %tmp.75
	%tmp.77 = load %Razz*, %Razz** %tmp.5
	%tmp.78 = icmp eq %Razz* %tmp.77, null
	br i1 %tmp.78, label %abort, label %ok.5

ok.5:
	%tmp.79 = getelementptr %Razz, %Razz* %tmp.77, i32 0, i32 0
	%tmp.80 = load %Razz_vtable*, %Razz_vtable** %tmp.79
	%tmp.81 = getelementptr %Razz_vtable, %Razz_vtable* %tmp.80, i32 0, i32 12
	%tmp.82 = load i32 (%Razz*) *, i32 (%Razz*) ** %tmp.81
	%tmp.83 = call i32(%Razz*) %tmp.82( %Razz* %tmp.77 )
	%tmp.84 = add i32 %tmp.76, %tmp.83
	%tmp.85 = load %Razz*, %Razz** %tmp.5
	%tmp.86 = icmp eq %Razz* %tmp.85, null
	br i1 %tmp.86, label %abort, label %ok.6

ok.6:
	%tmp.87 = getelementptr %Razz, %Razz* %tmp.85, i32 0, i32 0
	%tmp.88 = load %Razz_vtable*, %Razz_vtable** %tmp.87
	%tmp.89 = getelementptr %Razz_vtable, %Razz_vtable* %tmp.88, i32 0, i32 11
	%tmp.90 = load i32 (%Razz*) *, i32 (%Razz*) ** %tmp.89
	%tmp.91 = call i32(%Razz*) %tmp.90( %Razz* %tmp.85 )
	%tmp.92 = add i32 %tmp.84, %tmp.91
	store i32 %tmp.92, i32* %tmp.57
	%tmp.93 = getelementptr %Razz, %Razz* %tmp.3, i32 0, i32 6
	%tmp.94 = load %Razz*, %Razz** %tmp.5
	%tmp.95 = icmp eq %Razz* %tmp.94, null
	br i1 %tmp.95, label %abort, label %ok.7

ok.7:
	%tmp.96 = getelementptr %Razz, %Razz* %tmp.94, i32 0, i32 0
	%tmp.97 = load %Razz_vtable*, %Razz_vtable** %tmp.96
	%tmp.98 = getelementptr %Razz_vtable, %Razz_vtable* %tmp.97, i32 0, i32 0
	%tmp.99 = load i32, i32* %tmp.98
	br label %case.hdr.2

case.hdr.2:
	%tmp.100 = alloca %Bar*
	br label %case.8.2

case.8.2:
	%vtpm.54 = icmp slt i32 %tmp.99, 8
	br i1 %vtpm.54, label %br_exit.8.2, label %src_gte_br.8.2

src_gte_br.8.2:
	%vtpm.55 = icmp sgt i32 %tmp.99, 8
	br i1 %vtpm.55, label %br_exit.8.2, label %src_lte_mc.8.2

src_lte_mc.8.2:
	%vtpm.56 = alloca %Bar*
	%tmp.101 = bitcast %Razz* %tmp.94 to %Bar*
	store %Bar* %tmp.101, %Bar** %vtpm.56
	%tmp.102 = load %Bar*, %Bar** %vtpm.56
	store %Bar* %tmp.102, %Bar** %tmp.100
	br label %case.exit.2

br_exit.8.2:
	br label %case.7.2

case.7.2:
	%vtpm.57 = icmp slt i32 %tmp.99, 7
	br i1 %vtpm.57, label %br_exit.7.2, label %src_gte_br.7.2

src_gte_br.7.2:
	%vtpm.58 = icmp sgt i32 %tmp.99, 8
	br i1 %vtpm.58, label %br_exit.7.2, label %src_lte_mc.7.2

src_lte_mc.7.2:
	%vtpm.59 = alloca %Razz*
	store %Razz* %tmp.94, %Razz** %vtpm.59
	%tmp.103 = call %Bar* @Bar_new(  )
	store %Bar* %tmp.103, %Bar** %tmp.100
	br label %case.exit.2

br_exit.7.2:
	br label %abort

case.exit.2:
	%tmp.104 = load %Bar*, %Bar** %tmp.100
	store %Bar* %tmp.104, %Bar** %tmp.93
	%tmp.105 = getelementptr %Razz, %Razz* %tmp.3, i32 0, i32 7
	%tmp.106 = load %Razz*, %Razz** %tmp.5
	%tmp.107 = getelementptr %Razz, %Razz* %tmp.106, i32 0, i32 4
	%tmp.108 = load %Razz*, %Razz** %tmp.107
	%tmp.109 = icmp eq %Razz* %tmp.108, null
	br i1 %tmp.109, label %abort, label %ok.8

ok.8:
	%tmp.110 = getelementptr %Bazz_vtable, %Bazz_vtable* @Bazz_vtable_prototype, i32 0, i32 12
	%tmp.111 = load i32 (%Bazz*) *, i32 (%Bazz*) ** %tmp.110
	%tmp.112 = bitcast %Razz* %tmp.108 to %Bazz*
	%tmp.113 = call i32(%Bazz*) %tmp.111( %Bazz* %tmp.112 )
	%tmp.114 = load %Razz*, %Razz** %tmp.5
	%tmp.115 = getelementptr %Razz, %Razz* %tmp.114, i32 0, i32 2
	%tmp.116 = load %Foo*, %Foo** %tmp.115
	%tmp.117 = icmp eq %Foo* %tmp.116, null
	br i1 %tmp.117, label %abort, label %ok.9

ok.9:
	%tmp.118 = getelementptr %Foo, %Foo* %tmp.116, i32 0, i32 0
	%tmp.119 = load %Foo_vtable*, %Foo_vtable** %tmp.118
	%tmp.120 = getelementptr %Foo_vtable, %Foo_vtable* %tmp.119, i32 0, i32 12
	%tmp.121 = load i32 (%Foo*) *, i32 (%Foo*) ** %tmp.120
	%tmp.122 = call i32(%Foo*) %tmp.121( %Foo* %tmp.116 )
	%tmp.123 = add i32 %tmp.113, %tmp.122
	%tmp.124 = load %Razz*, %Razz** %tmp.5
	%tmp.125 = getelementptr %Razz, %Razz* %tmp.124, i32 0, i32 6
	%tmp.126 = load %Bar*, %Bar** %tmp.125
	%tmp.127 = icmp eq %Bar* %tmp.126, null
	br i1 %tmp.127, label %abort, label %ok.10

ok.10:
	%tmp.128 = getelementptr %Bar, %Bar* %tmp.126, i32 0, i32 0
	%tmp.129 = load %Bar_vtable*, %Bar_vtable** %tmp.128
	%tmp.130 = getelementptr %Bar_vtable, %Bar_vtable* %tmp.129, i32 0, i32 12
	%tmp.131 = load i32 (%Bar*) *, i32 (%Bar*) ** %tmp.130
	%tmp.132 = call i32(%Bar*) %tmp.131( %Bar* %tmp.126 )
	%tmp.133 = add i32 %tmp.123, %tmp.132
	%tmp.134 = load %Razz*, %Razz** %tmp.5
	%tmp.135 = icmp eq %Razz* %tmp.134, null
	br i1 %tmp.135, label %abort, label %ok.11

ok.11:
	%tmp.136 = getelementptr %Razz, %Razz* %tmp.134, i32 0, i32 0
	%tmp.137 = load %Razz_vtable*, %Razz_vtable** %tmp.136
	%tmp.138 = getelementptr %Razz_vtable, %Razz_vtable* %tmp.137, i32 0, i32 12
	%tmp.139 = load i32 (%Razz*) *, i32 (%Razz*) ** %tmp.138
	%tmp.140 = call i32(%Razz*) %tmp.139( %Razz* %tmp.134 )
	%tmp.141 = add i32 %tmp.133, %tmp.140
	%tmp.142 = load %Razz*, %Razz** %tmp.5
	%tmp.143 = icmp eq %Razz* %tmp.142, null
	br i1 %tmp.143, label %abort, label %ok.12

ok.12:
	%tmp.144 = getelementptr %Razz, %Razz* %tmp.142, i32 0, i32 0
	%tmp.145 = load %Razz_vtable*, %Razz_vtable** %tmp.144
	%tmp.146 = getelementptr %Razz_vtable, %Razz_vtable* %tmp.145, i32 0, i32 11
	%tmp.147 = load i32 (%Razz*) *, i32 (%Razz*) ** %tmp.146
	%tmp.148 = call i32(%Razz*) %tmp.147( %Razz* %tmp.142 )
	%tmp.149 = add i32 %tmp.141, %tmp.148
	store i32 %tmp.149, i32* %tmp.105
	ret %Razz* %tmp.3

abort:
	call void @abort(  )
	unreachable
}

define %Bar* @Bar_new() {

entry:
	%tmp.0 = getelementptr %Bar_vtable, %Bar_vtable* @Bar_vtable_prototype, i32 0, i32 1
	%tmp.1 = load i32, i32* %tmp.0
	%tmp.2 = call i8*(i32) @malloc( i32 %tmp.1 )
	%tmp.3 = bitcast i8* %tmp.2 to %Bar*
	%tmp.4 = getelementptr %Bar, %Bar* %tmp.3, i32 0, i32 0
	store %Bar_vtable* @Bar_vtable_prototype, %Bar_vtable** %tmp.4
	%tmp.5 = alloca %Bar*
	store %Bar* %tmp.3, %Bar** %tmp.5
	%tmp.6 = getelementptr %Bar, %Bar* %tmp.3, i32 0, i32 1
	store i32 1, i32* %tmp.6
	%tmp.7 = getelementptr %Bar, %Bar* %tmp.3, i32 0, i32 2
	%tmp.8 = load %Bar*, %Bar** %tmp.5
	%tmp.9 = icmp eq %Bar* %tmp.8, null
	br i1 %tmp.9, label %abort, label %ok.0

ok.0:
	%tmp.10 = getelementptr %Bar, %Bar* %tmp.8, i32 0, i32 0
	%tmp.11 = load %Bar_vtable*, %Bar_vtable** %tmp.10
	%tmp.12 = getelementptr %Bar_vtable, %Bar_vtable* %tmp.11, i32 0, i32 0
	%tmp.13 = load i32, i32* %tmp.12
	br label %case.hdr.0

case.hdr.0:
	%tmp.14 = alloca %Foo*
	br label %case.8.0

case.8.0:
	%vtpm.60 = icmp slt i32 %tmp.13, 8
	br i1 %vtpm.60, label %br_exit.8.0, label %src_gte_br.8.0

src_gte_br.8.0:
	%vtpm.61 = icmp sgt i32 %tmp.13, 8
	br i1 %vtpm.61, label %br_exit.8.0, label %src_lte_mc.8.0

src_lte_mc.8.0:
	%vtpm.62 = alloca %Bar*
	store %Bar* %tmp.8, %Bar** %vtpm.62
	%tmp.15 = load %Bar*, %Bar** %vtpm.62
	%tmp.16 = bitcast %Bar* %tmp.15 to %Foo*
	store %Foo* %tmp.16, %Foo** %tmp.14
	br label %case.exit.0

br_exit.8.0:
	br label %case.7.0

case.7.0:
	%vtpm.63 = icmp slt i32 %tmp.13, 7
	br i1 %vtpm.63, label %br_exit.7.0, label %src_gte_br.7.0

src_gte_br.7.0:
	%vtpm.64 = icmp sgt i32 %tmp.13, 8
	br i1 %vtpm.64, label %br_exit.7.0, label %src_lte_mc.7.0

src_lte_mc.7.0:
	%vtpm.65 = alloca %Razz*
	%tmp.17 = bitcast %Bar* %tmp.8 to %Razz*
	store %Razz* %tmp.17, %Razz** %vtpm.65
	%tmp.18 = call %Bar* @Bar_new(  )
	%tmp.19 = bitcast %Bar* %tmp.18 to %Foo*
	store %Foo* %tmp.19, %Foo** %tmp.14
	br label %case.exit.0

br_exit.7.0:
	br label %case.6.0

case.6.0:
	%vtpm.66 = icmp slt i32 %tmp.13, 6
	br i1 %vtpm.66, label %br_exit.6.0, label %src_gte_br.6.0

src_gte_br.6.0:
	%vtpm.67 = icmp sgt i32 %tmp.13, 8
	br i1 %vtpm.67, label %br_exit.6.0, label %src_lte_mc.6.0

src_lte_mc.6.0:
	%vtpm.68 = alloca %Foo*
	%tmp.20 = bitcast %Bar* %tmp.8 to %Foo*
	store %Foo* %tmp.20, %Foo** %vtpm.68
	%tmp.21 = call %Razz* @Razz_new(  )
	%tmp.22 = bitcast %Razz* %tmp.21 to %Foo*
	store %Foo* %tmp.22, %Foo** %tmp.14
	br label %case.exit.0

br_exit.6.0:
	br label %case.5.0

case.5.0:
	%vtpm.69 = icmp slt i32 %tmp.13, 5
	br i1 %vtpm.69, label %br_exit.5.0, label %src_gte_br.5.0

src_gte_br.5.0:
	%vtpm.70 = icmp sgt i32 %tmp.13, 8
	br i1 %vtpm.70, label %br_exit.5.0, label %src_lte_mc.5.0

src_lte_mc.5.0:
	%vtpm.71 = alloca %Bazz*
	%tmp.23 = bitcast %Bar* %tmp.8 to %Bazz*
	store %Bazz* %tmp.23, %Bazz** %vtpm.71
	%tmp.24 = call %Foo* @Foo_new(  )
	store %Foo* %tmp.24, %Foo** %tmp.14
	br label %case.exit.0

br_exit.5.0:
	br label %abort

case.exit.0:
	%tmp.25 = load %Foo*, %Foo** %tmp.14
	store %Foo* %tmp.25, %Foo** %tmp.7
	%tmp.26 = getelementptr %Bar, %Bar* %tmp.3, i32 0, i32 3
	%tmp.27 = load %Bar*, %Bar** %tmp.5
	%tmp.28 = icmp eq %Bar* %tmp.27, null
	br i1 %tmp.28, label %abort, label %ok.1

ok.1:
	%tmp.29 = getelementptr %Bar, %Bar* %tmp.27, i32 0, i32 0
	%tmp.30 = load %Bar_vtable*, %Bar_vtable** %tmp.29
	%tmp.31 = getelementptr %Bar_vtable, %Bar_vtable* %tmp.30, i32 0, i32 11
	%tmp.32 = load i32 (%Bar*) *, i32 (%Bar*) ** %tmp.31
	%tmp.33 = call i32(%Bar*) %tmp.32( %Bar* %tmp.27 )
	%tmp.35 = call %Int* @Int_new(  )
	call void(%Int*, i32) @Int_init( %Int* %tmp.35, i32 %tmp.33 )
	%tmp.36 = bitcast %Int* %tmp.35 to %Object*
	store %Object* %tmp.36, %Object** %tmp.26
	%tmp.37 = getelementptr %Bar, %Bar* %tmp.3, i32 0, i32 4
	%tmp.38 = load %Bar*, %Bar** %tmp.5
	%tmp.39 = icmp eq %Bar* %tmp.38, null
	br i1 %tmp.39, label %abort, label %ok.2

ok.2:
	%tmp.40 = getelementptr %Bar, %Bar* %tmp.38, i32 0, i32 0
	%tmp.41 = load %Bar_vtable*, %Bar_vtable** %tmp.40
	%tmp.42 = getelementptr %Bar_vtable, %Bar_vtable* %tmp.41, i32 0, i32 0
	%tmp.43 = load i32, i32* %tmp.42
	br label %case.hdr.1

case.hdr.1:
	%tmp.44 = alloca %Bar*
	br label %case.8.1

case.8.1:
	%vtpm.72 = icmp slt i32 %tmp.43, 8
	br i1 %vtpm.72, label %br_exit.8.1, label %src_gte_br.8.1

src_gte_br.8.1:
	%vtpm.73 = icmp sgt i32 %tmp.43, 8
	br i1 %vtpm.73, label %br_exit.8.1, label %src_lte_mc.8.1

src_lte_mc.8.1:
	%vtpm.74 = alloca %Bar*
	store %Bar* %tmp.38, %Bar** %vtpm.74
	%tmp.45 = load %Bar*, %Bar** %vtpm.74
	%tmp.46 = bitcast %Bar* %tmp.45 to %Razz*
	%tmp.47 = bitcast %Razz* %tmp.46 to %Bar*
	store %Bar* %tmp.47, %Bar** %tmp.44
	br label %case.exit.1

br_exit.8.1:
	br label %case.7.1

case.7.1:
	%vtpm.75 = icmp slt i32 %tmp.43, 7
	br i1 %vtpm.75, label %br_exit.7.1, label %src_gte_br.7.1

src_gte_br.7.1:
	%vtpm.76 = icmp sgt i32 %tmp.43, 8
	br i1 %vtpm.76, label %br_exit.7.1, label %src_lte_mc.7.1

src_lte_mc.7.1:
	%vtpm.77 = alloca %Razz*
	%tmp.48 = bitcast %Bar* %tmp.38 to %Razz*
	store %Razz* %tmp.48, %Razz** %vtpm.77
	%tmp.49 = call %Bar* @Bar_new(  )
	%tmp.50 = bitcast %Bar* %tmp.49 to %Razz*
	%tmp.51 = bitcast %Razz* %tmp.50 to %Bar*
	store %Bar* %tmp.51, %Bar** %tmp.44
	br label %case.exit.1

br_exit.7.1:
	br label %case.6.1

case.6.1:
	%vtpm.78 = icmp slt i32 %tmp.43, 6
	br i1 %vtpm.78, label %br_exit.6.1, label %src_gte_br.6.1

src_gte_br.6.1:
	%vtpm.79 = icmp sgt i32 %tmp.43, 8
	br i1 %vtpm.79, label %br_exit.6.1, label %src_lte_mc.6.1

src_lte_mc.6.1:
	%vtpm.80 = alloca %Foo*
	%tmp.52 = bitcast %Bar* %tmp.38 to %Foo*
	store %Foo* %tmp.52, %Foo** %vtpm.80
	%tmp.53 = call %Razz* @Razz_new(  )
	%tmp.54 = bitcast %Razz* %tmp.53 to %Bar*
	store %Bar* %tmp.54, %Bar** %tmp.44
	br label %case.exit.1

br_exit.6.1:
	br label %abort

case.exit.1:
	%tmp.55 = load %Bar*, %Bar** %tmp.44
	%tmp.56 = bitcast %Bar* %tmp.55 to %Razz*
	store %Razz* %tmp.56, %Razz** %tmp.37
	%tmp.57 = getelementptr %Bar, %Bar* %tmp.3, i32 0, i32 5
	%tmp.58 = load %Bar*, %Bar** %tmp.5
	%tmp.59 = getelementptr %Bar, %Bar* %tmp.58, i32 0, i32 4
	%tmp.60 = load %Razz*, %Razz** %tmp.59
	%tmp.61 = icmp eq %Razz* %tmp.60, null
	br i1 %tmp.61, label %abort, label %ok.3

ok.3:
	%tmp.62 = getelementptr %Razz, %Razz* %tmp.60, i32 0, i32 0
	%tmp.63 = load %Razz_vtable*, %Razz_vtable** %tmp.62
	%tmp.64 = getelementptr %Razz_vtable, %Razz_vtable* %tmp.63, i32 0, i32 12
	%tmp.65 = load i32 (%Razz*) *, i32 (%Razz*) ** %tmp.64
	%tmp.66 = call i32(%Razz*) %tmp.65( %Razz* %tmp.60 )
	%tmp.67 = load %Bar*, %Bar** %tmp.5
	%tmp.68 = getelementptr %Bar, %Bar* %tmp.67, i32 0, i32 2
	%tmp.69 = load %Foo*, %Foo** %tmp.68
	%tmp.70 = icmp eq %Foo* %tmp.69, null
	br i1 %tmp.70, label %abort, label %ok.4

ok.4:
	%tmp.71 = getelementptr %Foo, %Foo* %tmp.69, i32 0, i32 0
	%tmp.72 = load %Foo_vtable*, %Foo_vtable** %tmp.71
	%tmp.73 = getelementptr %Foo_vtable, %Foo_vtable* %tmp.72, i32 0, i32 12
	%tmp.74 = load i32 (%Foo*) *, i32 (%Foo*) ** %tmp.73
	%tmp.75 = call i32(%Foo*) %tmp.74( %Foo* %tmp.69 )
	%tmp.76 = add i32 %tmp.66, %tmp.75
	%tmp.77 = load %Bar*, %Bar** %tmp.5
	%tmp.78 = icmp eq %Bar* %tmp.77, null
	br i1 %tmp.78, label %abort, label %ok.5

ok.5:
	%tmp.79 = getelementptr %Bar, %Bar* %tmp.77, i32 0, i32 0
	%tmp.80 = load %Bar_vtable*, %Bar_vtable** %tmp.79
	%tmp.81 = getelementptr %Bar_vtable, %Bar_vtable* %tmp.80, i32 0, i32 12
	%tmp.82 = load i32 (%Bar*) *, i32 (%Bar*) ** %tmp.81
	%tmp.83 = call i32(%Bar*) %tmp.82( %Bar* %tmp.77 )
	%tmp.84 = add i32 %tmp.76, %tmp.83
	%tmp.85 = load %Bar*, %Bar** %tmp.5
	%tmp.86 = icmp eq %Bar* %tmp.85, null
	br i1 %tmp.86, label %abort, label %ok.6

ok.6:
	%tmp.87 = getelementptr %Bar, %Bar* %tmp.85, i32 0, i32 0
	%tmp.88 = load %Bar_vtable*, %Bar_vtable** %tmp.87
	%tmp.89 = getelementptr %Bar_vtable, %Bar_vtable* %tmp.88, i32 0, i32 11
	%tmp.90 = load i32 (%Bar*) *, i32 (%Bar*) ** %tmp.89
	%tmp.91 = call i32(%Bar*) %tmp.90( %Bar* %tmp.85 )
	%tmp.92 = add i32 %tmp.84, %tmp.91
	store i32 %tmp.92, i32* %tmp.57
	%tmp.93 = getelementptr %Bar, %Bar* %tmp.3, i32 0, i32 6
	%tmp.94 = load %Bar*, %Bar** %tmp.5
	%tmp.95 = icmp eq %Bar* %tmp.94, null
	br i1 %tmp.95, label %abort, label %ok.7

ok.7:
	%tmp.96 = getelementptr %Bar, %Bar* %tmp.94, i32 0, i32 0
	%tmp.97 = load %Bar_vtable*, %Bar_vtable** %tmp.96
	%tmp.98 = getelementptr %Bar_vtable, %Bar_vtable* %tmp.97, i32 0, i32 0
	%tmp.99 = load i32, i32* %tmp.98
	br label %case.hdr.2

case.hdr.2:
	%tmp.100 = alloca %Bar*
	br label %case.8.2

case.8.2:
	%vtpm.81 = icmp slt i32 %tmp.99, 8
	br i1 %vtpm.81, label %br_exit.8.2, label %src_gte_br.8.2

src_gte_br.8.2:
	%vtpm.82 = icmp sgt i32 %tmp.99, 8
	br i1 %vtpm.82, label %br_exit.8.2, label %src_lte_mc.8.2

src_lte_mc.8.2:
	%vtpm.83 = alloca %Bar*
	store %Bar* %tmp.94, %Bar** %vtpm.83
	%tmp.101 = load %Bar*, %Bar** %vtpm.83
	store %Bar* %tmp.101, %Bar** %tmp.100
	br label %case.exit.2

br_exit.8.2:
	br label %case.7.2

case.7.2:
	%vtpm.84 = icmp slt i32 %tmp.99, 7
	br i1 %vtpm.84, label %br_exit.7.2, label %src_gte_br.7.2

src_gte_br.7.2:
	%vtpm.85 = icmp sgt i32 %tmp.99, 8
	br i1 %vtpm.85, label %br_exit.7.2, label %src_lte_mc.7.2

src_lte_mc.7.2:
	%vtpm.86 = alloca %Razz*
	%tmp.102 = bitcast %Bar* %tmp.94 to %Razz*
	store %Razz* %tmp.102, %Razz** %vtpm.86
	%tmp.103 = call %Bar* @Bar_new(  )
	store %Bar* %tmp.103, %Bar** %tmp.100
	br label %case.exit.2

br_exit.7.2:
	br label %abort

case.exit.2:
	%tmp.104 = load %Bar*, %Bar** %tmp.100
	store %Bar* %tmp.104, %Bar** %tmp.93
	%tmp.105 = getelementptr %Bar, %Bar* %tmp.3, i32 0, i32 7
	%tmp.106 = load %Bar*, %Bar** %tmp.5
	%tmp.107 = getelementptr %Bar, %Bar* %tmp.106, i32 0, i32 4
	%tmp.108 = load %Razz*, %Razz** %tmp.107
	%tmp.109 = icmp eq %Razz* %tmp.108, null
	br i1 %tmp.109, label %abort, label %ok.8

ok.8:
	%tmp.110 = getelementptr %Bazz_vtable, %Bazz_vtable* @Bazz_vtable_prototype, i32 0, i32 12
	%tmp.111 = load i32 (%Bazz*) *, i32 (%Bazz*) ** %tmp.110
	%tmp.112 = bitcast %Razz* %tmp.108 to %Bazz*
	%tmp.113 = call i32(%Bazz*) %tmp.111( %Bazz* %tmp.112 )
	%tmp.114 = load %Bar*, %Bar** %tmp.5
	%tmp.115 = getelementptr %Bar, %Bar* %tmp.114, i32 0, i32 2
	%tmp.116 = load %Foo*, %Foo** %tmp.115
	%tmp.117 = icmp eq %Foo* %tmp.116, null
	br i1 %tmp.117, label %abort, label %ok.9

ok.9:
	%tmp.118 = getelementptr %Foo, %Foo* %tmp.116, i32 0, i32 0
	%tmp.119 = load %Foo_vtable*, %Foo_vtable** %tmp.118
	%tmp.120 = getelementptr %Foo_vtable, %Foo_vtable* %tmp.119, i32 0, i32 12
	%tmp.121 = load i32 (%Foo*) *, i32 (%Foo*) ** %tmp.120
	%tmp.122 = call i32(%Foo*) %tmp.121( %Foo* %tmp.116 )
	%tmp.123 = add i32 %tmp.113, %tmp.122
	%tmp.124 = load %Bar*, %Bar** %tmp.5
	%tmp.125 = getelementptr %Bar, %Bar* %tmp.124, i32 0, i32 6
	%tmp.126 = load %Bar*, %Bar** %tmp.125
	%tmp.127 = icmp eq %Bar* %tmp.126, null
	br i1 %tmp.127, label %abort, label %ok.10

ok.10:
	%tmp.128 = getelementptr %Bar, %Bar* %tmp.126, i32 0, i32 0
	%tmp.129 = load %Bar_vtable*, %Bar_vtable** %tmp.128
	%tmp.130 = getelementptr %Bar_vtable, %Bar_vtable* %tmp.129, i32 0, i32 12
	%tmp.131 = load i32 (%Bar*) *, i32 (%Bar*) ** %tmp.130
	%tmp.132 = call i32(%Bar*) %tmp.131( %Bar* %tmp.126 )
	%tmp.133 = add i32 %tmp.123, %tmp.132
	%tmp.134 = load %Bar*, %Bar** %tmp.5
	%tmp.135 = icmp eq %Bar* %tmp.134, null
	br i1 %tmp.135, label %abort, label %ok.11

ok.11:
	%tmp.136 = getelementptr %Bar, %Bar* %tmp.134, i32 0, i32 0
	%tmp.137 = load %Bar_vtable*, %Bar_vtable** %tmp.136
	%tmp.138 = getelementptr %Bar_vtable, %Bar_vtable* %tmp.137, i32 0, i32 12
	%tmp.139 = load i32 (%Bar*) *, i32 (%Bar*) ** %tmp.138
	%tmp.140 = call i32(%Bar*) %tmp.139( %Bar* %tmp.134 )
	%tmp.141 = add i32 %tmp.133, %tmp.140
	%tmp.142 = load %Bar*, %Bar** %tmp.5
	%tmp.143 = icmp eq %Bar* %tmp.142, null
	br i1 %tmp.143, label %abort, label %ok.12

ok.12:
	%tmp.144 = getelementptr %Bar, %Bar* %tmp.142, i32 0, i32 0
	%tmp.145 = load %Bar_vtable*, %Bar_vtable** %tmp.144
	%tmp.146 = getelementptr %Bar_vtable, %Bar_vtable* %tmp.145, i32 0, i32 11
	%tmp.147 = load i32 (%Bar*) *, i32 (%Bar*) ** %tmp.146
	%tmp.148 = call i32(%Bar*) %tmp.147( %Bar* %tmp.142 )
	%tmp.149 = add i32 %tmp.141, %tmp.148
	store i32 %tmp.149, i32* %tmp.105
	%tmp.150 = getelementptr %Bar, %Bar* %tmp.3, i32 0, i32 8
	%tmp.151 = load %Bar*, %Bar** %tmp.5
	%tmp.152 = icmp eq %Bar* %tmp.151, null
	br i1 %tmp.152, label %abort, label %ok.13

ok.13:
	%tmp.153 = getelementptr %Bar, %Bar* %tmp.151, i32 0, i32 0
	%tmp.154 = load %Bar_vtable*, %Bar_vtable** %tmp.153
	%tmp.155 = getelementptr %Bar_vtable, %Bar_vtable* %tmp.154, i32 0, i32 12
	%tmp.156 = load i32 (%Bar*) *, i32 (%Bar*) ** %tmp.155
	%tmp.157 = call i32(%Bar*) %tmp.156( %Bar* %tmp.151 )
	store i32 %tmp.157, i32* %tmp.150
	%tmp.158 = getelementptr %Bar, %Bar* %tmp.3, i32 0, i32 9
	%tmp.159 = load %Bar*, %Bar** %tmp.5
	%tmp.160 = icmp eq %Bar* %tmp.159, null
	br i1 %tmp.160, label %abort, label %ok.14

ok.14:
	%tmp.161 = getelementptr %Bar, %Bar* %tmp.159, i32 0, i32 0
	%tmp.162 = load %Bar_vtable*, %Bar_vtable** %tmp.161
	%tmp.163 = getelementptr %Bar_vtable, %Bar_vtable* %tmp.162, i32 0, i32 11
	%tmp.164 = load i32 (%Bar*) *, i32 (%Bar*) ** %tmp.163
	%tmp.165 = call i32(%Bar*) %tmp.164( %Bar* %tmp.159 )
	%tmp.167 = call %Int* @Int_new(  )
	call void(%Int*, i32) @Int_init( %Int* %tmp.167, i32 %tmp.165 )
	%tmp.168 = bitcast %Int* %tmp.167 to %Object*
	store %Object* %tmp.168, %Object** %tmp.158
	ret %Bar* %tmp.3

abort:
	call void @abort(  )
	unreachable
}

define %String* @Main_main(%Main* %self) {

entry:
	%tmp.0 = alloca %Main*
	store %Main* %self, %Main** %tmp.0
	ret %String* @String.1

abort:
	call void @abort(  )
	unreachable
}

define %Main* @Main_new() {

entry:
	%tmp.1 = getelementptr %Main_vtable, %Main_vtable* @Main_vtable_prototype, i32 0, i32 1
	%tmp.2 = load i32, i32* %tmp.1
	%tmp.3 = call i8*(i32) @malloc( i32 %tmp.2 )
	%tmp.4 = bitcast i8* %tmp.3 to %Main*
	%tmp.5 = getelementptr %Main, %Main* %tmp.4, i32 0, i32 0
	store %Main_vtable* @Main_vtable_prototype, %Main_vtable** %tmp.5
	%tmp.6 = alloca %Main*
	store %Main* %tmp.4, %Main** %tmp.6
	%tmp.7 = getelementptr %Main, %Main* %tmp.4, i32 0, i32 1
	%tmp.8 = call %Bazz* @Bazz_new(  )
	store %Bazz* %tmp.8, %Bazz** %tmp.7
	%tmp.9 = getelementptr %Main, %Main* %tmp.4, i32 0, i32 2
	%tmp.10 = call %Foo* @Foo_new(  )
	store %Foo* %tmp.10, %Foo** %tmp.9
	%tmp.11 = getelementptr %Main, %Main* %tmp.4, i32 0, i32 3
	%tmp.12 = call %Razz* @Razz_new(  )
	store %Razz* %tmp.12, %Razz** %tmp.11
	%tmp.13 = getelementptr %Main, %Main* %tmp.4, i32 0, i32 4
	%tmp.14 = call %Bar* @Bar_new(  )
	store %Bar* %tmp.14, %Bar** %tmp.13
	ret %Main* %tmp.4

abort:
	call void @abort(  )
	unreachable
}

